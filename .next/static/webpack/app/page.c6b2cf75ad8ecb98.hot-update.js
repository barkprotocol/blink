"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/iwoUtils.ts":
/*!***************************!*\
  !*** ./utils/iwoUtils.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CIRCULATING_SUPPLY: () => (/* binding */ CIRCULATING_SUPPLY),\n/* harmony export */   LOCKED_SUPPLY: () => (/* binding */ LOCKED_SUPPLY),\n/* harmony export */   MAX_SUPPLY: () => (/* binding */ MAX_SUPPLY),\n/* harmony export */   TOTAL_SUPPLY: () => (/* binding */ TOTAL_SUPPLY),\n/* harmony export */   calculateBidWeight: () => (/* binding */ calculateBidWeight),\n/* harmony export */   calculateTokenAllocation: () => (/* binding */ calculateTokenAllocation),\n/* harmony export */   fetchAllocatedTokens: () => (/* binding */ fetchAllocatedTokens),\n/* harmony export */   fetchBARKTokenSupply: () => (/* binding */ fetchBARKTokenSupply),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatTimeRemaining: () => (/* binding */ formatTimeRemaining),\n/* harmony export */   initializeMultiChainConnection: () => (/* binding */ initializeMultiChainConnection),\n/* harmony export */   initializeSolanaConnection: () => (/* binding */ initializeSolanaConnection),\n/* harmony export */   iwoEndTime: () => (/* binding */ iwoEndTime),\n/* harmony export */   submitBidToBlockchain: () => (/* binding */ submitBidToBlockchain),\n/* harmony export */   useIWOData: () => (/* binding */ useIWOData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.1.1_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(app-pages-browser)/./node_modules/.pnpm/@solana+web3.js@1.98.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @coral-xyz/anchor */ \"(app-pages-browser)/./node_modules/.pnpm/@coral-xyz+anchor@0.30.1_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@coral-xyz/anchor/dist/browser/index.js\");\n/* harmony import */ var _lib_programs_iwo_program_idl_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/programs/iwo_program_idl.json */ \"(app-pages-browser)/./lib/programs/iwo_program_idl.json\");\n\n\n\n\nconsole.log('IDL:', _lib_programs_iwo_program_idl_json__WEBPACK_IMPORTED_MODULE_3__);\nconst TOTAL_SUPPLY = 18446744073;\nconst CIRCULATING_SUPPLY = 18228391052.057774;\nconst LOCKED_SUPPLY = 2999688600;\nconst MAX_SUPPLY = 18446744073;\nconst BARK_TOKEN_MINT_ADDRESS = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXkQd5J8X8wnF8MPzYx\" || 0);\nconst IWO_POOL_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"BARKkeAwhTuFzcLHX4DjotRsmjXQ1MshGrZbn1CUQqMo\" || 0);\nconst VESTING_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey('GKb2vF9RE1UPhV6hQi7yiL5tCsdajbJHyTm87zhN3qiU');\nlet connection;\nlet program;\nasync function initializeSolanaConnection() {\n    connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Connection(\"https://api.devnet.solana.com\" || 0, 'confirmed');\n    if ( true && window.solana) {\n        try {\n            const wallet = window.solana;\n            const provider = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.AnchorProvider(connection, wallet, {\n                preflightCommitment: 'confirmed'\n            });\n            console.log('Provider:', provider);\n            console.log('IWO_POOL_ID:', IWO_POOL_ID.toBase58());\n            if (!_lib_programs_iwo_program_idl_json__WEBPACK_IMPORTED_MODULE_3__) {\n                throw new Error('IDL is undefined. Make sure the IDL file is properly imported.');\n            }\n            // Add missing properties to the IDL\n            const completeIdl = {\n                ..._lib_programs_iwo_program_idl_json__WEBPACK_IMPORTED_MODULE_3__,\n                metadata: {\n                    name: \"iwo_program\",\n                    version: \"0.1.0\"\n                }\n            };\n            program = new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.Program(completeIdl, IWO_POOL_ID, provider);\n            if (!program) {\n                throw new Error('Failed to initialize program. Check your IDL and IWO_POOL_ID.');\n            }\n            console.log('Program initialized successfully');\n        } catch (error) {\n            console.error('Error initializing program:', error);\n            if (error instanceof _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.AnchorError) {\n                console.error('AnchorError:', error.message);\n                console.error('Error logs:', error.logs);\n            }\n            if (error instanceof Error) {\n                throw new Error(\"Failed to initialize Solana connection: \".concat(error.message));\n            } else {\n                throw new Error('Failed to initialize Solana connection: Unknown error');\n            }\n        }\n    } else {\n        throw new Error('Solana object not found! Make sure you have a Solana wallet installed.');\n    }\n}\nasync function initializeMultiChainConnection(chain) {\n    if (chain === 'solana') {\n        await initializeSolanaConnection();\n    } else if (chain === 'sui') {\n        console.log('SUI connection not yet implemented');\n    }\n}\nasync function fetchBARKTokenSupply() {\n    if (!connection) await initializeSolanaConnection();\n    const tokenSupply = await connection.getTokenSupply(BARK_TOKEN_MINT_ADDRESS);\n    return tokenSupply.value.uiAmount || 0;\n}\nasync function fetchAllocatedTokens() {\n    if (!connection) await initializeSolanaConnection();\n    const iwoAccount = await connection.getAccountInfo(IWO_POOL_ID);\n    if (!iwoAccount) {\n        console.error('IWO account not found');\n        return 0;\n    }\n    // Parse iwoAccount data to get allocated tokens\n    // This is a placeholder implementation\n    return CIRCULATING_SUPPLY - LOCKED_SUPPLY;\n}\nfunction calculateBidWeight(amount, vestingPeriod) {\n    return amount * (1 + vestingPeriod / 12);\n}\nfunction calculateTokenAllocation(bid, totalWeight, availableTokens) {\n    return bid.weight / totalWeight * availableTokens;\n}\nasync function submitBidToBlockchain(amount, vestingPeriod, walletAddress) {\n    if (!connection || !program) await initializeSolanaConnection();\n    if (!program) {\n        throw new Error('Program not initialized');\n    }\n    const fromPubkey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(walletAddress);\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction().add(await program.methods.submitBid(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(amount), vestingPeriod).accounts({\n        user: fromPubkey,\n        iwoPool: IWO_POOL_ID,\n        systemProgram: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.programId\n    }).instruction());\n    try {\n        const wallet = window.solana;\n        const signature = await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.sendAndConfirmTransaction)(connection, transaction, [\n            wallet\n        ]);\n        return signature;\n    } catch (error) {\n        console.error('Error submitting bid to blockchain:', error);\n        throw error;\n    }\n}\nfunction formatNumber(num) {\n    return new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3\n    }).format(num);\n}\nfunction formatTimeRemaining(ms) {\n    const days = Math.floor(ms / (24 * 60 * 60 * 1000));\n    const hours = Math.floor(ms % (24 * 60 * 60 * 1000) / (60 * 60 * 1000));\n    const minutes = Math.floor(ms % (60 * 60 * 1000) / (60 * 1000));\n    return \"\".concat(days, \"d \").concat(hours, \"h \").concat(minutes, \"m\");\n}\nfunction useIWOData() {\n    let chain = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'solana';\n    const [bids, setBids] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [allocatedTokens, setAllocatedTokens] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [timeRemaining, setTimeRemaining] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [totalWeight, setTotalWeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useIWOData.useEffect\": ()=>{\n            let isMounted = true;\n            const fetchData = {\n                \"useIWOData.useEffect.fetchData\": async ()=>{\n                    try {\n                        await initializeMultiChainConnection(chain);\n                        const allocated = await fetchAllocatedTokens();\n                        if (isMounted) setAllocatedTokens(allocated);\n                        if (program) {\n                            // Fetch bids from the program\n                            const iwoPool = await program.account.iwoPool.fetch(IWO_POOL_ID);\n                            if (isMounted && iwoPool.bids) {\n                                const formattedBids = iwoPool.bids.map({\n                                    \"useIWOData.useEffect.fetchData.formattedBids\": (bid)=>({\n                                            id: bid.publicKey.toBase58(),\n                                            userId: bid.account.bidder.toBase58(),\n                                            amount: bid.account.amount.toNumber(),\n                                            vestingPeriod: bid.account.vestingPeriod,\n                                            weight: bid.account.weight.toNumber(),\n                                            transactionSignature: '',\n                                            timestamp: new Date(bid.account.timestamp.toNumber() * 1000).toISOString()\n                                        })\n                                }[\"useIWOData.useEffect.fetchData.formattedBids\"]);\n                                setBids(formattedBids);\n                                const weight = formattedBids.reduce({\n                                    \"useIWOData.useEffect.fetchData.weight\": (sum, bid)=>sum + bid.weight\n                                }[\"useIWOData.useEffect.fetchData.weight\"], 0);\n                                setTotalWeight(weight);\n                            }\n                        }\n                    } catch (error) {\n                        console.error('Error fetching IWO data:', error);\n                    }\n                }\n            }[\"useIWOData.useEffect.fetchData\"];\n            fetchData();\n            const interval = setInterval({\n                \"useIWOData.useEffect.interval\": ()=>{\n                    if (isMounted) setTimeRemaining(Math.max(0, iwoEndTime.getTime() - Date.now()));\n                }\n            }[\"useIWOData.useEffect.interval\"], 1000);\n            return ({\n                \"useIWOData.useEffect\": ()=>{\n                    isMounted = false;\n                    clearInterval(interval);\n                }\n            })[\"useIWOData.useEffect\"];\n        }\n    }[\"useIWOData.useEffect\"], [\n        chain\n    ]);\n    const submitBid = async (amount, vestingPeriod, walletAddress)=>{\n        try {\n            const signature = await submitBidToBlockchain(amount, vestingPeriod, walletAddress);\n            const weight = calculateBidWeight(amount, vestingPeriod);\n            const newBid = {\n                id: signature,\n                userId: walletAddress,\n                amount,\n                vestingPeriod,\n                weight,\n                transactionSignature: signature,\n                timestamp: new Date().toISOString()\n            };\n            setBids([\n                ...bids,\n                newBid\n            ]);\n            setAllocatedTokens(allocatedTokens + amount);\n            setTotalWeight(totalWeight + weight);\n            return signature;\n        } catch (error) {\n            console.error('Error submitting bid:', error);\n            throw error;\n        }\n    };\n    return {\n        bids,\n        allocatedTokens,\n        timeRemaining,\n        totalWeight,\n        submitBid\n    };\n}\nconst iwoEndTime = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 days from now\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/iwoUtils.ts\n"));

/***/ })

});