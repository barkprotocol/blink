"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq";
exports.ids = ["vendor-chunks/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js ***!
  \***************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceWorkerWindowChannel = void 0;\nconst connect_common_1 = __webpack_require__(/*! @trezor/connect-common */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-common@0.2.7_react-native@0.76.5_@babel+core@7.26.0_@babel+preset-env@7.26.0__pt2rvbnrbwblbf2y6g4exknnyq/node_modules/@trezor/connect-common/lib/index.js\");\nclass ServiceWorkerWindowChannel extends connect_common_1.AbstractMessageChannel {\n    constructor({ name, channel, logger, lazyHandshake, legacyMode, allowSelfOrigin = false, currentId, }) {\n        super({\n            channel,\n            sendFn: (message) => {\n                if (!this.port)\n                    throw new Error('port not assigned');\n                this.port.postMessage(message);\n            },\n            logger,\n            lazyHandshake,\n            legacyMode,\n        });\n        this.name = name;\n        this.allowSelfOrigin = allowSelfOrigin;\n        this.currentId = currentId;\n        this.connect();\n    }\n    connect() {\n        chrome.runtime.onConnect.addListener(port => {\n            var _a, _b, _c, _d;\n            if (port.name !== this.name)\n                return;\n            if (((_a = this.currentId) === null || _a === void 0 ? void 0 : _a.call(this)) && ((_b = this.currentId) === null || _b === void 0 ? void 0 : _b.call(this)) !== ((_d = (_c = port.sender) === null || _c === void 0 ? void 0 : _c.tab) === null || _d === void 0 ? void 0 : _d.id))\n                return;\n            this.port = port;\n            this.port.onMessage.addListener((message, { sender }) => {\n                var _a, _b, _c, _d, _e;\n                if (!sender) {\n                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('service-worker-window', 'no sender');\n                    return;\n                }\n                const { origin } = sender;\n                const whitelist = [\n                    'https://connect.trezor.io',\n                    'https://staging-connect.trezor.io',\n                    'https://suite.corp.sldev.cz',\n                    'https://dev.suite.sldev.cz',\n                    'http://localhost:8088',\n                ];\n                const webextensionId = (_b = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _b === void 0 ? void 0 : _b.id;\n                if (webextensionId) {\n                    whitelist.push(`chrome-extension://${webextensionId}`);\n                }\n                const webextensionUrl = (_c = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _c === void 0 ? void 0 : _c.getURL('');\n                if (webextensionUrl) {\n                    whitelist.push(webextensionUrl.slice(0, -1));\n                }\n                if (!origin) {\n                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('connect-webextension/messageChannel/extensionPort/onMessage', 'no origin');\n                    return;\n                }\n                if (!whitelist.includes(origin)) {\n                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.error('connect-webextension/messageChannel/extensionPort/onMessage', 'origin not whitelisted', origin);\n                    return;\n                }\n                if (origin === self.origin && !this.allowSelfOrigin) {\n                    return;\n                }\n                this.onMessage(message);\n            });\n        });\n        this.isConnected = true;\n    }\n    disconnect() {\n        var _a;\n        if (!this.isConnected)\n            return;\n        (_a = this.port) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.clear();\n        this.isConnected = false;\n    }\n}\nexports.ServiceWorkerWindowChannel = ServiceWorkerWindowChannel;\n//# sourceMappingURL=serviceworker-window.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9jaGFubmVscy9zZXJ2aWNld29ya2VyLXdpbmRvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQ0FBa0M7QUFDbEMseUJBQXlCLG1CQUFPLENBQUMsb09BQXdCO0FBQ3pEO0FBQ0Esa0JBQWtCLHVGQUF1RjtBQUN6RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFFBQVE7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxlQUFlO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9jaGFubmVscy9zZXJ2aWNld29ya2VyLXdpbmRvdy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmljZVdvcmtlcldpbmRvd0NoYW5uZWwgPSB2b2lkIDA7XG5jb25zdCBjb25uZWN0X2NvbW1vbl8xID0gcmVxdWlyZShcIkB0cmV6b3IvY29ubmVjdC1jb21tb25cIik7XG5jbGFzcyBTZXJ2aWNlV29ya2VyV2luZG93Q2hhbm5lbCBleHRlbmRzIGNvbm5lY3RfY29tbW9uXzEuQWJzdHJhY3RNZXNzYWdlQ2hhbm5lbCB7XG4gICAgY29uc3RydWN0b3IoeyBuYW1lLCBjaGFubmVsLCBsb2dnZXIsIGxhenlIYW5kc2hha2UsIGxlZ2FjeU1vZGUsIGFsbG93U2VsZk9yaWdpbiA9IGZhbHNlLCBjdXJyZW50SWQsIH0pIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgY2hhbm5lbCxcbiAgICAgICAgICAgIHNlbmRGbjogKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucG9ydClcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwb3J0IG5vdCBhc3NpZ25lZCcpO1xuICAgICAgICAgICAgICAgIHRoaXMucG9ydC5wb3N0TWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICBsYXp5SGFuZHNoYWtlLFxuICAgICAgICAgICAgbGVnYWN5TW9kZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuYWxsb3dTZWxmT3JpZ2luID0gYWxsb3dTZWxmT3JpZ2luO1xuICAgICAgICB0aGlzLmN1cnJlbnRJZCA9IGN1cnJlbnRJZDtcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgfVxuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIGNocm9tZS5ydW50aW1lLm9uQ29ubmVjdC5hZGRMaXN0ZW5lcihwb3J0ID0+IHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgICAgIGlmIChwb3J0Lm5hbWUgIT09IHRoaXMubmFtZSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBpZiAoKChfYSA9IHRoaXMuY3VycmVudElkKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbCh0aGlzKSkgJiYgKChfYiA9IHRoaXMuY3VycmVudElkKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbCh0aGlzKSkgIT09ICgoX2QgPSAoX2MgPSBwb3J0LnNlbmRlcikgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnRhYikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmlkKSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB0aGlzLnBvcnQgPSBwb3J0O1xuICAgICAgICAgICAgdGhpcy5wb3J0Lm9uTWVzc2FnZS5hZGRMaXN0ZW5lcigobWVzc2FnZSwgeyBzZW5kZXIgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgICAgICAgICAgICAgaWYgKCFzZW5kZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9hID0gdGhpcy5sb2dnZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5lcnJvcignc2VydmljZS13b3JrZXItd2luZG93JywgJ25vIHNlbmRlcicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHsgb3JpZ2luIH0gPSBzZW5kZXI7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2hpdGVsaXN0ID0gW1xuICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly9jb25uZWN0LnRyZXpvci5pbycsXG4gICAgICAgICAgICAgICAgICAgICdodHRwczovL3N0YWdpbmctY29ubmVjdC50cmV6b3IuaW8nLFxuICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly9zdWl0ZS5jb3JwLnNsZGV2LmN6JyxcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHBzOi8vZGV2LnN1aXRlLnNsZGV2LmN6JyxcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4OCcsXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBjb25zdCB3ZWJleHRlbnNpb25JZCA9IChfYiA9IGNocm9tZSA9PT0gbnVsbCB8fCBjaHJvbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNocm9tZS5ydW50aW1lKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaWQ7XG4gICAgICAgICAgICAgICAgaWYgKHdlYmV4dGVuc2lvbklkKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaXRlbGlzdC5wdXNoKGBjaHJvbWUtZXh0ZW5zaW9uOi8vJHt3ZWJleHRlbnNpb25JZH1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgd2ViZXh0ZW5zaW9uVXJsID0gKF9jID0gY2hyb21lID09PSBudWxsIHx8IGNocm9tZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2hyb21lLnJ1bnRpbWUpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5nZXRVUkwoJycpO1xuICAgICAgICAgICAgICAgIGlmICh3ZWJleHRlbnNpb25VcmwpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpdGVsaXN0LnB1c2god2ViZXh0ZW5zaW9uVXJsLnNsaWNlKDAsIC0xKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghb3JpZ2luKSB7XG4gICAgICAgICAgICAgICAgICAgIChfZCA9IHRoaXMubG9nZ2VyKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QuZXJyb3IoJ2Nvbm5lY3Qtd2ViZXh0ZW5zaW9uL21lc3NhZ2VDaGFubmVsL2V4dGVuc2lvblBvcnQvb25NZXNzYWdlJywgJ25vIG9yaWdpbicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghd2hpdGVsaXN0LmluY2x1ZGVzKG9yaWdpbikpIHtcbiAgICAgICAgICAgICAgICAgICAgKF9lID0gdGhpcy5sb2dnZXIpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5lcnJvcignY29ubmVjdC13ZWJleHRlbnNpb24vbWVzc2FnZUNoYW5uZWwvZXh0ZW5zaW9uUG9ydC9vbk1lc3NhZ2UnLCAnb3JpZ2luIG5vdCB3aGl0ZWxpc3RlZCcsIG9yaWdpbik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9yaWdpbiA9PT0gc2VsZi5vcmlnaW4gJiYgIXRoaXMuYWxsb3dTZWxmT3JpZ2luKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5vbk1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgIH1cbiAgICBkaXNjb25uZWN0KCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmICghdGhpcy5pc0Nvbm5lY3RlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgKF9hID0gdGhpcy5wb3J0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICB9XG59XG5leHBvcnRzLlNlcnZpY2VXb3JrZXJXaW5kb3dDaGFubmVsID0gU2VydmljZVdvcmtlcldpbmRvd0NoYW5uZWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2aWNld29ya2VyLXdpbmRvdy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/window-window.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/window-window.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WindowWindowChannel = void 0;\nconst connect_common_1 = __webpack_require__(/*! @trezor/connect-common */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-common@0.2.7_react-native@0.76.5_@babel+core@7.26.0_@babel+preset-env@7.26.0__pt2rvbnrbwblbf2y6g4exknnyq/node_modules/@trezor/connect-common/lib/index.js\");\nclass WindowWindowChannel extends connect_common_1.AbstractMessageChannel {\n    constructor({ windowHere, windowPeer, channel, logger, origin, legacyMode, }) {\n        super({\n            channel,\n            sendFn: (message) => {\n                var _a;\n                (_a = windowPeer()) === null || _a === void 0 ? void 0 : _a.postMessage(message, origin);\n            },\n            logger,\n            legacyMode,\n        });\n        this._listener = this.listener.bind(this);\n        this._windowHere = windowHere;\n        this.connect();\n    }\n    listener(event) {\n        const message = Object.assign(Object.assign({}, event.data), { success: true, origin: event.origin, payload: event.data.payload || {}, channel: event.data.channel || {\n                peer: this.channel.here,\n                here: this.channel.peer,\n            } });\n        this.onMessage(message);\n    }\n    connect() {\n        this._windowHere.addEventListener('message', this._listener);\n        this.isConnected = true;\n    }\n    disconnect() {\n        if (!this.isConnected)\n            return;\n        this._windowHere.removeEventListener('message', this._listener);\n        this.isConnected = false;\n    }\n}\nexports.WindowWindowChannel = WindowWindowChannel;\n//# sourceMappingURL=window-window.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9jaGFubmVscy93aW5kb3ctd2luZG93LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix5QkFBeUIsbUJBQU8sQ0FBQyxvT0FBd0I7QUFDekQ7QUFDQSxrQkFBa0IsOERBQThEO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGlCQUFpQixzRUFBc0U7QUFDN0k7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AdHJlem9yK2Nvbm5lY3Qtd2ViQDkuNC43X0BiYWJlbCtjb3JlQDcuMjYuMF9idWZmZXJ1dGlsQDQuMC44X2Zhc3Rlc3RzbWFsbGVzdHRleHRlbmNvZGVyZGVjb2RfNGFybXBhbGMybm1vcWpza25iYnR0NWR6b3Evbm9kZV9tb2R1bGVzL0B0cmV6b3IvY29ubmVjdC13ZWIvbGliL2NoYW5uZWxzL3dpbmRvdy13aW5kb3cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldpbmRvd1dpbmRvd0NoYW5uZWwgPSB2b2lkIDA7XG5jb25zdCBjb25uZWN0X2NvbW1vbl8xID0gcmVxdWlyZShcIkB0cmV6b3IvY29ubmVjdC1jb21tb25cIik7XG5jbGFzcyBXaW5kb3dXaW5kb3dDaGFubmVsIGV4dGVuZHMgY29ubmVjdF9jb21tb25fMS5BYnN0cmFjdE1lc3NhZ2VDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHdpbmRvd0hlcmUsIHdpbmRvd1BlZXIsIGNoYW5uZWwsIGxvZ2dlciwgb3JpZ2luLCBsZWdhY3lNb2RlLCB9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGNoYW5uZWwsXG4gICAgICAgICAgICBzZW5kRm46IChtZXNzYWdlKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIChfYSA9IHdpbmRvd1BlZXIoKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnBvc3RNZXNzYWdlKG1lc3NhZ2UsIG9yaWdpbik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgbGVnYWN5TW9kZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2xpc3RlbmVyID0gdGhpcy5saXN0ZW5lci5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl93aW5kb3dIZXJlID0gd2luZG93SGVyZTtcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgfVxuICAgIGxpc3RlbmVyKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGV2ZW50LmRhdGEpLCB7IHN1Y2Nlc3M6IHRydWUsIG9yaWdpbjogZXZlbnQub3JpZ2luLCBwYXlsb2FkOiBldmVudC5kYXRhLnBheWxvYWQgfHwge30sIGNoYW5uZWw6IGV2ZW50LmRhdGEuY2hhbm5lbCB8fCB7XG4gICAgICAgICAgICAgICAgcGVlcjogdGhpcy5jaGFubmVsLmhlcmUsXG4gICAgICAgICAgICAgICAgaGVyZTogdGhpcy5jaGFubmVsLnBlZXIsXG4gICAgICAgICAgICB9IH0pO1xuICAgICAgICB0aGlzLm9uTWVzc2FnZShtZXNzYWdlKTtcbiAgICB9XG4gICAgY29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy5fd2luZG93SGVyZS5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgdGhpcy5fbGlzdGVuZXIpO1xuICAgICAgICB0aGlzLmlzQ29ubmVjdGVkID0gdHJ1ZTtcbiAgICB9XG4gICAgZGlzY29ubmVjdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzQ29ubmVjdGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLl93aW5kb3dIZXJlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB0aGlzLl9saXN0ZW5lcik7XG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICB9XG59XG5leHBvcnRzLldpbmRvd1dpbmRvd0NoYW5uZWwgPSBXaW5kb3dXaW5kb3dDaGFubmVsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2luZG93LXdpbmRvdy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/window-window.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = __webpack_require__(/*! @trezor/connect/lib/data/connectSettings */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/data/connectSettings.js\");\nconst getEnv = () => {\n    var _a;\n    if (typeof chrome !== 'undefined' && typeof ((_a = chrome.runtime) === null || _a === void 0 ? void 0 : _a.onConnect) !== 'undefined') {\n        return 'webextension';\n    }\n    if (typeof navigator !== 'undefined') {\n        if (typeof navigator.product === 'string' &&\n            navigator.product.toLowerCase() === 'reactnative') {\n            return 'react-native';\n        }\n        const userAgent = navigator.userAgent.toLowerCase();\n        if (userAgent.indexOf(' electron/') > -1) {\n            return 'electron';\n        }\n    }\n    return 'web';\n};\nexports.getEnv = getEnv;\nconst processQueryString = (url, keys) => {\n    const searchParams = new URLSearchParams(url);\n    const result = {};\n    const paramArray = Array.from(searchParams.entries());\n    paramArray.forEach(([key, value]) => {\n        if (keys.includes(key)) {\n            result[key] = decodeURIComponent(value);\n        }\n    });\n    return result;\n};\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = Object.assign({ popup: true }, input);\n    let globalSrc;\n    if (typeof window !== 'undefined') {\n        globalSrc = window.__TREZOR_CONNECT_SRC;\n    }\n    else if (typeof global !== 'undefined') {\n        globalSrc = global.__TREZOR_CONNECT_SRC;\n    }\n    if (typeof globalSrc === 'string') {\n        settings.connectSrc = globalSrc;\n        settings.debug = true;\n    }\n    if (typeof window !== 'undefined' && typeof ((_a = window.location) === null || _a === void 0 ? void 0 : _a.search) === 'string') {\n        const query = processQueryString(window.location.search, ['trezor-connect-src']);\n        if (query['trezor-connect-src']) {\n            settings.debug = true;\n            settings.connectSrc = query['trezor-connect-src'];\n        }\n    }\n    if (typeof input.env !== 'string') {\n        settings.env = (0, exports.getEnv)();\n    }\n    return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9jb25uZWN0U2V0dGluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsY0FBYztBQUM3QywwQkFBMEIsbUJBQU8sQ0FBQyw4UEFBMEM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQSxxQ0FBcUMsYUFBYTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0B0cmV6b3IrY29ubmVjdC13ZWJAOS40LjdfQGJhYmVsK2NvcmVANy4yNi4wX2J1ZmZlcnV0aWxANC4wLjhfZmFzdGVzdHNtYWxsZXN0dGV4dGVuY29kZXJkZWNvZF80YXJtcGFsYzJubW9xanNrbmJidHQ1ZHpvcS9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvY29ubmVjdFNldHRpbmdzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IGV4cG9ydHMuZ2V0RW52ID0gdm9pZCAwO1xuY29uc3QgY29ubmVjdFNldHRpbmdzXzEgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2Nvbm5lY3RTZXR0aW5nc1wiKTtcbmNvbnN0IGdldEVudiA9ICgpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHR5cGVvZiBjaHJvbWUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiAoKF9hID0gY2hyb21lLnJ1bnRpbWUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5vbkNvbm5lY3QpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gJ3dlYmV4dGVuc2lvbic7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodHlwZW9mIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QudG9Mb3dlckNhc2UoKSA9PT0gJ3JlYWN0bmF0aXZlJykge1xuICAgICAgICAgICAgcmV0dXJuICdyZWFjdC1uYXRpdmUnO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHVzZXJBZ2VudC5pbmRleE9mKCcgZWxlY3Ryb24vJykgPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuICdlbGVjdHJvbic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICd3ZWInO1xufTtcbmV4cG9ydHMuZ2V0RW52ID0gZ2V0RW52O1xuY29uc3QgcHJvY2Vzc1F1ZXJ5U3RyaW5nID0gKHVybCwga2V5cykgPT4ge1xuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsKTtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBjb25zdCBwYXJhbUFycmF5ID0gQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMuZW50cmllcygpKTtcbiAgICBwYXJhbUFycmF5LmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBpZiAoa2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICByZXN1bHRba2V5XSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IHBhcnNlQ29ubmVjdFNldHRpbmdzID0gKGlucHV0ID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHsgcG9wdXA6IHRydWUgfSwgaW5wdXQpO1xuICAgIGxldCBnbG9iYWxTcmM7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGdsb2JhbFNyYyA9IHdpbmRvdy5fX1RSRVpPUl9DT05ORUNUX1NSQztcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZ2xvYmFsU3JjID0gZ2xvYmFsLl9fVFJFWk9SX0NPTk5FQ1RfU1JDO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGdsb2JhbFNyYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IGdsb2JhbFNyYztcbiAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mICgoX2EgPSB3aW5kb3cubG9jYXRpb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZWFyY2gpID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBxdWVyeSA9IHByb2Nlc3NRdWVyeVN0cmluZyh3aW5kb3cubG9jYXRpb24uc2VhcmNoLCBbJ3RyZXpvci1jb25uZWN0LXNyYyddKTtcbiAgICAgICAgaWYgKHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXSkge1xuICAgICAgICAgICAgc2V0dGluZ3MuZGVidWcgPSB0cnVlO1xuICAgICAgICAgICAgc2V0dGluZ3MuY29ubmVjdFNyYyA9IHF1ZXJ5Wyd0cmV6b3ItY29ubmVjdC1zcmMnXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGlucHV0LmVudiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgc2V0dGluZ3MuZW52ID0gKDAsIGV4cG9ydHMuZ2V0RW52KSgpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGNvbm5lY3RTZXR0aW5nc18xLnBhcnNlQ29ubmVjdFNldHRpbmdzKShzZXR0aW5ncyk7XG59O1xuZXhwb3J0cy5wYXJzZUNvbm5lY3RTZXR0aW5ncyA9IHBhcnNlQ29ubmVjdFNldHRpbmdzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdFNldHRpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/index.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/index.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initIframeLogger = exports.clearTimeout = exports.postMessage = exports.init = exports.dispose = exports.error = exports.timeout = exports.initPromise = exports.origin = exports.instance = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"(ssr)/./node_modules/.pnpm/@trezor+utils@9.2.6_tslib@2.8.1/node_modules/@trezor/utils/lib/index.js\");\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_1 = __webpack_require__(/*! @trezor/connect/lib/events */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/utils/debug.js\");\nconst inlineStyles_1 = tslib_1.__importDefault(__webpack_require__(/*! ./inlineStyles */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\"));\nexports.initPromise = (0, utils_1.createDeferred)();\nexports.timeout = 0;\nconst dispose = () => {\n    if (exports.instance && exports.instance.parentNode) {\n        try {\n            exports.instance.parentNode.removeChild(exports.instance);\n        }\n        catch (_a) {\n        }\n    }\n    exports.instance = null;\n    exports.timeout = 0;\n};\nexports.dispose = dispose;\nconst handleIframeBlocked = () => {\n    window.clearTimeout(exports.timeout);\n    exports.error = ERRORS.TypedError('Init_IframeBlocked');\n    (0, exports.dispose)();\n    exports.initPromise.reject(exports.error);\n};\nconst injectStyleSheet = () => {\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    const doc = exports.instance.ownerDocument;\n    const head = doc.head || doc.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', 'TrezorConnectStylesheet');\n    if (style.styleSheet) {\n        style.styleSheet.cssText = inlineStyles_1.default;\n        head.appendChild(style);\n    }\n    else {\n        style.appendChild(document.createTextNode(inlineStyles_1.default));\n        head.append(style);\n    }\n};\nconst init = async (settings) => {\n    exports.initPromise = (0, utils_1.createDeferred)();\n    const existedFrame = document.getElementById('trezorconnect');\n    if (existedFrame) {\n        exports.instance = existedFrame;\n    }\n    else {\n        exports.instance = document.createElement('iframe');\n        exports.instance.frameBorder = '0';\n        exports.instance.width = '0px';\n        exports.instance.height = '0px';\n        exports.instance.style.position = 'absolute';\n        exports.instance.style.display = 'none';\n        exports.instance.style.border = '0px';\n        exports.instance.style.width = '0px';\n        exports.instance.style.height = '0px';\n        exports.instance.id = 'trezorconnect';\n    }\n    let src;\n    if (settings.env === 'web') {\n        const manifestString = settings.manifest ? JSON.stringify(settings.manifest) : 'undefined';\n        const manifest = `version=${settings.version}&manifest=${encodeURIComponent(btoa(JSON.stringify(manifestString)))}`;\n        src = `${settings.iframeSrc}?${manifest}`;\n    }\n    else {\n        src = settings.iframeSrc;\n    }\n    exports.instance.setAttribute('src', src);\n    if (navigator.usb) {\n        exports.instance.setAttribute('allow', 'usb');\n    }\n    exports.origin = (0, urlUtils_1.getOrigin)(exports.instance.src);\n    exports.timeout = window.setTimeout(() => {\n        exports.initPromise.reject(ERRORS.TypedError('Init_IframeTimeout'));\n    }, 10000);\n    const onLoad = () => {\n        var _a, _b;\n        if (!exports.instance) {\n            exports.initPromise.reject(ERRORS.TypedError('Init_IframeBlocked'));\n            return;\n        }\n        try {\n            const iframeOrigin = (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.location.origin;\n            if (!iframeOrigin || iframeOrigin === 'null') {\n                handleIframeBlocked();\n                return;\n            }\n        }\n        catch (_c) {\n        }\n        let extension;\n        if (typeof chrome !== 'undefined' &&\n            chrome.runtime &&\n            typeof chrome.runtime.onConnect !== 'undefined') {\n            chrome.runtime.onConnect.addListener(() => { });\n            extension = chrome.runtime.id;\n        }\n        (_b = exports.instance.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n            type: events_1.IFRAME.INIT,\n            payload: {\n                settings,\n                extension,\n            },\n        }, exports.origin);\n        exports.instance.onload = null;\n    };\n    if (exports.instance.attachEvent) {\n        exports.instance.attachEvent('onload', onLoad);\n    }\n    else {\n        exports.instance.onload = onLoad;\n    }\n    if (document.body) {\n        document.body.appendChild(exports.instance);\n        injectStyleSheet();\n    }\n    try {\n        await exports.initPromise.promise;\n    }\n    catch (e) {\n        if (exports.instance) {\n            if (exports.instance.parentNode) {\n                exports.instance.parentNode.removeChild(exports.instance);\n            }\n            exports.instance = null;\n        }\n        throw e;\n    }\n    finally {\n        window.clearTimeout(exports.timeout);\n        exports.timeout = 0;\n    }\n};\nexports.init = init;\nconst postMessage = (message) => {\n    var _a;\n    if (!exports.instance) {\n        throw ERRORS.TypedError('Init_IframeBlocked');\n    }\n    (_a = exports.instance.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(message, exports.origin);\n};\nexports.postMessage = postMessage;\nconst clearTimeout = () => {\n    window.clearTimeout(exports.timeout);\n};\nexports.clearTimeout = clearTimeout;\nconst initIframeLogger = () => {\n    const logWriterFactory = () => ({\n        add: (message) => {\n            (0, exports.postMessage)({\n                type: events_1.IFRAME.LOG,\n                payload: message,\n            });\n        },\n    });\n    (0, debug_1.setLogWriter)(logWriterFactory);\n};\nexports.initIframeLogger = initIframeLogger;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst css = '.trezorconnect-container{position:fixed!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important;z-index:10000!important;width:100%!important;height:100%!important;top:0!important;left:0!important;background:rgba(0,0,0,.35)!important;overflow:auto!important;padding:20px!important;margin:0!important}.trezorconnect-container .trezorconnect-window{position:relative!important;display:block!important;width:370px!important;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif!important;margin:auto!important;border-radius:3px!important;background-color:#fff!important;text-align:center!important;overflow:hidden!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head{text-align:left;padding:12px 24px!important;display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-logo{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close{cursor:pointer!important;height:24px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close svg{fill:#757575;-webkit-transition:fill .3s ease-in-out!important;transition:fill .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-head .trezorconnect-close:hover svg{fill:#494949}.trezorconnect-container .trezorconnect-window .trezorconnect-body{padding:24px 24px 32px!important;background:#FBFBFB!important;border-top:1px solid #EBEBEB}.trezorconnect-container .trezorconnect-window .trezorconnect-body h3{color:#505050!important;font-size:16px!important;font-weight:500!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body p{margin:8px 0 24px!important;font-weight:400!important;color:#A9A9A9!important;font-size:12px!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button{width:100%!important;padding:12px 24px!important;margin:0!important;border-radius:3px!important;font-size:14px!important;font-weight:300!important;cursor:pointer!important;background:#01B757!important;color:#fff!important;border:0!important;-webkit-transition:background-color .3s ease-in-out!important;transition:background-color .3s ease-in-out!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:hover{background-color:#00AB51!important}.trezorconnect-container .trezorconnect-window .trezorconnect-body button:active{background-color:#009546!important}/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0IiwiJHN0ZGluIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLHlCQUNJLFNBQUEsZ0JBQ0EsUUFBQSxzQkFDQSxRQUFBLHVCQUNBLFFBQUEsc0JBRUEsUUFBQSxlQUNBLG1CQUFBLG1CQUNBLHNCQUFBLGlCQUNBLHVCQUFBLGlCQUNBLG1CQUFBLGlCQUNBLGVBQUEsaUJBRUEsa0JBQUEsaUJBQ0Esb0JBQUEsaUJBQ0EsZUFBQSxpQkNmTSxZQUFhLGlCREFyQixRQUFTLGdCQWtCSCxNQUFBLGVBQ0EsT0FBQSxlQUNBLElBQUEsWUFDQSxLQUFBLFlBQ0EsV0FBQSwwQkFDQSxTQUFBLGVBQ0EsUUFBQSxlQUNBLE9BQUEsWUNkUiwrQ0RYRSxTQUFVLG1CQTZCQSxRQUFBLGdCQUNBLE1BQUEsZ0JBQ0EsWUFBQSxjQUFBLG1CQUFBLFdBQUEsT0FBQSxpQkFBQSxNQUFBLHFCQUNBLE9BQUEsZUNmVixjQUFlLGNEakJmLGlCQWlCRSxlQWtCWSxXQUFBLGlCQ2ZkLFNBQVUsaUJEbUJJLG1FQUNBLFdBQUEsS0NoQmQsUUFBUyxLQUFLLGVEeEJkLFFBQVMsc0JBMENTLFFBQUEsdUJBQ0EsUUFBQSxzQkNmbEIsUUFBUyxlRGlCSyxrQkE1QlosaUJBOEJvQixvQkFBQSxpQkNoQmxCLGVBQWdCLGlCRC9CWixZQWlCTixpQkFzQ1EsdUZBQ0EsaUJBQUEsRUNwQlYsYUFBYyxFRHBDVixTQUFVLEVBMkRBLEtBQUEsRUFFQSx3RkNwQmQsT0FBUSxrQkR6Q1IsT0FBUSxlQWlFTSw0RkFDQSxLQUFBLFFBQ0EsbUJBQUEsS0FBQSxJQUFBLHNCQ3BCZCxXQUFZLEtBQUssSUFBSyxzQkR3QlIsa0dBQ0EsS0FBQSxRQUVBLG1FQUNBLFFBQUEsS0FBQSxLQUFBLGVBQ0EsV0FBQSxrQkFDQSxXQUFBLElBQUEsTUFBQSxRQUVBLHNFQUNBLE1BQUEsa0JBQ0EsVUFBQSxlQ3JCZCxZQUFhLGNEd0JLLHFFQ3JCbEIsT0FBUSxJQUFJLEVBQUksZUR3QkYsWUFBQSxjQUNJLE1BQUEsa0JDdEJsQixVQUFXLGVBRWIsMEVBQ0UsTUFBTyxlQUNQLFFBQVMsS0FBSyxlQUNkLE9BQVEsWUFDUixjQUFlLGNBQ2YsVUFBVyxlQUNYLFlBQWEsY0FDYixPQUFRLGtCQUNSLFdBQVksa0JBQ1osTUFBTyxlQUNQLE9BQVEsWUFDUixtQkFBb0IsaUJBQWlCLElBQUssc0JBQzFDLFdBQVksaUJBQWlCLElBQUssc0JBRXBDLGdGQUNFLGlCQUFrQixrQkFFcEIsaUZBQ0UsaUJBQWtCIn0= */';\nexports[\"default\"] = css;\n//# sourceMappingURL=inlineStyles.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/inlineStyles.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-iframe.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-iframe.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TrezorConnect = exports.CoreInIframe = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/events/index.js\");\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/factory.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/utils/debug.js\");\nconst config_1 = __webpack_require__(/*! @trezor/connect/lib/data/config */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/data/config.js\");\nconst createDeferredManager_1 = __webpack_require__(/*! @trezor/utils/lib/createDeferredManager */ \"(ssr)/./node_modules/.pnpm/@trezor+utils@9.2.6_tslib@2.8.1/node_modules/@trezor/utils/lib/createDeferredManager.js\");\nconst iframe = tslib_1.__importStar(__webpack_require__(/*! ../iframe */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/iframe/index.js\"));\nconst popup = tslib_1.__importStar(__webpack_require__(/*! ../popup */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/index.js\"));\nconst button_1 = tslib_1.__importDefault(__webpack_require__(/*! ../webusb/button */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/webusb/button.js\"));\nconst connectSettings_1 = __webpack_require__(/*! ../connectSettings */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js\");\nclass CoreInIframe {\n    constructor() {\n        this.eventEmitter = new events_1.default();\n        this.boundHandleMessage = this.handleMessage.bind(this);\n        this.boundDispose = this.dispose.bind(this);\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this._log = (0, debug_1.initLog)('@trezor/connect-web');\n        this._messagePromises = (0, createDeferredManager_1.createDeferredManager)({ initialId: 1 });\n    }\n    initPopupManager() {\n        const pm = new popup.PopupManager(this._settings, { logger: this._log });\n        pm.on(events_2.POPUP.CLOSED, (error) => {\n            iframe.postMessage({\n                type: events_2.POPUP.CLOSED,\n                payload: error ? { error } : null,\n            });\n        });\n        return pm;\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), { manifest: data }));\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        iframe.dispose();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        if (this._popupManager) {\n            this._popupManager.close();\n        }\n        window.removeEventListener('message', this.boundHandleMessage);\n        window.removeEventListener('unload', this.boundDispose);\n        return Promise.resolve(undefined);\n    }\n    cancel(error) {\n        if (this._popupManager) {\n            this._popupManager.emit(events_2.POPUP.CLOSED, error);\n        }\n    }\n    handleMessage(messageEvent) {\n        if (messageEvent.origin !== iframe.origin)\n            return;\n        const message = (0, events_2.parseMessage)(messageEvent.data);\n        this._log.log('handleMessage', message);\n        switch (message.event) {\n            case events_2.RESPONSE_EVENT: {\n                const { id = 0, success, payload, device } = message;\n                const resolved = this._messagePromises.resolve(id, {\n                    id,\n                    success,\n                    payload,\n                    device,\n                });\n                if (!resolved)\n                    this._log.warn(`Unknown message id ${id}`);\n                break;\n            }\n            case events_2.DEVICE_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.TRANSPORT_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.BLOCKCHAIN_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.UI_EVENT:\n                if (message.type === events_2.IFRAME.BOOTSTRAP) {\n                    iframe.clearTimeout();\n                    break;\n                }\n                if (message.type === events_2.IFRAME.LOADED) {\n                    iframe.initPromise.resolve();\n                }\n                if (message.type === events_2.IFRAME.ERROR) {\n                    iframe.initPromise.reject(message.payload.error);\n                }\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            default:\n                this._log.log('Undefined message', messageEvent.data);\n        }\n    }\n    async init(settings) {\n        var _a, _b;\n        if (iframe.instance) {\n            throw ERRORS.TypedError('Init_AlreadyInitialized');\n        }\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n        if (!this._settings.manifest) {\n            throw ERRORS.TypedError('Init_ManifestMissing');\n        }\n        if (!((_a = this._settings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n            this._settings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        if (this._settings.lazyLoad) {\n            this._settings.lazyLoad = false;\n            return;\n        }\n        if (!this._popupManager) {\n            this._popupManager = this.initPopupManager();\n        }\n        this._log.enabled = !!this._settings.debug;\n        window.addEventListener('message', this.boundHandleMessage);\n        window.addEventListener('unload', this.boundDispose);\n        await iframe.init(this._settings);\n        if (this._settings.coreMode === 'auto') {\n            const { promiseId, promise } = this._messagePromises.create();\n            this._log.debug('coreMode = auto, Checking bridge availability');\n            iframe.postMessage({ id: promiseId, type: events_2.TRANSPORT.GET_INFO });\n            const response = await promise;\n            this._log.debug('Bridge availability response', response);\n            if (response.payload === undefined &&\n                navigator.usb &&\n                ((_b = this._settings.transports) === null || _b === void 0 ? void 0 : _b.includes('WebUsbTransport'))) {\n                throw ERRORS.TypedError('Transport_Missing');\n            }\n        }\n        if (this._settings.sharedLogger !== false) {\n            iframe.initIframeLogger();\n        }\n    }\n    async call(params) {\n        if (!iframe.instance && !iframe.timeout) {\n            this._settings = (0, connectSettings_1.parseConnectSettings)(this._settings);\n            if (!this._settings.manifest) {\n                return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n            }\n            if (!this._popupManager) {\n                this._popupManager = this.initPopupManager();\n            }\n            try {\n                await this.init(this._settings);\n            }\n            catch (error) {\n                if (this._popupManager) {\n                    this._popupManager.clear();\n                }\n                return (0, events_2.createErrorMessage)(error);\n            }\n        }\n        if (iframe.timeout) {\n            await iframe.initPromise.promise;\n        }\n        if (iframe.error) {\n            return (0, events_2.createErrorMessage)(iframe.error);\n        }\n        if (this._settings.popup && this._popupManager) {\n            this._popupManager.request();\n        }\n        try {\n            const { promiseId, promise } = this._messagePromises.create();\n            iframe.postMessage({ id: promiseId, type: events_2.IFRAME.CALL, payload: params });\n            const response = await promise;\n            if (response) {\n                if (!response.success &&\n                    response.payload.code !== 'Device_CallInProgress' &&\n                    this._popupManager) {\n                    this._popupManager.unlock();\n                }\n                return response;\n            }\n            if (this._popupManager) {\n                this._popupManager.unlock();\n            }\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n        }\n        catch (error) {\n            this._log.error('__call error', error);\n            if (this._popupManager) {\n                this._popupManager.clear(false);\n            }\n            return (0, events_2.createErrorMessage)(error);\n        }\n    }\n    uiResponse(response) {\n        if (!iframe.instance) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        iframe.postMessage(response);\n    }\n    renderWebUSBButton(className) {\n        (0, button_1.default)(className, this._settings.webusbSrc);\n    }\n    async requestLogin(params) {\n        if (typeof params.callback === 'function') {\n            const { callback } = params;\n            const loginChallengeListener = async (event) => {\n                const { data } = event;\n                if (data && data.type === events_2.UI.LOGIN_CHALLENGE_REQUEST) {\n                    try {\n                        const payload = await callback();\n                        iframe.postMessage({\n                            type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                            payload,\n                        });\n                    }\n                    catch (error) {\n                        iframe.postMessage({\n                            type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                            payload: error.message,\n                        });\n                    }\n                }\n            };\n            window.addEventListener('message', loginChallengeListener, false);\n            const response = await this.call(Object.assign(Object.assign({ method: 'requestLogin' }, params), { asyncChallenge: true, callback: null }));\n            window.removeEventListener('message', loginChallengeListener);\n            return response;\n        }\n        return this.call(Object.assign({ method: 'requestLogin' }, params));\n    }\n    disableWebUSB() {\n        if (!iframe.instance) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        iframe.postMessage({ type: events_2.TRANSPORT.DISABLE_WEBUSB });\n    }\n    async requestWebUSBDevice() {\n        try {\n            await window.navigator.usb.requestDevice({ filters: config_1.config.webusb });\n            iframe.postMessage({ type: events_2.TRANSPORT.REQUEST_DEVICE });\n        }\n        catch (_a) {\n        }\n    }\n}\nexports.CoreInIframe = CoreInIframe;\nconst impl = new CoreInIframe();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n}, {\n    renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n});\n//# sourceMappingURL=core-in-iframe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9pbXBsL2NvcmUtaW4taWZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLG9CQUFvQjtBQUM1QyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBTztBQUMvQix5Q0FBeUMsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6RCxvQ0FBb0MsbUJBQU8sQ0FBQyxzUEFBc0M7QUFDbEYsaUJBQWlCLG1CQUFPLENBQUMsd09BQTRCO0FBQ3JELGtCQUFrQixtQkFBTyxDQUFDLG9PQUE2QjtBQUN2RCxnQkFBZ0IsbUJBQU8sQ0FBQyw0T0FBaUM7QUFDekQsaUJBQWlCLG1CQUFPLENBQUMsNE9BQWlDO0FBQzFELGdDQUFnQyxtQkFBTyxDQUFDLG1LQUF5QztBQUNqRixvQ0FBb0MsbUJBQU8sQ0FBQywyTkFBVztBQUN2RCxtQ0FBbUMsbUJBQU8sQ0FBQyx5TkFBVTtBQUNyRCx5Q0FBeUMsbUJBQU8sQ0FBQyxtT0FBa0I7QUFDbkUsMEJBQTBCLG1CQUFPLENBQUMsdU9BQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLGNBQWM7QUFDbkc7QUFDQTtBQUNBLDREQUE0RCxtQkFBbUI7QUFDL0U7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFFBQVE7QUFDM0MsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUcscUJBQXFCLGdCQUFnQjtBQUN4STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbUNBQW1DO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSx5REFBeUQsR0FBRztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1HQUFtRztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0EsaUNBQWlDLGtEQUFrRDtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QyxpQ0FBaUMsNERBQTREO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsd0JBQXdCLGFBQWEsc0NBQXNDO0FBQ3RKO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx3QkFBd0I7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix5Q0FBeUM7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGlDQUFpQztBQUN4RixpQ0FBaUMseUNBQXlDO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9pbXBsL2NvcmUtaW4taWZyYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmV6b3JDb25uZWN0ID0gZXhwb3J0cy5Db3JlSW5JZnJhbWUgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgZXZlbnRzXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZXZlbnRzXCIpKTtcbmNvbnN0IEVSUk9SUyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAdHJlem9yL2Nvbm5lY3QvbGliL2NvbnN0YW50cy9lcnJvcnNcIikpO1xuY29uc3QgZXZlbnRzXzIgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9ldmVudHNcIik7XG5jb25zdCBmYWN0b3J5XzEgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9mYWN0b3J5XCIpO1xuY29uc3QgZGVidWdfMSA9IHJlcXVpcmUoXCJAdHJlem9yL2Nvbm5lY3QvbGliL3V0aWxzL2RlYnVnXCIpO1xuY29uc3QgY29uZmlnXzEgPSByZXF1aXJlKFwiQHRyZXpvci9jb25uZWN0L2xpYi9kYXRhL2NvbmZpZ1wiKTtcbmNvbnN0IGNyZWF0ZURlZmVycmVkTWFuYWdlcl8xID0gcmVxdWlyZShcIkB0cmV6b3IvdXRpbHMvbGliL2NyZWF0ZURlZmVycmVkTWFuYWdlclwiKTtcbmNvbnN0IGlmcmFtZSA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9pZnJhbWVcIikpO1xuY29uc3QgcG9wdXAgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vcG9wdXBcIikpO1xuY29uc3QgYnV0dG9uXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vd2VidXNiL2J1dHRvblwiKSk7XG5jb25zdCBjb25uZWN0U2V0dGluZ3NfMSA9IHJlcXVpcmUoXCIuLi9jb25uZWN0U2V0dGluZ3NcIik7XG5jbGFzcyBDb3JlSW5JZnJhbWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmV2ZW50RW1pdHRlciA9IG5ldyBldmVudHNfMS5kZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuYm91bmRIYW5kbGVNZXNzYWdlID0gdGhpcy5oYW5kbGVNZXNzYWdlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuYm91bmREaXNwb3NlID0gdGhpcy5kaXNwb3NlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuX3NldHRpbmdzID0gKDAsIGNvbm5lY3RTZXR0aW5nc18xLnBhcnNlQ29ubmVjdFNldHRpbmdzKSgpO1xuICAgICAgICB0aGlzLl9sb2cgPSAoMCwgZGVidWdfMS5pbml0TG9nKSgnQHRyZXpvci9jb25uZWN0LXdlYicpO1xuICAgICAgICB0aGlzLl9tZXNzYWdlUHJvbWlzZXMgPSAoMCwgY3JlYXRlRGVmZXJyZWRNYW5hZ2VyXzEuY3JlYXRlRGVmZXJyZWRNYW5hZ2VyKSh7IGluaXRpYWxJZDogMSB9KTtcbiAgICB9XG4gICAgaW5pdFBvcHVwTWFuYWdlcigpIHtcbiAgICAgICAgY29uc3QgcG0gPSBuZXcgcG9wdXAuUG9wdXBNYW5hZ2VyKHRoaXMuX3NldHRpbmdzLCB7IGxvZ2dlcjogdGhpcy5fbG9nIH0pO1xuICAgICAgICBwbS5vbihldmVudHNfMi5QT1BVUC5DTE9TRUQsIChlcnJvcikgPT4ge1xuICAgICAgICAgICAgaWZyYW1lLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBldmVudHNfMi5QT1BVUC5DTE9TRUQsXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogZXJyb3IgPyB7IGVycm9yIH0gOiBudWxsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcG07XG4gICAgfVxuICAgIG1hbmlmZXN0KGRhdGEpIHtcbiAgICAgICAgdGhpcy5fc2V0dGluZ3MgPSAoMCwgY29ubmVjdFNldHRpbmdzXzEucGFyc2VDb25uZWN0U2V0dGluZ3MpKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5fc2V0dGluZ3MpLCB7IG1hbmlmZXN0OiBkYXRhIH0pKTtcbiAgICB9XG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgICAgIGlmcmFtZS5kaXNwb3NlKCk7XG4gICAgICAgIHRoaXMuX3NldHRpbmdzID0gKDAsIGNvbm5lY3RTZXR0aW5nc18xLnBhcnNlQ29ubmVjdFNldHRpbmdzKSgpO1xuICAgICAgICBpZiAodGhpcy5fcG9wdXBNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aGlzLl9wb3B1cE1hbmFnZXIuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMuYm91bmRIYW5kbGVNZXNzYWdlKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3VubG9hZCcsIHRoaXMuYm91bmREaXNwb3NlKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIH1cbiAgICBjYW5jZWwoZXJyb3IpIHtcbiAgICAgICAgaWYgKHRoaXMuX3BvcHVwTWFuYWdlcikge1xuICAgICAgICAgICAgdGhpcy5fcG9wdXBNYW5hZ2VyLmVtaXQoZXZlbnRzXzIuUE9QVVAuQ0xPU0VELCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlTWVzc2FnZShtZXNzYWdlRXZlbnQpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2VFdmVudC5vcmlnaW4gIT09IGlmcmFtZS5vcmlnaW4pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgZXZlbnRzXzIucGFyc2VNZXNzYWdlKShtZXNzYWdlRXZlbnQuZGF0YSk7XG4gICAgICAgIHRoaXMuX2xvZy5sb2coJ2hhbmRsZU1lc3NhZ2UnLCBtZXNzYWdlKTtcbiAgICAgICAgc3dpdGNoIChtZXNzYWdlLmV2ZW50KSB7XG4gICAgICAgICAgICBjYXNlIGV2ZW50c18yLlJFU1BPTlNFX0VWRU5UOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBpZCA9IDAsIHN1Y2Nlc3MsIHBheWxvYWQsIGRldmljZSB9ID0gbWVzc2FnZTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNvbHZlZCA9IHRoaXMuX21lc3NhZ2VQcm9taXNlcy5yZXNvbHZlKGlkLCB7XG4gICAgICAgICAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzLFxuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkLFxuICAgICAgICAgICAgICAgICAgICBkZXZpY2UsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNvbHZlZClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbG9nLndhcm4oYFVua25vd24gbWVzc2FnZSBpZCAke2lkfWApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBldmVudHNfMi5ERVZJQ0VfRVZFTlQ6XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdChtZXNzYWdlLmV2ZW50LCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50RW1pdHRlci5lbWl0KG1lc3NhZ2UudHlwZSwgbWVzc2FnZS5wYXlsb2FkKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgZXZlbnRzXzIuVFJBTlNQT1JUX0VWRU5UOlxuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLmVtaXQobWVzc2FnZS5ldmVudCwgbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdChtZXNzYWdlLnR5cGUsIG1lc3NhZ2UucGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGV2ZW50c18yLkJMT0NLQ0hBSU5fRVZFTlQ6XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdChtZXNzYWdlLmV2ZW50LCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50RW1pdHRlci5lbWl0KG1lc3NhZ2UudHlwZSwgbWVzc2FnZS5wYXlsb2FkKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgZXZlbnRzXzIuVUlfRVZFTlQ6XG4gICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gZXZlbnRzXzIuSUZSQU1FLkJPT1RTVFJBUCkge1xuICAgICAgICAgICAgICAgICAgICBpZnJhbWUuY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZS50eXBlID09PSBldmVudHNfMi5JRlJBTUUuTE9BREVEKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmcmFtZS5pbml0UHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlLnR5cGUgPT09IGV2ZW50c18yLklGUkFNRS5FUlJPUikge1xuICAgICAgICAgICAgICAgICAgICBpZnJhbWUuaW5pdFByb21pc2UucmVqZWN0KG1lc3NhZ2UucGF5bG9hZC5lcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLmVtaXQobWVzc2FnZS5ldmVudCwgbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdChtZXNzYWdlLnR5cGUsIG1lc3NhZ2UucGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRoaXMuX2xvZy5sb2coJ1VuZGVmaW5lZCBtZXNzYWdlJywgbWVzc2FnZUV2ZW50LmRhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGluaXQoc2V0dGluZ3MpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKGlmcmFtZS5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhyb3cgRVJST1JTLlR5cGVkRXJyb3IoJ0luaXRfQWxyZWFkeUluaXRpYWxpemVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2V0dGluZ3MgPSAoMCwgY29ubmVjdFNldHRpbmdzXzEucGFyc2VDb25uZWN0U2V0dGluZ3MpKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5fc2V0dGluZ3MpLCBzZXR0aW5ncykpO1xuICAgICAgICBpZiAoIXRoaXMuX3NldHRpbmdzLm1hbmlmZXN0KSB7XG4gICAgICAgICAgICB0aHJvdyBFUlJPUlMuVHlwZWRFcnJvcignSW5pdF9NYW5pZmVzdE1pc3NpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISgoX2EgPSB0aGlzLl9zZXR0aW5ncy50cmFuc3BvcnRzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSkge1xuICAgICAgICAgICAgdGhpcy5fc2V0dGluZ3MudHJhbnNwb3J0cyA9IFsnQnJpZGdlVHJhbnNwb3J0JywgJ1dlYlVzYlRyYW5zcG9ydCddO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9zZXR0aW5ncy5sYXp5TG9hZCkge1xuICAgICAgICAgICAgdGhpcy5fc2V0dGluZ3MubGF6eUxvYWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX3BvcHVwTWFuYWdlcikge1xuICAgICAgICAgICAgdGhpcy5fcG9wdXBNYW5hZ2VyID0gdGhpcy5pbml0UG9wdXBNYW5hZ2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbG9nLmVuYWJsZWQgPSAhIXRoaXMuX3NldHRpbmdzLmRlYnVnO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMuYm91bmRIYW5kbGVNZXNzYWdlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3VubG9hZCcsIHRoaXMuYm91bmREaXNwb3NlKTtcbiAgICAgICAgYXdhaXQgaWZyYW1lLmluaXQodGhpcy5fc2V0dGluZ3MpO1xuICAgICAgICBpZiAodGhpcy5fc2V0dGluZ3MuY29yZU1vZGUgPT09ICdhdXRvJykge1xuICAgICAgICAgICAgY29uc3QgeyBwcm9taXNlSWQsIHByb21pc2UgfSA9IHRoaXMuX21lc3NhZ2VQcm9taXNlcy5jcmVhdGUoKTtcbiAgICAgICAgICAgIHRoaXMuX2xvZy5kZWJ1ZygnY29yZU1vZGUgPSBhdXRvLCBDaGVja2luZyBicmlkZ2UgYXZhaWxhYmlsaXR5Jyk7XG4gICAgICAgICAgICBpZnJhbWUucG9zdE1lc3NhZ2UoeyBpZDogcHJvbWlzZUlkLCB0eXBlOiBldmVudHNfMi5UUkFOU1BPUlQuR0VUX0lORk8gfSk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHByb21pc2U7XG4gICAgICAgICAgICB0aGlzLl9sb2cuZGVidWcoJ0JyaWRnZSBhdmFpbGFiaWxpdHkgcmVzcG9uc2UnLCByZXNwb25zZSk7XG4gICAgICAgICAgICBpZiAocmVzcG9uc2UucGF5bG9hZCA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgbmF2aWdhdG9yLnVzYiAmJlxuICAgICAgICAgICAgICAgICgoX2IgPSB0aGlzLl9zZXR0aW5ncy50cmFuc3BvcnRzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaW5jbHVkZXMoJ1dlYlVzYlRyYW5zcG9ydCcpKSkge1xuICAgICAgICAgICAgICAgIHRocm93IEVSUk9SUy5UeXBlZEVycm9yKCdUcmFuc3BvcnRfTWlzc2luZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9zZXR0aW5ncy5zaGFyZWRMb2dnZXIgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICBpZnJhbWUuaW5pdElmcmFtZUxvZ2dlcigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGNhbGwocGFyYW1zKSB7XG4gICAgICAgIGlmICghaWZyYW1lLmluc3RhbmNlICYmICFpZnJhbWUudGltZW91dCkge1xuICAgICAgICAgICAgdGhpcy5fc2V0dGluZ3MgPSAoMCwgY29ubmVjdFNldHRpbmdzXzEucGFyc2VDb25uZWN0U2V0dGluZ3MpKHRoaXMuX3NldHRpbmdzKTtcbiAgICAgICAgICAgIGlmICghdGhpcy5fc2V0dGluZ3MubWFuaWZlc3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIGV2ZW50c18yLmNyZWF0ZUVycm9yTWVzc2FnZSkoRVJST1JTLlR5cGVkRXJyb3IoJ0luaXRfTWFuaWZlc3RNaXNzaW5nJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCF0aGlzLl9wb3B1cE1hbmFnZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wb3B1cE1hbmFnZXIgPSB0aGlzLmluaXRQb3B1cE1hbmFnZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5pbml0KHRoaXMuX3NldHRpbmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9wb3B1cE1hbmFnZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcG9wdXBNYW5hZ2VyLmNsZWFyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAoMCwgZXZlbnRzXzIuY3JlYXRlRXJyb3JNZXNzYWdlKShlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlmcmFtZS50aW1lb3V0KSB7XG4gICAgICAgICAgICBhd2FpdCBpZnJhbWUuaW5pdFByb21pc2UucHJvbWlzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaWZyYW1lLmVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIGV2ZW50c18yLmNyZWF0ZUVycm9yTWVzc2FnZSkoaWZyYW1lLmVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fc2V0dGluZ3MucG9wdXAgJiYgdGhpcy5fcG9wdXBNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aGlzLl9wb3B1cE1hbmFnZXIucmVxdWVzdCgpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB7IHByb21pc2VJZCwgcHJvbWlzZSB9ID0gdGhpcy5fbWVzc2FnZVByb21pc2VzLmNyZWF0ZSgpO1xuICAgICAgICAgICAgaWZyYW1lLnBvc3RNZXNzYWdlKHsgaWQ6IHByb21pc2VJZCwgdHlwZTogZXZlbnRzXzIuSUZSQU1FLkNBTEwsIHBheWxvYWQ6IHBhcmFtcyB9KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcHJvbWlzZTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uuc3VjY2VzcyAmJlxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5wYXlsb2FkLmNvZGUgIT09ICdEZXZpY2VfQ2FsbEluUHJvZ3Jlc3MnICYmXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BvcHVwTWFuYWdlcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wb3B1cE1hbmFnZXIudW5sb2NrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9wb3B1cE1hbmFnZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wb3B1cE1hbmFnZXIudW5sb2NrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKDAsIGV2ZW50c18yLmNyZWF0ZUVycm9yTWVzc2FnZSkoRVJST1JTLlR5cGVkRXJyb3IoJ01ldGhvZF9Ob1Jlc3BvbnNlJykpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhpcy5fbG9nLmVycm9yKCdfX2NhbGwgZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICBpZiAodGhpcy5fcG9wdXBNYW5hZ2VyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcG9wdXBNYW5hZ2VyLmNsZWFyKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoMCwgZXZlbnRzXzIuY3JlYXRlRXJyb3JNZXNzYWdlKShlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdWlSZXNwb25zZShyZXNwb25zZSkge1xuICAgICAgICBpZiAoIWlmcmFtZS5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhyb3cgRVJST1JTLlR5cGVkRXJyb3IoJ0luaXRfTm90SW5pdGlhbGl6ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZnJhbWUucG9zdE1lc3NhZ2UocmVzcG9uc2UpO1xuICAgIH1cbiAgICByZW5kZXJXZWJVU0JCdXR0b24oY2xhc3NOYW1lKSB7XG4gICAgICAgICgwLCBidXR0b25fMS5kZWZhdWx0KShjbGFzc05hbWUsIHRoaXMuX3NldHRpbmdzLndlYnVzYlNyYyk7XG4gICAgfVxuICAgIGFzeW5jIHJlcXVlc3RMb2dpbihwYXJhbXMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXJhbXMuY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgY2FsbGJhY2sgfSA9IHBhcmFtcztcbiAgICAgICAgICAgIGNvbnN0IGxvZ2luQ2hhbGxlbmdlTGlzdGVuZXIgPSBhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGV2ZW50O1xuICAgICAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEudHlwZSA9PT0gZXZlbnRzXzIuVUkuTE9HSU5fQ0hBTExFTkdFX1JFUVVFU1QpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBhd2FpdCBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBldmVudHNfMi5VSS5MT0dJTl9DSEFMTEVOR0VfUkVTUE9OU0UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBldmVudHNfMi5VSS5MT0dJTl9DSEFMTEVOR0VfUkVTUE9OU0UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5bG9hZDogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbG9naW5DaGFsbGVuZ2VMaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNhbGwoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgbWV0aG9kOiAncmVxdWVzdExvZ2luJyB9LCBwYXJhbXMpLCB7IGFzeW5jQ2hhbGxlbmdlOiB0cnVlLCBjYWxsYmFjazogbnVsbCB9KSk7XG4gICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxvZ2luQ2hhbGxlbmdlTGlzdGVuZXIpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGwoT2JqZWN0LmFzc2lnbih7IG1ldGhvZDogJ3JlcXVlc3RMb2dpbicgfSwgcGFyYW1zKSk7XG4gICAgfVxuICAgIGRpc2FibGVXZWJVU0IoKSB7XG4gICAgICAgIGlmICghaWZyYW1lLmluc3RhbmNlKSB7XG4gICAgICAgICAgICB0aHJvdyBFUlJPUlMuVHlwZWRFcnJvcignSW5pdF9Ob3RJbml0aWFsaXplZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmcmFtZS5wb3N0TWVzc2FnZSh7IHR5cGU6IGV2ZW50c18yLlRSQU5TUE9SVC5ESVNBQkxFX1dFQlVTQiB9KTtcbiAgICB9XG4gICAgYXN5bmMgcmVxdWVzdFdlYlVTQkRldmljZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IHdpbmRvdy5uYXZpZ2F0b3IudXNiLnJlcXVlc3REZXZpY2UoeyBmaWx0ZXJzOiBjb25maWdfMS5jb25maWcud2VidXNiIH0pO1xuICAgICAgICAgICAgaWZyYW1lLnBvc3RNZXNzYWdlKHsgdHlwZTogZXZlbnRzXzIuVFJBTlNQT1JULlJFUVVFU1RfREVWSUNFIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Db3JlSW5JZnJhbWUgPSBDb3JlSW5JZnJhbWU7XG5jb25zdCBpbXBsID0gbmV3IENvcmVJbklmcmFtZSgpO1xuZXhwb3J0cy5UcmV6b3JDb25uZWN0ID0gKDAsIGZhY3RvcnlfMS5mYWN0b3J5KSh7XG4gICAgZXZlbnRFbWl0dGVyOiBpbXBsLmV2ZW50RW1pdHRlcixcbiAgICBpbml0OiBpbXBsLmluaXQuYmluZChpbXBsKSxcbiAgICBjYWxsOiBpbXBsLmNhbGwuYmluZChpbXBsKSxcbiAgICBtYW5pZmVzdDogaW1wbC5tYW5pZmVzdC5iaW5kKGltcGwpLFxuICAgIHJlcXVlc3RMb2dpbjogaW1wbC5yZXF1ZXN0TG9naW4uYmluZChpbXBsKSxcbiAgICB1aVJlc3BvbnNlOiBpbXBsLnVpUmVzcG9uc2UuYmluZChpbXBsKSxcbiAgICBjYW5jZWw6IGltcGwuY2FuY2VsLmJpbmQoaW1wbCksXG4gICAgZGlzcG9zZTogaW1wbC5kaXNwb3NlLmJpbmQoaW1wbCksXG59LCB7XG4gICAgcmVuZGVyV2ViVVNCQnV0dG9uOiBpbXBsLnJlbmRlcldlYlVTQkJ1dHRvbi5iaW5kKGltcGwpLFxuICAgIGRpc2FibGVXZWJVU0I6IGltcGwuZGlzYWJsZVdlYlVTQi5iaW5kKGltcGwpLFxuICAgIHJlcXVlc3RXZWJVU0JEZXZpY2U6IGltcGwucmVxdWVzdFdlYlVTQkRldmljZS5iaW5kKGltcGwpLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb3JlLWluLWlmcmFtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-iframe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TrezorConnect = exports.CoreInPopup = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/events/index.js\");\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/factory.js\");\nconst debug_1 = __webpack_require__(/*! @trezor/connect/lib/utils/debug */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/utils/debug.js\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"(ssr)/./node_modules/.pnpm/@trezor+utils@9.2.6_tslib@2.8.1/node_modules/@trezor/utils/lib/index.js\");\nconst connectSettings_1 = __webpack_require__(/*! ../connectSettings */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js\");\nconst popup = tslib_1.__importStar(__webpack_require__(/*! ../popup */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/index.js\"));\nclass CoreInPopup {\n    constructor() {\n        this.eventEmitter = new events_1.default();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.logger = (0, debug_1.initLog)('@trezor/connect-web');\n        this.popupManagerLogger = (0, debug_1.initLog)('@trezor/connect-web/popupManager');\n    }\n    logWriterFactory(popupManager) {\n        return {\n            add: (message) => {\n                popupManager.channel.postMessage({\n                    event: events_2.UI_EVENT,\n                    type: events_2.IFRAME.LOG,\n                    payload: message,\n                }, { usePromise: false, useQueue: true });\n            },\n        };\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), { manifest: data }));\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        if (this._popupManager) {\n            this._popupManager.close();\n        }\n        return Promise.resolve(undefined);\n    }\n    cancel(error) {\n        if (this._popupManager) {\n            this._popupManager.emit(events_2.POPUP.CLOSED, error);\n        }\n    }\n    init(settings) {\n        var _a, _b;\n        const oldSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign({}, this._settings));\n        const newSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n        if (!((_a = newSettings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        newSettings.useCoreInPopup = true;\n        if (typeof window !== 'undefined' && ((_b = window === null || window === void 0 ? void 0 : window.location) === null || _b === void 0 ? void 0 : _b.origin)) {\n            newSettings.origin = window.location.origin;\n        }\n        const equalSettings = JSON.stringify(oldSettings) === JSON.stringify(newSettings);\n        this._settings = newSettings;\n        if (!this._popupManager || !equalSettings) {\n            if (this._popupManager)\n                this._popupManager.close();\n            this._popupManager = new popup.PopupManager(this._settings, {\n                logger: this.popupManagerLogger,\n            });\n            (0, debug_1.setLogWriter)(() => this.logWriterFactory(this._popupManager));\n        }\n        this.logger.enabled = !!settings.debug;\n        if (!this._settings.manifest) {\n            throw ERRORS.TypedError('Init_ManifestMissing');\n        }\n        this.logger.debug('initiated');\n        return Promise.resolve();\n    }\n    async call(params) {\n        this.logger.debug('call', params);\n        if (!this._popupManager) {\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_NotInitialized'));\n        }\n        if (this._settings.popup) {\n            await this._popupManager.request();\n        }\n        const popupClosed = (0, utils_1.createDeferred)();\n        const popupClosedHandler = () => {\n            this.logger.log('Popup closed during initialization');\n            popupClosed.reject(ERRORS.TypedError('Method_Interrupted'));\n        };\n        this._popupManager.once(events_2.POPUP.CLOSED, popupClosedHandler);\n        try {\n            this.logger.debug('call: popup initialing');\n            await Promise.race([popupClosed.promise, this.callInit()]);\n            this.logger.debug('call: popup initialized');\n            const response = await this._popupManager.channel.postMessage({\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            });\n            this.logger.debug('call: response: ', response);\n            if (response) {\n                if (this._popupManager && response.success) {\n                    this._popupManager.clear();\n                }\n                return {\n                    success: response.success,\n                    payload: response.payload,\n                    device: response.device,\n                };\n            }\n            throw ERRORS.TypedError('Method_NoResponse');\n        }\n        catch (error) {\n            this.logger.error('call: error', error);\n            this._popupManager.clear(false);\n            return (0, events_2.createErrorMessage)(error);\n        }\n        finally {\n            this._popupManager.removeListener(events_2.POPUP.CLOSED, popupClosedHandler);\n        }\n    }\n    async callInit() {\n        var _a, _b;\n        if (!this._popupManager) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        await this._popupManager.channel.init();\n        if (this._settings.env === 'webextension') {\n            await ((_a = this._popupManager.popupPromise) === null || _a === void 0 ? void 0 : _a.promise);\n            this._popupManager.channel.postMessage({\n                type: events_2.POPUP.INIT,\n                payload: {\n                    settings: this._settings,\n                    useCore: true,\n                },\n            });\n        }\n        await ((_b = this._popupManager.handshakePromise) === null || _b === void 0 ? void 0 : _b.promise);\n    }\n    uiResponse(response) {\n        var _a, _b;\n        const { type, payload } = response;\n        (_b = (_a = this._popupManager) === null || _a === void 0 ? void 0 : _a.channel) === null || _b === void 0 ? void 0 : _b.postMessage({ event: events_2.UI_EVENT, type, payload });\n    }\n    renderWebUSBButton() { }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n}\nexports.CoreInPopup = CoreInPopup;\nconst impl = new CoreInPopup();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-popup.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/events/index.js\");\nconst ERRORS = tslib_1.__importStar(__webpack_require__(/*! @trezor/connect/lib/constants/errors */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/constants/errors.js\"));\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/factory.js\");\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"(ssr)/./node_modules/.pnpm/@trezor+utils@9.2.6_tslib@2.8.1/node_modules/@trezor/utils/lib/index.js\");\nconst connectSettings_1 = __webpack_require__(/*! ../connectSettings */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js\");\nclass CoreInSuiteDesktop {\n    constructor() {\n        this.eventEmitter = new events_1.default();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.messages = (0, utils_1.createDeferredManager)();\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), { manifest: data }));\n    }\n    dispose() {\n        var _a;\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\n        return Promise.resolve(undefined);\n    }\n    cancel(_error) { }\n    async handshake() {\n        var _a;\n        const { promise, promiseId } = this.messages.create(1000);\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify({\n            id: promiseId,\n            type: events_2.POPUP.HANDSHAKE,\n        }));\n        try {\n            await promise;\n        }\n        catch (err) {\n            console.error(err);\n            throw new Error('Handshake timed out');\n        }\n    }\n    async init(settings = {}) {\n        var _a, _b;\n        const newSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n        if (!((_a = newSettings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        this._settings = newSettings;\n        (_b = this.ws) === null || _b === void 0 ? void 0 : _b.close();\n        const wsOpen = (0, utils_1.createDeferred)(1000);\n        this.ws = new WebSocket('ws://localhost:21335/connect-ws');\n        this.ws.addEventListener('opened', () => {\n            wsOpen.resolve();\n        });\n        this.ws.addEventListener('error', () => {\n            wsOpen.reject(new Error('WebSocket error'));\n            this.messages.rejectAll(new Error('WebSocket error'));\n        });\n        this.ws.addEventListener('message', (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                this.messages.resolve(data.id, data);\n            }\n            catch (_a) {\n            }\n        });\n        this.ws.addEventListener('close', () => {\n            wsOpen.reject(new Error('WebSocket closed'));\n            this.messages.rejectAll(new Error('WebSocket closed'));\n        });\n        if (this.ws.readyState !== WebSocket.OPEN) {\n            setTimeout(() => {\n                var _a;\n                if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.OPEN) {\n                    wsOpen.resolve();\n                }\n            }, 500);\n            await wsOpen.promise;\n        }\n        return await this.handshake();\n    }\n    async call(params) {\n        var _a;\n        try {\n            if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n                await this.init();\n            }\n            await this.handshake();\n            const { promise, promiseId } = this.messages.create();\n            (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify({\n                id: promiseId,\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            }));\n            return promise;\n        }\n        catch (err) {\n            return {\n                success: false,\n                payload: {\n                    error: err.message,\n                },\n            };\n        }\n    }\n    uiResponse(_response) {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    renderWebUSBButton() { }\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-suite-desktop.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/index.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/index.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst factory_1 = __webpack_require__(/*! @trezor/connect/lib/factory */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/factory.js\");\nconst dynamic_1 = __webpack_require__(/*! @trezor/connect/lib/impl/dynamic */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/impl/dynamic.js\");\nconst core_in_iframe_1 = __webpack_require__(/*! ./impl/core-in-iframe */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-iframe.js\");\nconst core_in_popup_1 = __webpack_require__(/*! ./impl/core-in-popup */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js\");\nconst core_in_suite_desktop_1 = __webpack_require__(/*! ./impl/core-in-suite-desktop */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js\");\nconst connectSettings_1 = __webpack_require__(/*! ./connectSettings */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/connectSettings.js\");\nconst IFRAME_ERRORS = ['Init_IframeBlocked', 'Init_IframeTimeout', 'Transport_Missing'];\nconst impl = new dynamic_1.TrezorConnectDynamic({\n    implementations: [\n        {\n            type: 'iframe',\n            impl: new core_in_iframe_1.CoreInIframe(),\n        },\n        {\n            type: 'core-in-popup',\n            impl: new core_in_popup_1.CoreInPopup(),\n        },\n        {\n            type: 'core-in-suite-desktop',\n            impl: new core_in_suite_desktop_1.CoreInSuiteDesktop(),\n        },\n    ],\n    getInitTarget: (settings) => {\n        if (settings.coreMode === 'iframe') {\n            return 'iframe';\n        }\n        else if (settings.coreMode === 'popup') {\n            return 'core-in-popup';\n        }\n        else if (settings.coreMode === 'suite-desktop') {\n            return 'core-in-suite-desktop';\n        }\n        else {\n            if (settings.coreMode && settings.coreMode !== 'auto') {\n                console.warn(`Invalid coreMode: ${settings.coreMode}`);\n            }\n            return 'iframe';\n        }\n    },\n    handleErrorFallback: async (errorCode) => {\n        var _a, _b, _c, _d, _e;\n        const env = (0, connectSettings_1.getEnv)();\n        const isCoreModeDisabled = ((_a = impl.lastSettings) === null || _a === void 0 ? void 0 : _a.popup) === false || env === 'webextension';\n        const isCoreModeAuto = ((_b = impl.lastSettings) === null || _b === void 0 ? void 0 : _b.coreMode) === 'auto' || ((_c = impl.lastSettings) === null || _c === void 0 ? void 0 : _c.coreMode) === undefined;\n        if (!isCoreModeDisabled && isCoreModeAuto && IFRAME_ERRORS.includes(errorCode)) {\n            const webUsbUnavailableInBrowser = !(navigator === null || navigator === void 0 ? void 0 : navigator.usb);\n            const webUsbDisabledInSettings = ((_e = (_d = impl.lastSettings) === null || _d === void 0 ? void 0 : _d.transports) === null || _e === void 0 ? void 0 : _e.includes('WebUsbTransport')) === false;\n            if (errorCode === 'Transport_Missing' &&\n                (webUsbUnavailableInBrowser || webUsbDisabledInSettings)) {\n                return false;\n            }\n            await impl.switchTarget('core-in-popup');\n            return true;\n        }\n        return false;\n    },\n});\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n}, {\n    renderWebUSBButton: impl.getTarget().renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.getTarget().disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.getTarget().requestWebUSBDevice.bind(impl),\n});\nexports[\"default\"] = TrezorConnect;\ntslib_1.__exportStar(__webpack_require__(/*! @trezor/connect/lib/exports */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/exports.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyxvT0FBNkI7QUFDdkQsa0JBQWtCLG1CQUFPLENBQUMsOE9BQWtDO0FBQzVELHlCQUF5QixtQkFBTyxDQUFDLDhPQUF1QjtBQUN4RCx3QkFBd0IsbUJBQU8sQ0FBQyw0T0FBc0I7QUFDdEQsZ0NBQWdDLG1CQUFPLENBQUMsNFBBQThCO0FBQ3RFLDBCQUEwQixtQkFBTyxDQUFDLHNPQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxrQkFBa0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2YscUJBQXFCLG1CQUFPLENBQUMsb09BQTZCO0FBQzFEIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0B0cmV6b3IrY29ubmVjdC13ZWJAOS40LjdfQGJhYmVsK2NvcmVANy4yNi4wX2J1ZmZlcnV0aWxANC4wLjhfZmFzdGVzdHNtYWxsZXN0dGV4dGVuY29kZXJkZWNvZF80YXJtcGFsYzJubW9xanNrbmJidHQ1ZHpvcS9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgZmFjdG9yeV8xID0gcmVxdWlyZShcIkB0cmV6b3IvY29ubmVjdC9saWIvZmFjdG9yeVwiKTtcbmNvbnN0IGR5bmFtaWNfMSA9IHJlcXVpcmUoXCJAdHJlem9yL2Nvbm5lY3QvbGliL2ltcGwvZHluYW1pY1wiKTtcbmNvbnN0IGNvcmVfaW5faWZyYW1lXzEgPSByZXF1aXJlKFwiLi9pbXBsL2NvcmUtaW4taWZyYW1lXCIpO1xuY29uc3QgY29yZV9pbl9wb3B1cF8xID0gcmVxdWlyZShcIi4vaW1wbC9jb3JlLWluLXBvcHVwXCIpO1xuY29uc3QgY29yZV9pbl9zdWl0ZV9kZXNrdG9wXzEgPSByZXF1aXJlKFwiLi9pbXBsL2NvcmUtaW4tc3VpdGUtZGVza3RvcFwiKTtcbmNvbnN0IGNvbm5lY3RTZXR0aW5nc18xID0gcmVxdWlyZShcIi4vY29ubmVjdFNldHRpbmdzXCIpO1xuY29uc3QgSUZSQU1FX0VSUk9SUyA9IFsnSW5pdF9JZnJhbWVCbG9ja2VkJywgJ0luaXRfSWZyYW1lVGltZW91dCcsICdUcmFuc3BvcnRfTWlzc2luZyddO1xuY29uc3QgaW1wbCA9IG5ldyBkeW5hbWljXzEuVHJlem9yQ29ubmVjdER5bmFtaWMoe1xuICAgIGltcGxlbWVudGF0aW9uczogW1xuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnaWZyYW1lJyxcbiAgICAgICAgICAgIGltcGw6IG5ldyBjb3JlX2luX2lmcmFtZV8xLkNvcmVJbklmcmFtZSgpLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAnY29yZS1pbi1wb3B1cCcsXG4gICAgICAgICAgICBpbXBsOiBuZXcgY29yZV9pbl9wb3B1cF8xLkNvcmVJblBvcHVwKCksXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6ICdjb3JlLWluLXN1aXRlLWRlc2t0b3AnLFxuICAgICAgICAgICAgaW1wbDogbmV3IGNvcmVfaW5fc3VpdGVfZGVza3RvcF8xLkNvcmVJblN1aXRlRGVza3RvcCgpLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgZ2V0SW5pdFRhcmdldDogKHNldHRpbmdzKSA9PiB7XG4gICAgICAgIGlmIChzZXR0aW5ncy5jb3JlTW9kZSA9PT0gJ2lmcmFtZScpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWZyYW1lJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZXR0aW5ncy5jb3JlTW9kZSA9PT0gJ3BvcHVwJykge1xuICAgICAgICAgICAgcmV0dXJuICdjb3JlLWluLXBvcHVwJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZXR0aW5ncy5jb3JlTW9kZSA9PT0gJ3N1aXRlLWRlc2t0b3AnKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2NvcmUtaW4tc3VpdGUtZGVza3RvcCc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MuY29yZU1vZGUgJiYgc2V0dGluZ3MuY29yZU1vZGUgIT09ICdhdXRvJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgSW52YWxpZCBjb3JlTW9kZTogJHtzZXR0aW5ncy5jb3JlTW9kZX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAnaWZyYW1lJztcbiAgICAgICAgfVxuICAgIH0sXG4gICAgaGFuZGxlRXJyb3JGYWxsYmFjazogYXN5bmMgKGVycm9yQ29kZSkgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgICAgICBjb25zdCBlbnYgPSAoMCwgY29ubmVjdFNldHRpbmdzXzEuZ2V0RW52KSgpO1xuICAgICAgICBjb25zdCBpc0NvcmVNb2RlRGlzYWJsZWQgPSAoKF9hID0gaW1wbC5sYXN0U2V0dGluZ3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wb3B1cCkgPT09IGZhbHNlIHx8IGVudiA9PT0gJ3dlYmV4dGVuc2lvbic7XG4gICAgICAgIGNvbnN0IGlzQ29yZU1vZGVBdXRvID0gKChfYiA9IGltcGwubGFzdFNldHRpbmdzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY29yZU1vZGUpID09PSAnYXV0bycgfHwgKChfYyA9IGltcGwubGFzdFNldHRpbmdzKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY29yZU1vZGUpID09PSB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghaXNDb3JlTW9kZURpc2FibGVkICYmIGlzQ29yZU1vZGVBdXRvICYmIElGUkFNRV9FUlJPUlMuaW5jbHVkZXMoZXJyb3JDb2RlKSkge1xuICAgICAgICAgICAgY29uc3Qgd2ViVXNiVW5hdmFpbGFibGVJbkJyb3dzZXIgPSAhKG5hdmlnYXRvciA9PT0gbnVsbCB8fCBuYXZpZ2F0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5hdmlnYXRvci51c2IpO1xuICAgICAgICAgICAgY29uc3Qgd2ViVXNiRGlzYWJsZWRJblNldHRpbmdzID0gKChfZSA9IChfZCA9IGltcGwubGFzdFNldHRpbmdzKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QudHJhbnNwb3J0cykgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLmluY2x1ZGVzKCdXZWJVc2JUcmFuc3BvcnQnKSkgPT09IGZhbHNlO1xuICAgICAgICAgICAgaWYgKGVycm9yQ29kZSA9PT0gJ1RyYW5zcG9ydF9NaXNzaW5nJyAmJlxuICAgICAgICAgICAgICAgICh3ZWJVc2JVbmF2YWlsYWJsZUluQnJvd3NlciB8fCB3ZWJVc2JEaXNhYmxlZEluU2V0dGluZ3MpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgaW1wbC5zd2l0Y2hUYXJnZXQoJ2NvcmUtaW4tcG9wdXAnKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxufSk7XG5jb25zdCBUcmV6b3JDb25uZWN0ID0gKDAsIGZhY3RvcnlfMS5mYWN0b3J5KSh7XG4gICAgZXZlbnRFbWl0dGVyOiBpbXBsLmV2ZW50RW1pdHRlcixcbiAgICBpbml0OiBpbXBsLmluaXQuYmluZChpbXBsKSxcbiAgICBjYWxsOiBpbXBsLmNhbGwuYmluZChpbXBsKSxcbiAgICBtYW5pZmVzdDogaW1wbC5tYW5pZmVzdC5iaW5kKGltcGwpLFxuICAgIHJlcXVlc3RMb2dpbjogaW1wbC5yZXF1ZXN0TG9naW4uYmluZChpbXBsKSxcbiAgICB1aVJlc3BvbnNlOiBpbXBsLnVpUmVzcG9uc2UuYmluZChpbXBsKSxcbiAgICBjYW5jZWw6IGltcGwuY2FuY2VsLmJpbmQoaW1wbCksXG4gICAgZGlzcG9zZTogaW1wbC5kaXNwb3NlLmJpbmQoaW1wbCksXG59LCB7XG4gICAgcmVuZGVyV2ViVVNCQnV0dG9uOiBpbXBsLmdldFRhcmdldCgpLnJlbmRlcldlYlVTQkJ1dHRvbi5iaW5kKGltcGwpLFxuICAgIGRpc2FibGVXZWJVU0I6IGltcGwuZ2V0VGFyZ2V0KCkuZGlzYWJsZVdlYlVTQi5iaW5kKGltcGwpLFxuICAgIHJlcXVlc3RXZWJVU0JEZXZpY2U6IGltcGwuZ2V0VGFyZ2V0KCkucmVxdWVzdFdlYlVTQkRldmljZS5iaW5kKGltcGwpLFxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBUcmV6b3JDb25uZWN0O1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIkB0cmV6b3IvY29ubmVjdC9saWIvZXhwb3J0c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/index.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/index.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PopupManager = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst utils_1 = __webpack_require__(/*! @trezor/utils */ \"(ssr)/./node_modules/.pnpm/@trezor+utils@9.2.6_tslib@2.8.1/node_modules/@trezor/utils/lib/index.js\");\nconst events_2 = __webpack_require__(/*! @trezor/connect/lib/events */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/events/index.js\");\nconst urlUtils_1 = __webpack_require__(/*! @trezor/connect/lib/utils/urlUtils */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/utils/urlUtils.js\");\nconst version_1 = __webpack_require__(/*! @trezor/connect/lib/data/version */ \"(ssr)/./node_modules/.pnpm/@trezor+connect@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecoder@1_4e3dpiw6dnjk3im3imilgxlqqu/node_modules/@trezor/connect/lib/data/version.js\");\nconst showPopupRequest_1 = __webpack_require__(/*! ./showPopupRequest */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\");\nconst serviceworker_window_1 = __webpack_require__(/*! ../channels/serviceworker-window */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js\");\nconst window_window_1 = __webpack_require__(/*! ../channels/window-window */ \"(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/channels/window-window.js\");\nconst checkIfTabExists = (tabId) => new Promise(resolve => {\n    if (!tabId)\n        return resolve(false);\n    function callback() {\n        if (chrome.runtime.lastError) {\n            resolve(false);\n        }\n        else {\n            resolve(true);\n        }\n    }\n    chrome.tabs.get(tabId, callback);\n});\nconst POPUP_REQUEST_TIMEOUT = 850;\nconst POPUP_CLOSE_INTERVAL = 500;\nconst POPUP_OPEN_TIMEOUT = 5000;\nclass PopupManager extends events_1.default {\n    constructor(settings, { logger }) {\n        var _a;\n        super();\n        this.locked = false;\n        this.extensionTabId = 0;\n        this.injectContentScript = (tabId) => {\n            chrome.permissions.getAll(permissions => {\n                var _a;\n                if ((_a = permissions.permissions) === null || _a === void 0 ? void 0 : _a.includes('scripting')) {\n                    (0, utils_1.scheduleAction)(() => chrome.scripting\n                        .executeScript({\n                        target: { tabId },\n                        func: () => {\n                        },\n                    })\n                        .then(() => {\n                        this.logger.debug('content script injected');\n                    })\n                        .catch(error => {\n                        this.logger.error('content script injection error', error);\n                        throw error;\n                    }), { attempts: new Array(3).fill({ timeout: 100 }) });\n                }\n                else {\n                }\n            });\n        };\n        this.settings = settings;\n        this.origin = (0, urlUtils_1.getOrigin)(settings.popupSrc);\n        this.logger = logger;\n        if (this.isWebExtensionWithTab()) {\n            this.channel = new serviceworker_window_1.ServiceWorkerWindowChannel({\n                name: 'trezor-connect',\n                channel: {\n                    here: '@trezor/connect-webextension',\n                    peer: '@trezor/connect-content-script',\n                },\n                logger,\n                currentId: () => {\n                    var _a, _b;\n                    if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'tab')\n                        return (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.tab.id;\n                },\n                legacyMode: !this.settings.useCoreInPopup,\n            });\n        }\n        else {\n            this.channel = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => {\n                    var _a, _b;\n                    if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'window')\n                        return (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.window;\n                },\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-popup',\n                },\n                logger,\n                origin: this.origin,\n                legacyMode: !this.settings.useCoreInPopup,\n            });\n        }\n        if (!this.settings.useCoreInPopup) {\n            this.iframeHandshakePromise = (0, utils_1.createDeferred)(events_2.IFRAME.LOADED);\n            this.channelIframe = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => window,\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-iframe',\n                },\n                logger,\n                origin: this.origin,\n            });\n            (_a = this.channelIframe) === null || _a === void 0 ? void 0 : _a.on('message', this.handleMessage.bind(this));\n        }\n        if (this.settings.useCoreInPopup) {\n            this.handshakePromise = (0, utils_1.createDeferred)();\n            this.channel.on('message', this.handleCoreMessage.bind(this));\n            return;\n        }\n        else if (this.isWebExtensionWithTab()) {\n            this.channel.on('message', this.handleExtensionMessage.bind(this));\n        }\n        else {\n            this.channel.on('message', this.handleMessage.bind(this));\n        }\n        this.channel.init();\n    }\n    async request() {\n        var _a, _b, _c, _d, _f;\n        if (this.settings.useCoreInPopup && ((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'tab') {\n            const currentPopupExists = await checkIfTabExists((_c = (_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.tab) === null || _c === void 0 ? void 0 : _c.id);\n            if (!currentPopupExists) {\n                this.clear();\n            }\n        }\n        if (this.locked) {\n            if (((_d = this.popupWindow) === null || _d === void 0 ? void 0 : _d.mode) === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.update(this.popupWindow.tab.id, { active: true });\n            }\n            else if (((_f = this.popupWindow) === null || _f === void 0 ? void 0 : _f.mode) === 'window') {\n                this.popupWindow.window.focus();\n            }\n            return;\n        }\n        if (this.popupWindow && !this.locked) {\n            this.close();\n        }\n        const openFn = this.open.bind(this);\n        this.locked = true;\n        const timeout = this.settings.env === 'webextension' ? 1 : POPUP_REQUEST_TIMEOUT;\n        this.requestTimeout = setTimeout(() => {\n            this.requestTimeout = undefined;\n            openFn();\n        }, timeout);\n    }\n    unlock() {\n        this.locked = false;\n    }\n    open() {\n        const src = this.settings.popupSrc;\n        this.popupPromise = (0, utils_1.createDeferred)(events_2.POPUP.LOADED);\n        const url = this.buildPopupUrl(src);\n        this.openWrapper(url);\n        this.closeInterval = setInterval(() => {\n            if (!this.popupWindow)\n                return;\n            if (this.popupWindow.mode === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.get(this.popupWindow.tab.id, tab => {\n                    if (!tab) {\n                        this.emitClosed();\n                        this.clear();\n                    }\n                });\n            }\n            else if (this.popupWindow.mode === 'window' && this.popupWindow.window.closed) {\n                this.clear();\n                this.emitClosed();\n            }\n        }, POPUP_CLOSE_INTERVAL);\n        if (this.settings.useCoreInPopup) {\n            return;\n        }\n        this.openTimeout = setTimeout(() => {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emitClosed();\n            });\n        }, POPUP_OPEN_TIMEOUT);\n    }\n    buildPopupUrl(src) {\n        var _a;\n        const params = new URLSearchParams();\n        params.set('version', version_1.VERSION);\n        params.set('env', this.settings.env);\n        if (this.settings.env === 'webextension' && ((_a = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _a === void 0 ? void 0 : _a.id)) {\n            params.set('extension-id', chrome.runtime.id);\n            params.set('cs-ver', version_1.CONTENT_SCRIPT_VERSION.toString());\n        }\n        return src + '?' + params.toString();\n    }\n    openWrapper(url) {\n        if (this.isWebExtensionWithTab()) {\n            chrome.windows.getCurrent(currentWindow => {\n                this.logger.debug('opening popup. currentWindow: ', currentWindow);\n                if (currentWindow.type !== 'normal') {\n                    chrome.windows.create({ url }, newWindow => {\n                        chrome.tabs.query({\n                            windowId: newWindow === null || newWindow === void 0 ? void 0 : newWindow.id,\n                            active: true,\n                        }, tabs => {\n                            this.popupWindow = { mode: 'tab', tab: tabs[0] };\n                            this.injectContentScript(tabs[0].id);\n                        });\n                    });\n                }\n                else {\n                    chrome.tabs.query({\n                        currentWindow: true,\n                        active: true,\n                    }, tabs => {\n                        this.extensionTabId = tabs[0].id;\n                        chrome.tabs.create({\n                            url,\n                            index: tabs[0].index + 1,\n                        }, tab => {\n                            this.popupWindow = { mode: 'tab', tab };\n                            this.injectContentScript(tab.id);\n                        });\n                    });\n                }\n            });\n        }\n        else {\n            const windowResult = window.open(url, 'modal');\n            if (!windowResult)\n                return;\n            this.popupWindow = { mode: 'window', window: windowResult };\n        }\n        if (!this.channel.isConnected) {\n            this.channel.connect();\n        }\n    }\n    handleCoreMessage(message) {\n        var _a;\n        if (message.type === events_2.POPUP.BOOTSTRAP) {\n            this.channel.init();\n        }\n        else if (message.type === events_2.POPUP.LOADED) {\n            this.handleMessage(message);\n            this.channel.postMessage({\n                type: events_2.POPUP.INIT,\n                payload: {\n                    settings: this.settings,\n                    useCore: true,\n                },\n            });\n        }\n        else if (message.type === events_2.POPUP.CORE_LOADED) {\n            this.channel.postMessage({\n                type: events_2.POPUP.HANDSHAKE,\n                payload: { settings: this.settings },\n            });\n            (_a = this.handshakePromise) === null || _a === void 0 ? void 0 : _a.resolve();\n        }\n        else if (message.type === events_2.POPUP.CLOSED) {\n            this.emitClosed();\n        }\n        else if (message.type === events_2.POPUP.CONTENT_SCRIPT_LOADED) {\n            const { contentScriptVersion } = message.payload;\n            if (contentScriptVersion !== version_1.CONTENT_SCRIPT_VERSION) {\n                console.warn(`Content script version mismatch. Expected ${version_1.CONTENT_SCRIPT_VERSION}, got ${contentScriptVersion}`);\n            }\n        }\n    }\n    handleExtensionMessage(data) {\n        if (data.type === events_2.POPUP.ERROR ||\n            data.type === events_2.POPUP.LOADED ||\n            data.type === events_2.POPUP.BOOTSTRAP) {\n            this.handleMessage(data);\n        }\n        else if (data.type === events_2.POPUP.EXTENSION_USB_PERMISSIONS) {\n            chrome.tabs.query({\n                currentWindow: true,\n                active: true,\n            }, tabs => {\n                chrome.tabs.create({\n                    url: 'trezor-usb-permissions.html',\n                    index: tabs[0].index + 1,\n                }, _tab => {\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CLOSE_WINDOW) {\n            this.clear();\n        }\n    }\n    handleMessage(data) {\n        var _a, _b;\n        if (data.type === events_2.IFRAME.LOADED) {\n            (_a = this.iframeHandshakePromise) === null || _a === void 0 ? void 0 : _a.resolve(data.payload);\n        }\n        else if (data.type === events_2.POPUP.BOOTSTRAP) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n        }\n        else if (data.type === events_2.POPUP.ERROR && this.popupWindow) {\n            const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n            this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n            this.clear();\n        }\n        else if (data.type === events_2.POPUP.LOADED) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n            if (this.popupPromise) {\n                this.popupPromise.resolve();\n                this.popupPromise = undefined;\n            }\n            (_b = this.iframeHandshakePromise) === null || _b === void 0 ? void 0 : _b.promise.then(payload => {\n                this.channel.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: Object.assign(Object.assign({}, payload), { settings: this.settings }),\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CANCEL_POPUP_REQUEST) {\n            clearTimeout(this.requestTimeout);\n            if (this.popupPromise) {\n                this.close();\n            }\n            this.unlock();\n        }\n        else if (data.type === events_2.UI.CLOSE_UI_WINDOW) {\n            this.clear(false);\n        }\n    }\n    clear(focus = true) {\n        this.locked = false;\n        this.popupPromise = undefined;\n        this.handshakePromise = (0, utils_1.createDeferred)();\n        if (this.channel) {\n            this.channel.disconnect();\n        }\n        if (this.requestTimeout) {\n            clearTimeout(this.requestTimeout);\n            this.requestTimeout = undefined;\n        }\n        if (this.openTimeout) {\n            clearTimeout(this.openTimeout);\n            this.openTimeout = undefined;\n        }\n        if (this.closeInterval) {\n            clearInterval(this.closeInterval);\n            this.closeInterval = undefined;\n        }\n        if (focus && this.extensionTabId) {\n            chrome.tabs.update(this.extensionTabId, { active: true });\n            this.extensionTabId = 0;\n        }\n    }\n    close() {\n        var _a;\n        if (!this.popupWindow)\n            return;\n        this.logger.debug('closing popup');\n        if (this.popupWindow.mode === 'tab') {\n            let _e = chrome.runtime.lastError;\n            if (this.popupWindow.tab.id) {\n                chrome.tabs.remove(this.popupWindow.tab.id, () => {\n                    _e = chrome.runtime.lastError;\n                    if (_e) {\n                        this.logger.error('closed with error', _e);\n                    }\n                });\n            }\n        }\n        else if (this.popupWindow.mode === 'window') {\n            this.popupWindow.window.close();\n        }\n        this.popupWindow = undefined;\n        if ((_a = this.settings) === null || _a === void 0 ? void 0 : _a.useCoreInPopup) {\n            this.channel.clear();\n        }\n    }\n    async postMessage(message) {\n        var _a, _b;\n        if (!this.popupWindow && message.type !== events_2.UI.REQUEST_UI_WINDOW && this.openTimeout) {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emitClosed();\n            });\n            return;\n        }\n        if (this.popupPromise) {\n            await this.popupPromise.promise;\n        }\n        if (((_a = this.popupWindow) === null || _a === void 0 ? void 0 : _a.mode) === 'window') {\n            this.popupWindow.window.postMessage(message, this.origin);\n        }\n        else if (((_b = this.popupWindow) === null || _b === void 0 ? void 0 : _b.mode) === 'tab') {\n            this.channel.postMessage(message);\n        }\n    }\n    isWebExtensionWithTab() {\n        var _a;\n        return (((_a = this.settings) === null || _a === void 0 ? void 0 : _a.env) === 'webextension' &&\n            typeof chrome !== 'undefined' &&\n            typeof (chrome === null || chrome === void 0 ? void 0 : chrome.tabs) !== 'undefined');\n    }\n    emitClosed() {\n        var _a;\n        if ((_a = this.settings) === null || _a === void 0 ? void 0 : _a.useCoreInPopup) {\n            this.channel.resolveMessagePromises({\n                code: 'Method_Interrupted',\n                error: events_2.POPUP.CLOSED,\n            });\n        }\n        this.emit(events_2.POPUP.CLOSED);\n    }\n}\nexports.PopupManager = PopupManager;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.showPopupRequest = void 0;\nconst LAYER_ID = 'TrezorConnectInteractionLayer';\nconst HTML = `\n    <div class=\"trezorconnect-container\" id=\"${LAYER_ID}\">\n        <div class=\"trezorconnect-window\">\n            <div class=\"trezorconnect-head\">\n                <svg class=\"trezorconnect-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 163.7 41.9\" width=\"78px\" height=\"20px\" preserveAspectRatio=\"xMinYMin meet\">\n                    <polygon points=\"101.1,12.8 118.2,12.8 118.2,17.3 108.9,29.9 118.2,29.9 118.2,35.2 101.1,35.2 101.1,30.7 110.4,18.1 101.1,18.1\"/>\n                    <path d=\"M158.8,26.9c2.1-0.8,4.3-2.9,4.3-6.6c0-4.5-3.1-7.4-7.7-7.4h-10.5v22.3h5.8v-7.5h2.2l4.1,7.5h6.7L158.8,26.9z M154.7,22.5 h-4V18h4c1.5,0,2.5,0.9,2.5,2.2C157.2,21.6,156.2,22.5,154.7,22.5z\"/>\n                    <path d=\"M130.8,12.5c-6.8,0-11.6,4.9-11.6,11.5s4.9,11.5,11.6,11.5s11.7-4.9,11.7-11.5S137.6,12.5,130.8,12.5z M130.8,30.3 c-3.4,0-5.7-2.6-5.7-6.3c0-3.8,2.3-6.3,5.7-6.3c3.4,0,5.8,2.6,5.8,6.3C136.6,27.7,134.2,30.3,130.8,30.3z\"/>\n                    <polygon points=\"82.1,12.8 98.3,12.8 98.3,18 87.9,18 87.9,21.3 98,21.3 98,26.4 87.9,26.4 87.9,30 98.3,30 98.3,35.2 82.1,35.2 \"/>\n                    <path d=\"M24.6,9.7C24.6,4.4,20,0,14.4,0S4.2,4.4,4.2,9.7v3.1H0v22.3h0l14.4,6.7l14.4-6.7h0V12.9h-4.2V9.7z M9.4,9.7 c0-2.5,2.2-4.5,5-4.5s5,2,5,4.5v3.1H9.4V9.7z M23,31.5l-8.6,4l-8.6-4V18.1H23V31.5z\"/>\n                    <path d=\"M79.4,20.3c0-4.5-3.1-7.4-7.7-7.4H61.2v22.3H67v-7.5h2.2l4.1,7.5H80l-4.9-8.3C77.2,26.1,79.4,24,79.4,20.3z M71,22.5h-4V18 h4c1.5,0,2.5,0.9,2.5,2.2C73.5,21.6,72.5,22.5,71,22.5z\"/>\n                    <polygon points=\"40.5,12.8 58.6,12.8 58.6,18.1 52.4,18.1 52.4,35.2 46.6,35.2 46.6,18.1 40.5,18.1 \"/>\n                </svg>\n                <div class=\"trezorconnect-close\">\n                    <svg x=\"0px\" y=\"0px\" viewBox=\"24 24 60 60\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMinYMin meet\">\n                        <polygon class=\"st0\" points=\"40,67.9 42.1,70 55,57.1 67.9,70 70,67.9 57.1,55 70,42.1 67.9,40 55,52.9 42.1,40 40,42.1 52.9,55 \"/>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"trezorconnect-body\">\n                <h3>Popup was blocked</h3>\n                <p>Please click to \"Continue\" to open popup manually</p>\n                <button class=\"trezorconnect-open\">Continue</button>\n            </div>\n        </div>\n    </div>\n`;\nconst showPopupRequest = (open, cancel) => {\n    if (document.getElementById(LAYER_ID)) {\n        return;\n    }\n    const div = document.createElement('div');\n    div.id = LAYER_ID;\n    div.className = 'trezorconnect-container';\n    div.innerHTML = HTML;\n    if (document.body) {\n        document.body.appendChild(div);\n    }\n    const button = div.getElementsByClassName('trezorconnect-open')[0];\n    button.onclick = () => {\n        open();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n    const close = div.getElementsByClassName('trezorconnect-close')[0];\n    close.onclick = () => {\n        cancel();\n        if (document.body) {\n            document.body.removeChild(div);\n        }\n    };\n};\nexports.showPopupRequest = showPopupRequest;\n//# sourceMappingURL=showPopupRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi9wb3B1cC9zaG93UG9wdXBSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0B0cmV6b3IrY29ubmVjdC13ZWJAOS40LjdfQGJhYmVsK2NvcmVANy4yNi4wX2J1ZmZlcnV0aWxANC4wLjhfZmFzdGVzdHNtYWxsZXN0dGV4dGVuY29kZXJkZWNvZF80YXJtcGFsYzJubW9xanNrbmJidHQ1ZHpvcS9ub2RlX21vZHVsZXMvQHRyZXpvci9jb25uZWN0LXdlYi9saWIvcG9wdXAvc2hvd1BvcHVwUmVxdWVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2hvd1BvcHVwUmVxdWVzdCA9IHZvaWQgMDtcbmNvbnN0IExBWUVSX0lEID0gJ1RyZXpvckNvbm5lY3RJbnRlcmFjdGlvbkxheWVyJztcbmNvbnN0IEhUTUwgPSBgXG4gICAgPGRpdiBjbGFzcz1cInRyZXpvcmNvbm5lY3QtY29udGFpbmVyXCIgaWQ9XCIke0xBWUVSX0lEfVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidHJlem9yY29ubmVjdC13aW5kb3dcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWhlYWRcIj5cbiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPVwidHJlem9yY29ubmVjdC1sb2dvXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDE2My43IDQxLjlcIiB3aWR0aD1cIjc4cHhcIiBoZWlnaHQ9XCIyMHB4XCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaW5ZTWluIG1lZXRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHBvbHlnb24gcG9pbnRzPVwiMTAxLjEsMTIuOCAxMTguMiwxMi44IDExOC4yLDE3LjMgMTA4LjksMjkuOSAxMTguMiwyOS45IDExOC4yLDM1LjIgMTAxLjEsMzUuMiAxMDEuMSwzMC43IDExMC40LDE4LjEgMTAxLjEsMTguMVwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xNTguOCwyNi45YzIuMS0wLjgsNC4zLTIuOSw0LjMtNi42YzAtNC41LTMuMS03LjQtNy43LTcuNGgtMTAuNXYyMi4zaDUuOHYtNy41aDIuMmw0LjEsNy41aDYuN0wxNTguOCwyNi45eiBNMTU0LjcsMjIuNSBoLTRWMThoNGMxLjUsMCwyLjUsMC45LDIuNSwyLjJDMTU3LjIsMjEuNiwxNTYuMiwyMi41LDE1NC43LDIyLjV6XCIvPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTEzMC44LDEyLjVjLTYuOCwwLTExLjYsNC45LTExLjYsMTEuNXM0LjksMTEuNSwxMS42LDExLjVzMTEuNy00LjksMTEuNy0xMS41UzEzNy42LDEyLjUsMTMwLjgsMTIuNXogTTEzMC44LDMwLjMgYy0zLjQsMC01LjctMi42LTUuNy02LjNjMC0zLjgsMi4zLTYuMyw1LjctNi4zYzMuNCwwLDUuOCwyLjYsNS44LDYuM0MxMzYuNiwyNy43LDEzNC4yLDMwLjMsMTMwLjgsMzAuM3pcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIHBvaW50cz1cIjgyLjEsMTIuOCA5OC4zLDEyLjggOTguMywxOCA4Ny45LDE4IDg3LjksMjEuMyA5OCwyMS4zIDk4LDI2LjQgODcuOSwyNi40IDg3LjksMzAgOTguMywzMCA5OC4zLDM1LjIgODIuMSwzNS4yIFwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0yNC42LDkuN0MyNC42LDQuNCwyMCwwLDE0LjQsMFM0LjIsNC40LDQuMiw5Ljd2My4xSDB2MjIuM2gwbDE0LjQsNi43bDE0LjQtNi43aDBWMTIuOWgtNC4yVjkuN3ogTTkuNCw5LjcgYzAtMi41LDIuMi00LjUsNS00LjVzNSwyLDUsNC41djMuMUg5LjRWOS43eiBNMjMsMzEuNWwtOC42LDRsLTguNi00VjE4LjFIMjNWMzEuNXpcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNNzkuNCwyMC4zYzAtNC41LTMuMS03LjQtNy43LTcuNEg2MS4ydjIyLjNINjd2LTcuNWgyLjJsNC4xLDcuNUg4MGwtNC45LTguM0M3Ny4yLDI2LjEsNzkuNCwyNCw3OS40LDIwLjN6IE03MSwyMi41aC00VjE4IGg0YzEuNSwwLDIuNSwwLjksMi41LDIuMkM3My41LDIxLjYsNzIuNSwyMi41LDcxLDIyLjV6XCIvPlxuICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCI0MC41LDEyLjggNTguNiwxMi44IDU4LjYsMTguMSA1Mi40LDE4LjEgNTIuNCwzNS4yIDQ2LjYsMzUuMiA0Ni42LDE4LjEgNDAuNSwxOC4xIFwiLz5cbiAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidHJlem9yY29ubmVjdC1jbG9zZVwiPlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjI0IDI0IDYwIDYwXCIgd2lkdGg9XCIyNHB4XCIgaGVpZ2h0PVwiMjRweFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWluWU1pbiBtZWV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBjbGFzcz1cInN0MFwiIHBvaW50cz1cIjQwLDY3LjkgNDIuMSw3MCA1NSw1Ny4xIDY3LjksNzAgNzAsNjcuOSA1Ny4xLDU1IDcwLDQyLjEgNjcuOSw0MCA1NSw1Mi45IDQyLjEsNDAgNDAsNDIuMSA1Mi45LDU1IFwiLz5cbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0cmV6b3Jjb25uZWN0LWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8aDM+UG9wdXAgd2FzIGJsb2NrZWQ8L2gzPlxuICAgICAgICAgICAgICAgIDxwPlBsZWFzZSBjbGljayB0byBcIkNvbnRpbnVlXCIgdG8gb3BlbiBwb3B1cCBtYW51YWxseTwvcD5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwidHJlem9yY29ubmVjdC1vcGVuXCI+Q29udGludWU8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbmA7XG5jb25zdCBzaG93UG9wdXBSZXF1ZXN0ID0gKG9wZW4sIGNhbmNlbCkgPT4ge1xuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChMQVlFUl9JRCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkaXYuaWQgPSBMQVlFUl9JRDtcbiAgICBkaXYuY2xhc3NOYW1lID0gJ3RyZXpvcmNvbm5lY3QtY29udGFpbmVyJztcbiAgICBkaXYuaW5uZXJIVE1MID0gSFRNTDtcbiAgICBpZiAoZG9jdW1lbnQuYm9keSkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7XG4gICAgfVxuICAgIGNvbnN0IGJ1dHRvbiA9IGRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0cmV6b3Jjb25uZWN0LW9wZW4nKVswXTtcbiAgICBidXR0b24ub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgb3BlbigpO1xuICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkaXYpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBjbG9zZSA9IGRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0cmV6b3Jjb25uZWN0LWNsb3NlJylbMF07XG4gICAgY2xvc2Uub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgY2FuY2VsKCk7XG4gICAgICAgIGlmIChkb2N1bWVudC5ib2R5KSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRpdik7XG4gICAgICAgIH1cbiAgICB9O1xufTtcbmV4cG9ydHMuc2hvd1BvcHVwUmVxdWVzdCA9IHNob3dQb3B1cFJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaG93UG9wdXBSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/popup/showPopupRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/webusb/button.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/webusb/button.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst render = (className = '', url) => {\n    const query = className || '.trezor-webusb-button';\n    const buttons = document.querySelectorAll(query);\n    const src = `${url}?${Date.now()}`;\n    buttons.forEach(b => {\n        if (b.getElementsByTagName('iframe').length < 1) {\n            const bounds = b.getBoundingClientRect();\n            const btnIframe = document.createElement('iframe');\n            btnIframe.frameBorder = '0';\n            btnIframe.width = `${Math.round(bounds.width)}px`;\n            btnIframe.height = `${Math.round(bounds.height)}px`;\n            btnIframe.style.position = 'absolute';\n            btnIframe.style.top = '0px';\n            btnIframe.style.left = '0px';\n            btnIframe.style.zIndex = '1';\n            btnIframe.setAttribute('allow', 'usb');\n            btnIframe.setAttribute('scrolling', 'no');\n            btnIframe.src = src;\n            b.append(btnIframe);\n        }\n    });\n};\nexports[\"default\"] = render;\n//# sourceMappingURL=button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi93ZWJ1c2IvYnV0dG9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixJQUFJLEdBQUcsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHlCQUF5QjtBQUMxRCxrQ0FBa0MsMEJBQTBCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitjb25uZWN0LXdlYkA5LjQuN19AYmFiZWwrY29yZUA3LjI2LjBfYnVmZmVydXRpbEA0LjAuOF9mYXN0ZXN0c21hbGxlc3R0ZXh0ZW5jb2RlcmRlY29kXzRhcm1wYWxjMm5tb3Fqc2tuYmJ0dDVkem9xL25vZGVfbW9kdWxlcy9AdHJlem9yL2Nvbm5lY3Qtd2ViL2xpYi93ZWJ1c2IvYnV0dG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgcmVuZGVyID0gKGNsYXNzTmFtZSA9ICcnLCB1cmwpID0+IHtcbiAgICBjb25zdCBxdWVyeSA9IGNsYXNzTmFtZSB8fCAnLnRyZXpvci13ZWJ1c2ItYnV0dG9uJztcbiAgICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChxdWVyeSk7XG4gICAgY29uc3Qgc3JjID0gYCR7dXJsfT8ke0RhdGUubm93KCl9YDtcbiAgICBidXR0b25zLmZvckVhY2goYiA9PiB7XG4gICAgICAgIGlmIChiLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpZnJhbWUnKS5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICBjb25zdCBib3VuZHMgPSBiLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgY29uc3QgYnRuSWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICAgICAgICBidG5JZnJhbWUuZnJhbWVCb3JkZXIgPSAnMCc7XG4gICAgICAgICAgICBidG5JZnJhbWUud2lkdGggPSBgJHtNYXRoLnJvdW5kKGJvdW5kcy53aWR0aCl9cHhgO1xuICAgICAgICAgICAgYnRuSWZyYW1lLmhlaWdodCA9IGAke01hdGgucm91bmQoYm91bmRzLmhlaWdodCl9cHhgO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zdHlsZS50b3AgPSAnMHB4JztcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zdHlsZS5sZWZ0ID0gJzBweCc7XG4gICAgICAgICAgICBidG5JZnJhbWUuc3R5bGUuekluZGV4ID0gJzEnO1xuICAgICAgICAgICAgYnRuSWZyYW1lLnNldEF0dHJpYnV0ZSgnYWxsb3cnLCAndXNiJyk7XG4gICAgICAgICAgICBidG5JZnJhbWUuc2V0QXR0cmlidXRlKCdzY3JvbGxpbmcnLCAnbm8nKTtcbiAgICAgICAgICAgIGJ0bklmcmFtZS5zcmMgPSBzcmM7XG4gICAgICAgICAgICBiLmFwcGVuZChidG5JZnJhbWUpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVuZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnV0dG9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+connect-web@9.4.7_@babel+core@7.26.0_bufferutil@4.0.8_fastestsmallesttextencoderdecod_4armpalc2nmoqjsknbbtt5dzoq/node_modules/@trezor/connect-web/lib/webusb/button.js\n");

/***/ })

};
;