"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ngraveio+bc-ur@1.1.13";
exports.ids = ["vendor-chunks/@ngraveio+bc-ur@1.1.13"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/bytewords.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/bytewords.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst bytewords = 'ableacidalsoapexaquaarchatomauntawayaxisbackbaldbarnbeltbetabiasbluebodybragbrewbulbbuzzcalmcashcatschefcityclawcodecolacookcostcruxcurlcuspcyandarkdatadaysdelidicedietdoordowndrawdropdrumdulldutyeacheasyechoedgeepicevenexamexiteyesfactfairfernfigsfilmfishfizzflapflewfluxfoxyfreefrogfuelfundgalagamegeargemsgiftgirlglowgoodgraygrimgurugushgyrohalfhanghardhawkheathelphighhillholyhopehornhutsicedideaidleinchinkyintoirisironitemjadejazzjoinjoltjowljudojugsjumpjunkjurykeepkenokeptkeyskickkilnkingkitekiwiknoblamblavalazyleaflegsliarlimplionlistlogoloudloveluaulucklungmainmanymathmazememomenumeowmildmintmissmonknailnavyneednewsnextnoonnotenumbobeyoboeomitonyxopenovalowlspaidpartpeckplaypluspoempoolposepuffpumapurrquadquizraceramprealredorichroadrockroofrubyruinrunsrustsafesagascarsetssilkskewslotsoapsolosongstubsurfswantacotasktaxitenttiedtimetinytoiltombtoystriptunatwinuglyundouniturgeuservastveryvetovialvibeviewvisavoidvowswallwandwarmwaspwavewaxywebswhatwhenwhizwolfworkyankyawnyellyogayurtzapszerozestzinczonezoom';\nlet bytewordsLookUpTable = [];\nconst BYTEWORDS_NUM = 256;\nconst BYTEWORD_LENGTH = 4;\nconst MINIMAL_BYTEWORD_LENGTH = 2;\nvar STYLES;\n(function (STYLES) {\n    STYLES[\"STANDARD\"] = \"standard\";\n    STYLES[\"URI\"] = \"uri\";\n    STYLES[\"MINIMAL\"] = \"minimal\";\n})(STYLES || (STYLES = {}));\nconst getWord = (index) => {\n    return bytewords.slice(index * BYTEWORD_LENGTH, (index * BYTEWORD_LENGTH) + BYTEWORD_LENGTH);\n};\nconst getMinimalWord = (index) => {\n    const byteword = getWord(index);\n    return `${byteword[0]}${byteword[BYTEWORD_LENGTH - 1]}`;\n};\nconst addCRC = (string) => {\n    const crc = utils_1.getCRCHex(Buffer.from(string, 'hex'));\n    return `${string}${crc}`;\n};\nconst encodeWithSeparator = (word, separator) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => ([...result, getWord(w)]), []);\n    return result.join(separator);\n};\nconst encodeMinimal = (word) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => result + getMinimalWord(w), '');\n    return result;\n};\nconst decodeWord = (word, wordLength) => {\n    assert_1.default(word.length === wordLength, 'Invalid Bytewords: word.length does not match wordLength provided');\n    const dim = 26;\n    // Since the first and last letters of each Byteword are unique,\n    // we can use them as indexes into a two-dimensional lookup table.\n    // This table is generated lazily.\n    if (bytewordsLookUpTable.length === 0) {\n        const array_len = dim * dim;\n        bytewordsLookUpTable = [...new Array(array_len)].map(() => -1);\n        for (let i = 0; i < BYTEWORDS_NUM; i++) {\n            const byteword = getWord(i);\n            let x = byteword[0].charCodeAt(0) - 'a'.charCodeAt(0);\n            let y = byteword[3].charCodeAt(0) - 'a'.charCodeAt(0);\n            let offset = y * dim + x;\n            bytewordsLookUpTable[offset] = i;\n        }\n    }\n    // If the coordinates generated by the first and last letters are out of bounds,\n    // or the lookup table contains -1 at the coordinates, then the word is not valid.\n    let x = (word[0]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    let y = (word[wordLength == 4 ? 3 : 1]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    assert_1.default(0 <= x && x < dim && 0 <= y && y < dim, 'Invalid Bytewords: invalid word');\n    let offset = y * dim + x;\n    let value = bytewordsLookUpTable[offset];\n    assert_1.default(value !== -1, 'Invalid Bytewords: value not in lookup table');\n    // If we're decoding a full four-letter word, verify that the two middle letters are correct.\n    if (wordLength == BYTEWORD_LENGTH) {\n        const byteword = getWord(value);\n        let c1 = word[1].toLowerCase();\n        let c2 = word[2].toLowerCase();\n        assert_1.default(c1 === byteword[1] && c2 === byteword[2], 'Invalid Bytewords: invalid middle letters of word');\n    }\n    // Successful decode.\n    return Buffer.from([value]).toString('hex');\n};\nconst _decode = (string, separator, wordLength) => {\n    const words = wordLength == BYTEWORD_LENGTH ? string.split(separator) : utils_1.partition(string, 2);\n    const decodedString = words.map((word) => decodeWord(word, wordLength)).join('');\n    assert_1.default(decodedString.length >= 5, 'Invalid Bytewords: invalid decoded string length');\n    const [body, bodyChecksum] = utils_1.split(Buffer.from(decodedString, 'hex'), 4);\n    const checksum = utils_1.getCRCHex(body); // convert to hex\n    assert_1.default(checksum === bodyChecksum.toString('hex'), 'Invalid Checksum');\n    return body.toString('hex');\n};\nconst decode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return _decode(string, ' ', BYTEWORD_LENGTH);\n        case STYLES.URI:\n            return _decode(string, '-', BYTEWORD_LENGTH);\n        case STYLES.MINIMAL:\n            return _decode(string, '', MINIMAL_BYTEWORD_LENGTH);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nconst encode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return encodeWithSeparator(string, ' ');\n        case STYLES.URI:\n            return encodeWithSeparator(string, '-');\n        case STYLES.MINIMAL:\n            return encodeMinimal(string);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nexports[\"default\"] = {\n    decode,\n    encode,\n    STYLES\n};\n//# sourceMappingURL=bytewords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/bytewords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/cbor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/cbor.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cborDecode = exports.cborEncode = void 0;\nconst cbor = __webpack_require__(/*! cbor-sync */ \"(ssr)/./node_modules/.pnpm/cbor-sync@1.0.4/node_modules/cbor-sync/main.js\");\nconst cborEncode = (data) => {\n    return cbor.encode(data);\n};\nexports.cborEncode = cborEncode;\nconst cborDecode = (data) => {\n    return cbor.decode(Buffer.isBuffer(data) ? data : Buffer.from(data, 'hex'));\n};\nexports.cborDecode = cborDecode;\n//# sourceMappingURL=cbor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvY2Jvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLDRGQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvY2Jvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2JvckRlY29kZSA9IGV4cG9ydHMuY2JvckVuY29kZSA9IHZvaWQgMDtcbmNvbnN0IGNib3IgPSByZXF1aXJlKCdjYm9yLXN5bmMnKTtcbmNvbnN0IGNib3JFbmNvZGUgPSAoZGF0YSkgPT4ge1xuICAgIHJldHVybiBjYm9yLmVuY29kZShkYXRhKTtcbn07XG5leHBvcnRzLmNib3JFbmNvZGUgPSBjYm9yRW5jb2RlO1xuY29uc3QgY2JvckRlY29kZSA9IChkYXRhKSA9PiB7XG4gICAgcmV0dXJuIGNib3IuZGVjb2RlKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSA/IGRhdGEgOiBCdWZmZXIuZnJvbShkYXRhLCAnaGV4JykpO1xufTtcbmV4cG9ydHMuY2JvckRlY29kZSA9IGNib3JEZWNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/cbor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidChecksumError = exports.InvalidSequenceComponentError = exports.InvalidTypeError = exports.InvalidPathLengthError = exports.InvalidSchemeError = void 0;\nclass InvalidSchemeError extends Error {\n    constructor() {\n        super('Invalid Scheme');\n        this.name = 'InvalidSchemeError';\n    }\n}\nexports.InvalidSchemeError = InvalidSchemeError;\nclass InvalidPathLengthError extends Error {\n    constructor() {\n        super('Invalid Path');\n        this.name = 'InvalidPathLengthError';\n    }\n}\nexports.InvalidPathLengthError = InvalidPathLengthError;\nclass InvalidTypeError extends Error {\n    constructor() {\n        super('Invalid Type');\n        this.name = 'InvalidTypeError';\n    }\n}\nexports.InvalidTypeError = InvalidTypeError;\nclass InvalidSequenceComponentError extends Error {\n    constructor() {\n        super('Invalid Sequence Component');\n        this.name = 'InvalidSequenceComponentError';\n    }\n}\nexports.InvalidSequenceComponentError = InvalidSequenceComponentError;\nclass InvalidChecksumError extends Error {\n    constructor() {\n        super('Invalid Checksum');\n        this.name = 'InvalidChecksumError';\n    }\n}\nexports.InvalidChecksumError = InvalidChecksumError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHFDQUFxQyxHQUFHLHdCQUF3QixHQUFHLDhCQUE4QixHQUFHLDBCQUEwQjtBQUM3SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0BuZ3JhdmVpbytiYy11ckAxLjEuMTMvbm9kZV9tb2R1bGVzL0BuZ3JhdmVpby9iYy11ci9kaXN0L2Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW52YWxpZENoZWNrc3VtRXJyb3IgPSBleHBvcnRzLkludmFsaWRTZXF1ZW5jZUNvbXBvbmVudEVycm9yID0gZXhwb3J0cy5JbnZhbGlkVHlwZUVycm9yID0gZXhwb3J0cy5JbnZhbGlkUGF0aExlbmd0aEVycm9yID0gZXhwb3J0cy5JbnZhbGlkU2NoZW1lRXJyb3IgPSB2b2lkIDA7XG5jbGFzcyBJbnZhbGlkU2NoZW1lRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdJbnZhbGlkIFNjaGVtZScpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFNjaGVtZUVycm9yJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRTY2hlbWVFcnJvciA9IEludmFsaWRTY2hlbWVFcnJvcjtcbmNsYXNzIEludmFsaWRQYXRoTGVuZ3RoRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdJbnZhbGlkIFBhdGgnKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRQYXRoTGVuZ3RoRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZFBhdGhMZW5ndGhFcnJvciA9IEludmFsaWRQYXRoTGVuZ3RoRXJyb3I7XG5jbGFzcyBJbnZhbGlkVHlwZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignSW52YWxpZCBUeXBlJyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkVHlwZUVycm9yJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRUeXBlRXJyb3IgPSBJbnZhbGlkVHlwZUVycm9yO1xuY2xhc3MgSW52YWxpZFNlcXVlbmNlQ29tcG9uZW50RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdJbnZhbGlkIFNlcXVlbmNlIENvbXBvbmVudCcpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFNlcXVlbmNlQ29tcG9uZW50RXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZFNlcXVlbmNlQ29tcG9uZW50RXJyb3IgPSBJbnZhbGlkU2VxdWVuY2VDb21wb25lbnRFcnJvcjtcbmNsYXNzIEludmFsaWRDaGVja3N1bUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignSW52YWxpZCBDaGVja3N1bScpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZENoZWNrc3VtRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydHMuSW52YWxpZENoZWNrc3VtRXJyb3IgPSBJbnZhbGlkQ2hlY2tzdW1FcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FountainDecoderPart = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst fountainUtils_1 = __webpack_require__(/*! ./fountainUtils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js\");\nclass FountainDecoderPart {\n    constructor(_indexes, _fragment) {\n        this._indexes = _indexes;\n        this._fragment = _fragment;\n    }\n    get indexes() { return this._indexes; }\n    get fragment() { return this._fragment; }\n    static fromEncoderPart(encoderPart) {\n        const indexes = fountainUtils_1.chooseFragments(encoderPart.seqNum, encoderPart.seqLength, encoderPart.checksum);\n        const fragment = encoderPart.fragment;\n        return new FountainDecoderPart(indexes, fragment);\n    }\n    isSimple() {\n        return this.indexes.length === 1;\n    }\n}\nexports.FountainDecoderPart = FountainDecoderPart;\nclass FountainDecoder {\n    constructor() {\n        this.result = undefined;\n        this.expectedMessageLength = 0;\n        this.expectedChecksum = 0;\n        this.expectedFragmentLength = 0;\n        this.processedPartsCount = 0;\n        this.expectedPartIndexes = [];\n        this.lastPartIndexes = [];\n        this.queuedParts = [];\n        this.receivedPartIndexes = [];\n        this.mixedParts = [];\n        this.simpleParts = [];\n    }\n    validatePart(part) {\n        // If this is the first part we've seen\n        if (this.expectedPartIndexes.length === 0) {\n            // Record the things that all the other parts we see will have to match to be valid.\n            [...new Array(part.seqLength)]\n                .forEach((_, index) => this.expectedPartIndexes.push(index));\n            this.expectedMessageLength = part.messageLength;\n            this.expectedChecksum = part.checksum;\n            this.expectedFragmentLength = part.fragment.length;\n        }\n        else {\n            // If this part's values don't match the first part's values, throw away the part\n            if (this.expectedPartIndexes.length !== part.seqLength) {\n                return false;\n            }\n            if (this.expectedMessageLength !== part.messageLength) {\n                return false;\n            }\n            if (this.expectedChecksum !== part.checksum) {\n                return false;\n            }\n            if (this.expectedFragmentLength !== part.fragment.length) {\n                return false;\n            }\n        }\n        // This part should be processed\n        return true;\n    }\n    reducePartByPart(a, b) {\n        // If the fragments mixed into `b` are a strict (proper) subset of those in `a`...\n        if (utils_1.arrayContains(a.indexes, b.indexes)) {\n            const newIndexes = utils_1.setDifference(a.indexes, b.indexes);\n            const newFragment = utils_1.bufferXOR(a.fragment, b.fragment);\n            return new FountainDecoderPart(newIndexes, newFragment);\n        }\n        else {\n            // `a` is not reducable by `b`, so return a\n            return a;\n        }\n    }\n    reduceMixedBy(part) {\n        const newMixed = [];\n        this.mixedParts\n            .map(({ value: mixedPart }) => this.reducePartByPart(mixedPart, part))\n            .forEach(reducedPart => {\n            if (reducedPart.isSimple()) {\n                this.queuedParts.push(reducedPart);\n            }\n            else {\n                newMixed.push({ key: reducedPart.indexes, value: reducedPart });\n            }\n        });\n        this.mixedParts = newMixed;\n    }\n    processSimplePart(part) {\n        // Don't process duplicate parts\n        const fragmentIndex = part.indexes[0];\n        if (this.receivedPartIndexes.includes(fragmentIndex)) {\n            return;\n        }\n        this.simpleParts.push({ key: part.indexes, value: part });\n        this.receivedPartIndexes.push(fragmentIndex);\n        // If we've received all the parts\n        if (utils_1.arraysEqual(this.receivedPartIndexes, this.expectedPartIndexes)) {\n            // Reassemble the message from its fragments\n            const sortedParts = this.simpleParts\n                .map(({ value }) => value)\n                .sort((a, b) => (a.indexes[0] - b.indexes[0]));\n            const message = FountainDecoder.joinFragments(sortedParts.map(part => part.fragment), this.expectedMessageLength);\n            const checksum = utils_1.getCRC(message);\n            if (checksum === this.expectedChecksum) {\n                this.result = message;\n            }\n            else {\n                this.error = new errors_1.InvalidChecksumError();\n            }\n        }\n        else {\n            this.reduceMixedBy(part);\n        }\n    }\n    processMixedPart(part) {\n        // Don't process duplicate parts\n        if (this.mixedParts.some(({ key: indexes }) => utils_1.arraysEqual(indexes, part.indexes))) {\n            return;\n        }\n        // Reduce this part by all the others\n        let p2 = this.simpleParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), part);\n        p2 = this.mixedParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), p2);\n        // If the part is now simple\n        if (p2.isSimple()) {\n            // Add it to the queue\n            this.queuedParts.push(p2);\n        }\n        else {\n            this.reduceMixedBy(p2);\n            this.mixedParts.push({ key: p2.indexes, value: p2 });\n        }\n    }\n    processQueuedItem() {\n        if (this.queuedParts.length === 0) {\n            return;\n        }\n        const part = this.queuedParts.shift();\n        if (part.isSimple()) {\n            this.processSimplePart(part);\n        }\n        else {\n            this.processMixedPart(part);\n        }\n    }\n    receivePart(encoderPart) {\n        if (this.isComplete()) {\n            return false;\n        }\n        if (!this.validatePart(encoderPart)) {\n            return false;\n        }\n        const decoderPart = FountainDecoderPart.fromEncoderPart(encoderPart);\n        this.lastPartIndexes = decoderPart.indexes;\n        this.queuedParts.push(decoderPart);\n        while (!this.isComplete() && this.queuedParts.length > 0) {\n            this.processQueuedItem();\n        }\n        ;\n        this.processedPartsCount += 1;\n        return true;\n    }\n    isComplete() {\n        return Boolean(this.result !== undefined && this.result.length > 0);\n    }\n    isSuccess() {\n        return Boolean(this.error === undefined && this.isComplete());\n    }\n    resultMessage() {\n        return this.isSuccess() ? this.result : Buffer.from([]);\n    }\n    isFailure() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.expectedPartIndexes.length;\n    }\n    getExpectedPartIndexes() {\n        return [...this.expectedPartIndexes];\n    }\n    getReceivedPartIndexes() {\n        return [...this.receivedPartIndexes];\n    }\n    getLastPartIndexes() {\n        return [...this.lastPartIndexes];\n    }\n    estimatedPercentComplete() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        // We multiply the expectedPartCount by `1.75` as a way to compensate for the facet\n        // that `this.processedPartsCount` also tracks the duplicate parts that have been\n        // processeed.\n        return Math.min(0.99, this.processedPartsCount / (expectedPartCount * 1.75));\n    }\n    getProgress() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        return this.receivedPartIndexes.length / expectedPartCount;\n    }\n}\nexports[\"default\"] = FountainDecoder;\nFountainDecoder.joinFragments = (fragments, messageLength) => {\n    return Buffer.concat(fragments).slice(0, messageLength);\n};\n//# sourceMappingURL=fountainDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZm91bnRhaW5EZWNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBUztBQUNqQyx3QkFBd0IsbUJBQU8sQ0FBQyw2SEFBaUI7QUFDakQsaUJBQWlCLG1CQUFPLENBQUMsK0dBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw4Q0FBOEM7QUFDOUU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnQ0FBZ0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGNBQWM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFVBQVU7QUFDM0QsNENBQTRDLFVBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsNEJBQTRCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC9mb3VudGFpbkRlY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZvdW50YWluRGVjb2RlclBhcnQgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCBmb3VudGFpblV0aWxzXzEgPSByZXF1aXJlKFwiLi9mb3VudGFpblV0aWxzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jbGFzcyBGb3VudGFpbkRlY29kZXJQYXJ0IHtcbiAgICBjb25zdHJ1Y3RvcihfaW5kZXhlcywgX2ZyYWdtZW50KSB7XG4gICAgICAgIHRoaXMuX2luZGV4ZXMgPSBfaW5kZXhlcztcbiAgICAgICAgdGhpcy5fZnJhZ21lbnQgPSBfZnJhZ21lbnQ7XG4gICAgfVxuICAgIGdldCBpbmRleGVzKCkgeyByZXR1cm4gdGhpcy5faW5kZXhlczsgfVxuICAgIGdldCBmcmFnbWVudCgpIHsgcmV0dXJuIHRoaXMuX2ZyYWdtZW50OyB9XG4gICAgc3RhdGljIGZyb21FbmNvZGVyUGFydChlbmNvZGVyUGFydCkge1xuICAgICAgICBjb25zdCBpbmRleGVzID0gZm91bnRhaW5VdGlsc18xLmNob29zZUZyYWdtZW50cyhlbmNvZGVyUGFydC5zZXFOdW0sIGVuY29kZXJQYXJ0LnNlcUxlbmd0aCwgZW5jb2RlclBhcnQuY2hlY2tzdW0pO1xuICAgICAgICBjb25zdCBmcmFnbWVudCA9IGVuY29kZXJQYXJ0LmZyYWdtZW50O1xuICAgICAgICByZXR1cm4gbmV3IEZvdW50YWluRGVjb2RlclBhcnQoaW5kZXhlcywgZnJhZ21lbnQpO1xuICAgIH1cbiAgICBpc1NpbXBsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5kZXhlcy5sZW5ndGggPT09IDE7XG4gICAgfVxufVxuZXhwb3J0cy5Gb3VudGFpbkRlY29kZXJQYXJ0ID0gRm91bnRhaW5EZWNvZGVyUGFydDtcbmNsYXNzIEZvdW50YWluRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVzdWx0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmV4cGVjdGVkTWVzc2FnZUxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWRDaGVja3N1bSA9IDA7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWRGcmFnbWVudExlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMucHJvY2Vzc2VkUGFydHNDb3VudCA9IDA7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWRQYXJ0SW5kZXhlcyA9IFtdO1xuICAgICAgICB0aGlzLmxhc3RQYXJ0SW5kZXhlcyA9IFtdO1xuICAgICAgICB0aGlzLnF1ZXVlZFBhcnRzID0gW107XG4gICAgICAgIHRoaXMucmVjZWl2ZWRQYXJ0SW5kZXhlcyA9IFtdO1xuICAgICAgICB0aGlzLm1peGVkUGFydHMgPSBbXTtcbiAgICAgICAgdGhpcy5zaW1wbGVQYXJ0cyA9IFtdO1xuICAgIH1cbiAgICB2YWxpZGF0ZVBhcnQocGFydCkge1xuICAgICAgICAvLyBJZiB0aGlzIGlzIHRoZSBmaXJzdCBwYXJ0IHdlJ3ZlIHNlZW5cbiAgICAgICAgaWYgKHRoaXMuZXhwZWN0ZWRQYXJ0SW5kZXhlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIC8vIFJlY29yZCB0aGUgdGhpbmdzIHRoYXQgYWxsIHRoZSBvdGhlciBwYXJ0cyB3ZSBzZWUgd2lsbCBoYXZlIHRvIG1hdGNoIHRvIGJlIHZhbGlkLlxuICAgICAgICAgICAgWy4uLm5ldyBBcnJheShwYXJ0LnNlcUxlbmd0aCldXG4gICAgICAgICAgICAgICAgLmZvckVhY2goKF8sIGluZGV4KSA9PiB0aGlzLmV4cGVjdGVkUGFydEluZGV4ZXMucHVzaChpbmRleCkpO1xuICAgICAgICAgICAgdGhpcy5leHBlY3RlZE1lc3NhZ2VMZW5ndGggPSBwYXJ0Lm1lc3NhZ2VMZW5ndGg7XG4gICAgICAgICAgICB0aGlzLmV4cGVjdGVkQ2hlY2tzdW0gPSBwYXJ0LmNoZWNrc3VtO1xuICAgICAgICAgICAgdGhpcy5leHBlY3RlZEZyYWdtZW50TGVuZ3RoID0gcGFydC5mcmFnbWVudC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBJZiB0aGlzIHBhcnQncyB2YWx1ZXMgZG9uJ3QgbWF0Y2ggdGhlIGZpcnN0IHBhcnQncyB2YWx1ZXMsIHRocm93IGF3YXkgdGhlIHBhcnRcbiAgICAgICAgICAgIGlmICh0aGlzLmV4cGVjdGVkUGFydEluZGV4ZXMubGVuZ3RoICE9PSBwYXJ0LnNlcUxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmV4cGVjdGVkTWVzc2FnZUxlbmd0aCAhPT0gcGFydC5tZXNzYWdlTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuZXhwZWN0ZWRDaGVja3N1bSAhPT0gcGFydC5jaGVja3N1bSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmV4cGVjdGVkRnJhZ21lbnRMZW5ndGggIT09IHBhcnQuZnJhZ21lbnQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFRoaXMgcGFydCBzaG91bGQgYmUgcHJvY2Vzc2VkXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZWR1Y2VQYXJ0QnlQYXJ0KGEsIGIpIHtcbiAgICAgICAgLy8gSWYgdGhlIGZyYWdtZW50cyBtaXhlZCBpbnRvIGBiYCBhcmUgYSBzdHJpY3QgKHByb3Blcikgc3Vic2V0IG9mIHRob3NlIGluIGBhYC4uLlxuICAgICAgICBpZiAodXRpbHNfMS5hcnJheUNvbnRhaW5zKGEuaW5kZXhlcywgYi5pbmRleGVzKSkge1xuICAgICAgICAgICAgY29uc3QgbmV3SW5kZXhlcyA9IHV0aWxzXzEuc2V0RGlmZmVyZW5jZShhLmluZGV4ZXMsIGIuaW5kZXhlcyk7XG4gICAgICAgICAgICBjb25zdCBuZXdGcmFnbWVudCA9IHV0aWxzXzEuYnVmZmVyWE9SKGEuZnJhZ21lbnQsIGIuZnJhZ21lbnQpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBGb3VudGFpbkRlY29kZXJQYXJ0KG5ld0luZGV4ZXMsIG5ld0ZyYWdtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGBhYCBpcyBub3QgcmVkdWNhYmxlIGJ5IGBiYCwgc28gcmV0dXJuIGFcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlZHVjZU1peGVkQnkocGFydCkge1xuICAgICAgICBjb25zdCBuZXdNaXhlZCA9IFtdO1xuICAgICAgICB0aGlzLm1peGVkUGFydHNcbiAgICAgICAgICAgIC5tYXAoKHsgdmFsdWU6IG1peGVkUGFydCB9KSA9PiB0aGlzLnJlZHVjZVBhcnRCeVBhcnQobWl4ZWRQYXJ0LCBwYXJ0KSlcbiAgICAgICAgICAgIC5mb3JFYWNoKHJlZHVjZWRQYXJ0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZWR1Y2VkUGFydC5pc1NpbXBsZSgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5xdWV1ZWRQYXJ0cy5wdXNoKHJlZHVjZWRQYXJ0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld01peGVkLnB1c2goeyBrZXk6IHJlZHVjZWRQYXJ0LmluZGV4ZXMsIHZhbHVlOiByZWR1Y2VkUGFydCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubWl4ZWRQYXJ0cyA9IG5ld01peGVkO1xuICAgIH1cbiAgICBwcm9jZXNzU2ltcGxlUGFydChwYXJ0KSB7XG4gICAgICAgIC8vIERvbid0IHByb2Nlc3MgZHVwbGljYXRlIHBhcnRzXG4gICAgICAgIGNvbnN0IGZyYWdtZW50SW5kZXggPSBwYXJ0LmluZGV4ZXNbMF07XG4gICAgICAgIGlmICh0aGlzLnJlY2VpdmVkUGFydEluZGV4ZXMuaW5jbHVkZXMoZnJhZ21lbnRJbmRleCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNpbXBsZVBhcnRzLnB1c2goeyBrZXk6IHBhcnQuaW5kZXhlcywgdmFsdWU6IHBhcnQgfSk7XG4gICAgICAgIHRoaXMucmVjZWl2ZWRQYXJ0SW5kZXhlcy5wdXNoKGZyYWdtZW50SW5kZXgpO1xuICAgICAgICAvLyBJZiB3ZSd2ZSByZWNlaXZlZCBhbGwgdGhlIHBhcnRzXG4gICAgICAgIGlmICh1dGlsc18xLmFycmF5c0VxdWFsKHRoaXMucmVjZWl2ZWRQYXJ0SW5kZXhlcywgdGhpcy5leHBlY3RlZFBhcnRJbmRleGVzKSkge1xuICAgICAgICAgICAgLy8gUmVhc3NlbWJsZSB0aGUgbWVzc2FnZSBmcm9tIGl0cyBmcmFnbWVudHNcbiAgICAgICAgICAgIGNvbnN0IHNvcnRlZFBhcnRzID0gdGhpcy5zaW1wbGVQYXJ0c1xuICAgICAgICAgICAgICAgIC5tYXAoKHsgdmFsdWUgfSkgPT4gdmFsdWUpXG4gICAgICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IChhLmluZGV4ZXNbMF0gLSBiLmluZGV4ZXNbMF0pKTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBGb3VudGFpbkRlY29kZXIuam9pbkZyYWdtZW50cyhzb3J0ZWRQYXJ0cy5tYXAocGFydCA9PiBwYXJ0LmZyYWdtZW50KSwgdGhpcy5leHBlY3RlZE1lc3NhZ2VMZW5ndGgpO1xuICAgICAgICAgICAgY29uc3QgY2hlY2tzdW0gPSB1dGlsc18xLmdldENSQyhtZXNzYWdlKTtcbiAgICAgICAgICAgIGlmIChjaGVja3N1bSA9PT0gdGhpcy5leHBlY3RlZENoZWNrc3VtKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSBtZXNzYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lcnJvciA9IG5ldyBlcnJvcnNfMS5JbnZhbGlkQ2hlY2tzdW1FcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZWR1Y2VNaXhlZEJ5KHBhcnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb2Nlc3NNaXhlZFBhcnQocGFydCkge1xuICAgICAgICAvLyBEb24ndCBwcm9jZXNzIGR1cGxpY2F0ZSBwYXJ0c1xuICAgICAgICBpZiAodGhpcy5taXhlZFBhcnRzLnNvbWUoKHsga2V5OiBpbmRleGVzIH0pID0+IHV0aWxzXzEuYXJyYXlzRXF1YWwoaW5kZXhlcywgcGFydC5pbmRleGVzKSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZWR1Y2UgdGhpcyBwYXJ0IGJ5IGFsbCB0aGUgb3RoZXJzXG4gICAgICAgIGxldCBwMiA9IHRoaXMuc2ltcGxlUGFydHMucmVkdWNlKChhY2MsIHsgdmFsdWU6IHAgfSkgPT4gdGhpcy5yZWR1Y2VQYXJ0QnlQYXJ0KGFjYywgcCksIHBhcnQpO1xuICAgICAgICBwMiA9IHRoaXMubWl4ZWRQYXJ0cy5yZWR1Y2UoKGFjYywgeyB2YWx1ZTogcCB9KSA9PiB0aGlzLnJlZHVjZVBhcnRCeVBhcnQoYWNjLCBwKSwgcDIpO1xuICAgICAgICAvLyBJZiB0aGUgcGFydCBpcyBub3cgc2ltcGxlXG4gICAgICAgIGlmIChwMi5pc1NpbXBsZSgpKSB7XG4gICAgICAgICAgICAvLyBBZGQgaXQgdG8gdGhlIHF1ZXVlXG4gICAgICAgICAgICB0aGlzLnF1ZXVlZFBhcnRzLnB1c2gocDIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZWR1Y2VNaXhlZEJ5KHAyKTtcbiAgICAgICAgICAgIHRoaXMubWl4ZWRQYXJ0cy5wdXNoKHsga2V5OiBwMi5pbmRleGVzLCB2YWx1ZTogcDIgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJvY2Vzc1F1ZXVlZEl0ZW0oKSB7XG4gICAgICAgIGlmICh0aGlzLnF1ZXVlZFBhcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnQgPSB0aGlzLnF1ZXVlZFBhcnRzLnNoaWZ0KCk7XG4gICAgICAgIGlmIChwYXJ0LmlzU2ltcGxlKCkpIHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc1NpbXBsZVBhcnQocGFydCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NNaXhlZFBhcnQocGFydCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVjZWl2ZVBhcnQoZW5jb2RlclBhcnQpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDb21wbGV0ZSgpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlUGFydChlbmNvZGVyUGFydCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWNvZGVyUGFydCA9IEZvdW50YWluRGVjb2RlclBhcnQuZnJvbUVuY29kZXJQYXJ0KGVuY29kZXJQYXJ0KTtcbiAgICAgICAgdGhpcy5sYXN0UGFydEluZGV4ZXMgPSBkZWNvZGVyUGFydC5pbmRleGVzO1xuICAgICAgICB0aGlzLnF1ZXVlZFBhcnRzLnB1c2goZGVjb2RlclBhcnQpO1xuICAgICAgICB3aGlsZSAoIXRoaXMuaXNDb21wbGV0ZSgpICYmIHRoaXMucXVldWVkUGFydHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzUXVldWVkSXRlbSgpO1xuICAgICAgICB9XG4gICAgICAgIDtcbiAgICAgICAgdGhpcy5wcm9jZXNzZWRQYXJ0c0NvdW50ICs9IDE7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpc0NvbXBsZXRlKCkge1xuICAgICAgICByZXR1cm4gQm9vbGVhbih0aGlzLnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIHRoaXMucmVzdWx0Lmxlbmd0aCA+IDApO1xuICAgIH1cbiAgICBpc1N1Y2Nlc3MoKSB7XG4gICAgICAgIHJldHVybiBCb29sZWFuKHRoaXMuZXJyb3IgPT09IHVuZGVmaW5lZCAmJiB0aGlzLmlzQ29tcGxldGUoKSk7XG4gICAgfVxuICAgIHJlc3VsdE1lc3NhZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzU3VjY2VzcygpID8gdGhpcy5yZXN1bHQgOiBCdWZmZXIuZnJvbShbXSk7XG4gICAgfVxuICAgIGlzRmFpbHVyZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3IgIT09IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmVzdWx0RXJyb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVycm9yID8gdGhpcy5lcnJvci5tZXNzYWdlIDogJyc7XG4gICAgfVxuICAgIGV4cGVjdGVkUGFydENvdW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5leHBlY3RlZFBhcnRJbmRleGVzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0RXhwZWN0ZWRQYXJ0SW5kZXhlcygpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLmV4cGVjdGVkUGFydEluZGV4ZXNdO1xuICAgIH1cbiAgICBnZXRSZWNlaXZlZFBhcnRJbmRleGVzKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMucmVjZWl2ZWRQYXJ0SW5kZXhlc107XG4gICAgfVxuICAgIGdldExhc3RQYXJ0SW5kZXhlcygpIHtcbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLmxhc3RQYXJ0SW5kZXhlc107XG4gICAgfVxuICAgIGVzdGltYXRlZFBlcmNlbnRDb21wbGV0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDb21wbGV0ZSgpKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBleHBlY3RlZFBhcnRDb3VudCA9IHRoaXMuZXhwZWN0ZWRQYXJ0Q291bnQoKTtcbiAgICAgICAgaWYgKGV4cGVjdGVkUGFydENvdW50ID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgICAvLyBXZSBtdWx0aXBseSB0aGUgZXhwZWN0ZWRQYXJ0Q291bnQgYnkgYDEuNzVgIGFzIGEgd2F5IHRvIGNvbXBlbnNhdGUgZm9yIHRoZSBmYWNldFxuICAgICAgICAvLyB0aGF0IGB0aGlzLnByb2Nlc3NlZFBhcnRzQ291bnRgIGFsc28gdHJhY2tzIHRoZSBkdXBsaWNhdGUgcGFydHMgdGhhdCBoYXZlIGJlZW5cbiAgICAgICAgLy8gcHJvY2Vzc2VlZC5cbiAgICAgICAgcmV0dXJuIE1hdGgubWluKDAuOTksIHRoaXMucHJvY2Vzc2VkUGFydHNDb3VudCAvIChleHBlY3RlZFBhcnRDb3VudCAqIDEuNzUpKTtcbiAgICB9XG4gICAgZ2V0UHJvZ3Jlc3MoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzQ29tcGxldGUoKSkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZXhwZWN0ZWRQYXJ0Q291bnQgPSB0aGlzLmV4cGVjdGVkUGFydENvdW50KCk7XG4gICAgICAgIGlmIChleHBlY3RlZFBhcnRDb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucmVjZWl2ZWRQYXJ0SW5kZXhlcy5sZW5ndGggLyBleHBlY3RlZFBhcnRDb3VudDtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBGb3VudGFpbkRlY29kZXI7XG5Gb3VudGFpbkRlY29kZXIuam9pbkZyYWdtZW50cyA9IChmcmFnbWVudHMsIG1lc3NhZ2VMZW5ndGgpID0+IHtcbiAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChmcmFnbWVudHMpLnNsaWNlKDAsIG1lc3NhZ2VMZW5ndGgpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvdW50YWluRGVjb2Rlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FountainEncoderPart = void 0;\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst fountainUtils_1 = __webpack_require__(/*! ./fountainUtils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\");\nconst cbor_1 = __webpack_require__(/*! ./cbor */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/cbor.js\");\nclass FountainEncoderPart {\n    constructor(_seqNum, _seqLength, _messageLength, _checksum, _fragment) {\n        this._seqNum = _seqNum;\n        this._seqLength = _seqLength;\n        this._messageLength = _messageLength;\n        this._checksum = _checksum;\n        this._fragment = _fragment;\n    }\n    get messageLength() { return this._messageLength; }\n    get fragment() { return this._fragment; }\n    get seqNum() { return this._seqNum; }\n    get seqLength() { return this._seqLength; }\n    get checksum() { return this._checksum; }\n    cbor() {\n        const result = cbor_1.cborEncode([\n            this._seqNum,\n            this._seqLength,\n            this._messageLength,\n            this._checksum,\n            this._fragment\n        ]);\n        return Buffer.from(result);\n    }\n    description() {\n        return `seqNum:${this._seqNum}, seqLen:${this._seqLength}, messageLen:${this._messageLength}, checksum:${this._checksum}, data:${this._fragment.toString('hex')}`;\n    }\n    static fromCBOR(cborPayload) {\n        const [seqNum, seqLength, messageLength, checksum, fragment,] = cbor_1.cborDecode(cborPayload);\n        assert_1.default(typeof seqNum === 'number');\n        assert_1.default(typeof seqLength === 'number');\n        assert_1.default(typeof messageLength === 'number');\n        assert_1.default(typeof checksum === 'number');\n        assert_1.default(Buffer.isBuffer(fragment) && fragment.length > 0);\n        return new FountainEncoderPart(seqNum, seqLength, messageLength, checksum, Buffer.from(fragment));\n    }\n}\nexports.FountainEncoderPart = FountainEncoderPart;\nclass FountainEncoder {\n    constructor(message, maxFragmentLength = 100, firstSeqNum = 0, minFragmentLength = 10) {\n        const fragmentLength = FountainEncoder.findNominalFragmentLength(message.length, minFragmentLength, maxFragmentLength);\n        this._messageLength = message.length;\n        this._fragments = FountainEncoder.partitionMessage(message, fragmentLength);\n        this.fragmentLength = fragmentLength;\n        this.seqNum = utils_1.toUint32(firstSeqNum);\n        this.checksum = utils_1.getCRC(message);\n    }\n    get fragmentsLength() { return this._fragments.length; }\n    get fragments() { return this._fragments; }\n    get messageLength() { return this._messageLength; }\n    isComplete() {\n        return this.seqNum >= this._fragments.length;\n    }\n    isSinglePart() {\n        return this._fragments.length === 1;\n    }\n    seqLength() {\n        return this._fragments.length;\n    }\n    mix(indexes) {\n        return indexes.reduce((result, index) => utils_1.bufferXOR(this._fragments[index], result), Buffer.alloc(this.fragmentLength, 0));\n    }\n    nextPart() {\n        this.seqNum = utils_1.toUint32(this.seqNum + 1);\n        const indexes = fountainUtils_1.chooseFragments(this.seqNum, this._fragments.length, this.checksum);\n        const mixed = this.mix(indexes);\n        return new FountainEncoderPart(this.seqNum, this._fragments.length, this._messageLength, this.checksum, mixed);\n    }\n    static findNominalFragmentLength(messageLength, minFragmentLength, maxFragmentLength) {\n        assert_1.default(messageLength > 0);\n        assert_1.default(minFragmentLength > 0);\n        assert_1.default(maxFragmentLength >= minFragmentLength);\n        const maxFragmentCount = Math.ceil(messageLength / minFragmentLength);\n        let fragmentLength = 0;\n        for (let fragmentCount = 1; fragmentCount <= maxFragmentCount; fragmentCount++) {\n            fragmentLength = Math.ceil(messageLength / fragmentCount);\n            if (fragmentLength <= maxFragmentLength) {\n                break;\n            }\n        }\n        return fragmentLength;\n    }\n    static partitionMessage(message, fragmentLength) {\n        let remaining = Buffer.from(message);\n        let fragment;\n        let _fragments = [];\n        while (remaining.length > 0) {\n            [fragment, remaining] = utils_1.split(remaining, -fragmentLength);\n            fragment = Buffer\n                .alloc(fragmentLength, 0) // initialize with 0's to achieve the padding\n                .fill(fragment, 0, fragment.length);\n            _fragments.push(fragment);\n        }\n        return _fragments;\n    }\n}\nexports[\"default\"] = FountainEncoder;\n//# sourceMappingURL=fountainEncoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZm91bnRhaW5FbmNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLDZHQUFTO0FBQ2pDLHdCQUF3QixtQkFBTyxDQUFDLDZIQUFpQjtBQUNqRCxlQUFlLG1CQUFPLENBQUMsMkdBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLHNCQUFzQjtBQUN0QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixhQUFhLFdBQVcsZ0JBQWdCLGVBQWUsb0JBQW9CLGFBQWEsZUFBZSxTQUFTLCtCQUErQjtBQUN4SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QixzQkFBc0I7QUFDdEIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxtQ0FBbUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC9mb3VudGFpbkVuY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZvdW50YWluRW5jb2RlclBhcnQgPSB2b2lkIDA7XG5jb25zdCBhc3NlcnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGZvdW50YWluVXRpbHNfMSA9IHJlcXVpcmUoXCIuL2ZvdW50YWluVXRpbHNcIik7XG5jb25zdCBjYm9yXzEgPSByZXF1aXJlKFwiLi9jYm9yXCIpO1xuY2xhc3MgRm91bnRhaW5FbmNvZGVyUGFydCB7XG4gICAgY29uc3RydWN0b3IoX3NlcU51bSwgX3NlcUxlbmd0aCwgX21lc3NhZ2VMZW5ndGgsIF9jaGVja3N1bSwgX2ZyYWdtZW50KSB7XG4gICAgICAgIHRoaXMuX3NlcU51bSA9IF9zZXFOdW07XG4gICAgICAgIHRoaXMuX3NlcUxlbmd0aCA9IF9zZXFMZW5ndGg7XG4gICAgICAgIHRoaXMuX21lc3NhZ2VMZW5ndGggPSBfbWVzc2FnZUxlbmd0aDtcbiAgICAgICAgdGhpcy5fY2hlY2tzdW0gPSBfY2hlY2tzdW07XG4gICAgICAgIHRoaXMuX2ZyYWdtZW50ID0gX2ZyYWdtZW50O1xuICAgIH1cbiAgICBnZXQgbWVzc2FnZUxlbmd0aCgpIHsgcmV0dXJuIHRoaXMuX21lc3NhZ2VMZW5ndGg7IH1cbiAgICBnZXQgZnJhZ21lbnQoKSB7IHJldHVybiB0aGlzLl9mcmFnbWVudDsgfVxuICAgIGdldCBzZXFOdW0oKSB7IHJldHVybiB0aGlzLl9zZXFOdW07IH1cbiAgICBnZXQgc2VxTGVuZ3RoKCkgeyByZXR1cm4gdGhpcy5fc2VxTGVuZ3RoOyB9XG4gICAgZ2V0IGNoZWNrc3VtKCkgeyByZXR1cm4gdGhpcy5fY2hlY2tzdW07IH1cbiAgICBjYm9yKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBjYm9yXzEuY2JvckVuY29kZShbXG4gICAgICAgICAgICB0aGlzLl9zZXFOdW0sXG4gICAgICAgICAgICB0aGlzLl9zZXFMZW5ndGgsXG4gICAgICAgICAgICB0aGlzLl9tZXNzYWdlTGVuZ3RoLFxuICAgICAgICAgICAgdGhpcy5fY2hlY2tzdW0sXG4gICAgICAgICAgICB0aGlzLl9mcmFnbWVudFxuICAgICAgICBdKTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHJlc3VsdCk7XG4gICAgfVxuICAgIGRlc2NyaXB0aW9uKCkge1xuICAgICAgICByZXR1cm4gYHNlcU51bToke3RoaXMuX3NlcU51bX0sIHNlcUxlbjoke3RoaXMuX3NlcUxlbmd0aH0sIG1lc3NhZ2VMZW46JHt0aGlzLl9tZXNzYWdlTGVuZ3RofSwgY2hlY2tzdW06JHt0aGlzLl9jaGVja3N1bX0sIGRhdGE6JHt0aGlzLl9mcmFnbWVudC50b1N0cmluZygnaGV4Jyl9YDtcbiAgICB9XG4gICAgc3RhdGljIGZyb21DQk9SKGNib3JQYXlsb2FkKSB7XG4gICAgICAgIGNvbnN0IFtzZXFOdW0sIHNlcUxlbmd0aCwgbWVzc2FnZUxlbmd0aCwgY2hlY2tzdW0sIGZyYWdtZW50LF0gPSBjYm9yXzEuY2JvckRlY29kZShjYm9yUGF5bG9hZCk7XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQodHlwZW9mIHNlcU51bSA9PT0gJ251bWJlcicpO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KHR5cGVvZiBzZXFMZW5ndGggPT09ICdudW1iZXInKTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdCh0eXBlb2YgbWVzc2FnZUxlbmd0aCA9PT0gJ251bWJlcicpO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KHR5cGVvZiBjaGVja3N1bSA9PT0gJ251bWJlcicpO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KEJ1ZmZlci5pc0J1ZmZlcihmcmFnbWVudCkgJiYgZnJhZ21lbnQubGVuZ3RoID4gMCk7XG4gICAgICAgIHJldHVybiBuZXcgRm91bnRhaW5FbmNvZGVyUGFydChzZXFOdW0sIHNlcUxlbmd0aCwgbWVzc2FnZUxlbmd0aCwgY2hlY2tzdW0sIEJ1ZmZlci5mcm9tKGZyYWdtZW50KSk7XG4gICAgfVxufVxuZXhwb3J0cy5Gb3VudGFpbkVuY29kZXJQYXJ0ID0gRm91bnRhaW5FbmNvZGVyUGFydDtcbmNsYXNzIEZvdW50YWluRW5jb2RlciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgbWF4RnJhZ21lbnRMZW5ndGggPSAxMDAsIGZpcnN0U2VxTnVtID0gMCwgbWluRnJhZ21lbnRMZW5ndGggPSAxMCkge1xuICAgICAgICBjb25zdCBmcmFnbWVudExlbmd0aCA9IEZvdW50YWluRW5jb2Rlci5maW5kTm9taW5hbEZyYWdtZW50TGVuZ3RoKG1lc3NhZ2UubGVuZ3RoLCBtaW5GcmFnbWVudExlbmd0aCwgbWF4RnJhZ21lbnRMZW5ndGgpO1xuICAgICAgICB0aGlzLl9tZXNzYWdlTGVuZ3RoID0gbWVzc2FnZS5sZW5ndGg7XG4gICAgICAgIHRoaXMuX2ZyYWdtZW50cyA9IEZvdW50YWluRW5jb2Rlci5wYXJ0aXRpb25NZXNzYWdlKG1lc3NhZ2UsIGZyYWdtZW50TGVuZ3RoKTtcbiAgICAgICAgdGhpcy5mcmFnbWVudExlbmd0aCA9IGZyYWdtZW50TGVuZ3RoO1xuICAgICAgICB0aGlzLnNlcU51bSA9IHV0aWxzXzEudG9VaW50MzIoZmlyc3RTZXFOdW0pO1xuICAgICAgICB0aGlzLmNoZWNrc3VtID0gdXRpbHNfMS5nZXRDUkMobWVzc2FnZSk7XG4gICAgfVxuICAgIGdldCBmcmFnbWVudHNMZW5ndGgoKSB7IHJldHVybiB0aGlzLl9mcmFnbWVudHMubGVuZ3RoOyB9XG4gICAgZ2V0IGZyYWdtZW50cygpIHsgcmV0dXJuIHRoaXMuX2ZyYWdtZW50czsgfVxuICAgIGdldCBtZXNzYWdlTGVuZ3RoKCkgeyByZXR1cm4gdGhpcy5fbWVzc2FnZUxlbmd0aDsgfVxuICAgIGlzQ29tcGxldGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcU51bSA+PSB0aGlzLl9mcmFnbWVudHMubGVuZ3RoO1xuICAgIH1cbiAgICBpc1NpbmdsZVBhcnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mcmFnbWVudHMubGVuZ3RoID09PSAxO1xuICAgIH1cbiAgICBzZXFMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mcmFnbWVudHMubGVuZ3RoO1xuICAgIH1cbiAgICBtaXgoaW5kZXhlcykge1xuICAgICAgICByZXR1cm4gaW5kZXhlcy5yZWR1Y2UoKHJlc3VsdCwgaW5kZXgpID0+IHV0aWxzXzEuYnVmZmVyWE9SKHRoaXMuX2ZyYWdtZW50c1tpbmRleF0sIHJlc3VsdCksIEJ1ZmZlci5hbGxvYyh0aGlzLmZyYWdtZW50TGVuZ3RoLCAwKSk7XG4gICAgfVxuICAgIG5leHRQYXJ0KCkge1xuICAgICAgICB0aGlzLnNlcU51bSA9IHV0aWxzXzEudG9VaW50MzIodGhpcy5zZXFOdW0gKyAxKTtcbiAgICAgICAgY29uc3QgaW5kZXhlcyA9IGZvdW50YWluVXRpbHNfMS5jaG9vc2VGcmFnbWVudHModGhpcy5zZXFOdW0sIHRoaXMuX2ZyYWdtZW50cy5sZW5ndGgsIHRoaXMuY2hlY2tzdW0pO1xuICAgICAgICBjb25zdCBtaXhlZCA9IHRoaXMubWl4KGluZGV4ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IEZvdW50YWluRW5jb2RlclBhcnQodGhpcy5zZXFOdW0sIHRoaXMuX2ZyYWdtZW50cy5sZW5ndGgsIHRoaXMuX21lc3NhZ2VMZW5ndGgsIHRoaXMuY2hlY2tzdW0sIG1peGVkKTtcbiAgICB9XG4gICAgc3RhdGljIGZpbmROb21pbmFsRnJhZ21lbnRMZW5ndGgobWVzc2FnZUxlbmd0aCwgbWluRnJhZ21lbnRMZW5ndGgsIG1heEZyYWdtZW50TGVuZ3RoKSB7XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQobWVzc2FnZUxlbmd0aCA+IDApO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KG1pbkZyYWdtZW50TGVuZ3RoID4gMCk7XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQobWF4RnJhZ21lbnRMZW5ndGggPj0gbWluRnJhZ21lbnRMZW5ndGgpO1xuICAgICAgICBjb25zdCBtYXhGcmFnbWVudENvdW50ID0gTWF0aC5jZWlsKG1lc3NhZ2VMZW5ndGggLyBtaW5GcmFnbWVudExlbmd0aCk7XG4gICAgICAgIGxldCBmcmFnbWVudExlbmd0aCA9IDA7XG4gICAgICAgIGZvciAobGV0IGZyYWdtZW50Q291bnQgPSAxOyBmcmFnbWVudENvdW50IDw9IG1heEZyYWdtZW50Q291bnQ7IGZyYWdtZW50Q291bnQrKykge1xuICAgICAgICAgICAgZnJhZ21lbnRMZW5ndGggPSBNYXRoLmNlaWwobWVzc2FnZUxlbmd0aCAvIGZyYWdtZW50Q291bnQpO1xuICAgICAgICAgICAgaWYgKGZyYWdtZW50TGVuZ3RoIDw9IG1heEZyYWdtZW50TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZyYWdtZW50TGVuZ3RoO1xuICAgIH1cbiAgICBzdGF0aWMgcGFydGl0aW9uTWVzc2FnZShtZXNzYWdlLCBmcmFnbWVudExlbmd0aCkge1xuICAgICAgICBsZXQgcmVtYWluaW5nID0gQnVmZmVyLmZyb20obWVzc2FnZSk7XG4gICAgICAgIGxldCBmcmFnbWVudDtcbiAgICAgICAgbGV0IF9mcmFnbWVudHMgPSBbXTtcbiAgICAgICAgd2hpbGUgKHJlbWFpbmluZy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBbZnJhZ21lbnQsIHJlbWFpbmluZ10gPSB1dGlsc18xLnNwbGl0KHJlbWFpbmluZywgLWZyYWdtZW50TGVuZ3RoKTtcbiAgICAgICAgICAgIGZyYWdtZW50ID0gQnVmZmVyXG4gICAgICAgICAgICAgICAgLmFsbG9jKGZyYWdtZW50TGVuZ3RoLCAwKSAvLyBpbml0aWFsaXplIHdpdGggMCdzIHRvIGFjaGlldmUgdGhlIHBhZGRpbmdcbiAgICAgICAgICAgICAgICAuZmlsbChmcmFnbWVudCwgMCwgZnJhZ21lbnQubGVuZ3RoKTtcbiAgICAgICAgICAgIF9mcmFnbWVudHMucHVzaChmcmFnbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9mcmFnbWVudHM7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gRm91bnRhaW5FbmNvZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm91bnRhaW5FbmNvZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainUtils.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainUtils.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.chooseFragments = exports.shuffle = exports.chooseDegree = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst xoshiro_1 = __importDefault(__webpack_require__(/*! ./xoshiro */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/xoshiro.js\"));\nconst alias_sampling_1 = __importDefault(__webpack_require__(/*! @keystonehq/alias-sampling */ \"(ssr)/./node_modules/.pnpm/@keystonehq+alias-sampling@0.1.2/node_modules/@keystonehq/alias-sampling/dist/esm/index.js\"));\nconst chooseDegree = (seqLenth, rng) => {\n    const degreeProbabilities = [...new Array(seqLenth)].map((_, index) => 1 / (index + 1));\n    const degreeChooser = alias_sampling_1.default(degreeProbabilities, undefined, rng.nextDouble);\n    return degreeChooser.next() + 1;\n};\nexports.chooseDegree = chooseDegree;\nconst shuffle = (items, rng) => {\n    let remaining = [...items];\n    let result = [];\n    while (remaining.length > 0) {\n        let index = rng.nextInt(0, remaining.length - 1);\n        let item = remaining[index];\n        // remaining.erase(remaining.begin() + index);\n        remaining.splice(index, 1);\n        result.push(item);\n    }\n    return result;\n};\nexports.shuffle = shuffle;\nconst chooseFragments = (seqNum, seqLength, checksum) => {\n    // The first `seqLenth` parts are the \"pure\" fragments, not mixed with any\n    // others. This means that if you only generate the first `seqLenth` parts,\n    // then you have all the parts you need to decode the message.\n    if (seqNum <= seqLength) {\n        return [seqNum - 1];\n    }\n    else {\n        const seed = Buffer.concat([utils_1.intToBytes(seqNum), utils_1.intToBytes(checksum)]);\n        const rng = new xoshiro_1.default(seed);\n        const degree = exports.chooseDegree(seqLength, rng);\n        const indexes = [...new Array(seqLength)].map((_, index) => index);\n        const shuffledIndexes = exports.shuffle(indexes, rng);\n        return shuffledIndexes.slice(0, degree);\n    }\n};\nexports.chooseFragments = chooseFragments;\n//# sourceMappingURL=fountainUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZm91bnRhaW5VdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGVBQWUsR0FBRyxvQkFBb0I7QUFDaEUsZ0JBQWdCLG1CQUFPLENBQUMsNkdBQVM7QUFDakMsa0NBQWtDLG1CQUFPLENBQUMsaUhBQVc7QUFDckQseUNBQXlDLG1CQUFPLENBQUMseUpBQTRCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0BuZ3JhdmVpbytiYy11ckAxLjEuMTMvbm9kZV9tb2R1bGVzL0BuZ3JhdmVpby9iYy11ci9kaXN0L2ZvdW50YWluVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNob29zZUZyYWdtZW50cyA9IGV4cG9ydHMuc2h1ZmZsZSA9IGV4cG9ydHMuY2hvb3NlRGVncmVlID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgeG9zaGlyb18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3hvc2hpcm9cIikpO1xuY29uc3QgYWxpYXNfc2FtcGxpbmdfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQGtleXN0b25laHEvYWxpYXMtc2FtcGxpbmdcIikpO1xuY29uc3QgY2hvb3NlRGVncmVlID0gKHNlcUxlbnRoLCBybmcpID0+IHtcbiAgICBjb25zdCBkZWdyZWVQcm9iYWJpbGl0aWVzID0gWy4uLm5ldyBBcnJheShzZXFMZW50aCldLm1hcCgoXywgaW5kZXgpID0+IDEgLyAoaW5kZXggKyAxKSk7XG4gICAgY29uc3QgZGVncmVlQ2hvb3NlciA9IGFsaWFzX3NhbXBsaW5nXzEuZGVmYXVsdChkZWdyZWVQcm9iYWJpbGl0aWVzLCB1bmRlZmluZWQsIHJuZy5uZXh0RG91YmxlKTtcbiAgICByZXR1cm4gZGVncmVlQ2hvb3Nlci5uZXh0KCkgKyAxO1xufTtcbmV4cG9ydHMuY2hvb3NlRGVncmVlID0gY2hvb3NlRGVncmVlO1xuY29uc3Qgc2h1ZmZsZSA9IChpdGVtcywgcm5nKSA9PiB7XG4gICAgbGV0IHJlbWFpbmluZyA9IFsuLi5pdGVtc107XG4gICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgIHdoaWxlIChyZW1haW5pbmcubGVuZ3RoID4gMCkge1xuICAgICAgICBsZXQgaW5kZXggPSBybmcubmV4dEludCgwLCByZW1haW5pbmcubGVuZ3RoIC0gMSk7XG4gICAgICAgIGxldCBpdGVtID0gcmVtYWluaW5nW2luZGV4XTtcbiAgICAgICAgLy8gcmVtYWluaW5nLmVyYXNlKHJlbWFpbmluZy5iZWdpbigpICsgaW5kZXgpO1xuICAgICAgICByZW1haW5pbmcuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgcmVzdWx0LnB1c2goaXRlbSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy5zaHVmZmxlID0gc2h1ZmZsZTtcbmNvbnN0IGNob29zZUZyYWdtZW50cyA9IChzZXFOdW0sIHNlcUxlbmd0aCwgY2hlY2tzdW0pID0+IHtcbiAgICAvLyBUaGUgZmlyc3QgYHNlcUxlbnRoYCBwYXJ0cyBhcmUgdGhlIFwicHVyZVwiIGZyYWdtZW50cywgbm90IG1peGVkIHdpdGggYW55XG4gICAgLy8gb3RoZXJzLiBUaGlzIG1lYW5zIHRoYXQgaWYgeW91IG9ubHkgZ2VuZXJhdGUgdGhlIGZpcnN0IGBzZXFMZW50aGAgcGFydHMsXG4gICAgLy8gdGhlbiB5b3UgaGF2ZSBhbGwgdGhlIHBhcnRzIHlvdSBuZWVkIHRvIGRlY29kZSB0aGUgbWVzc2FnZS5cbiAgICBpZiAoc2VxTnVtIDw9IHNlcUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gW3NlcU51bSAtIDFdO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3Qgc2VlZCA9IEJ1ZmZlci5jb25jYXQoW3V0aWxzXzEuaW50VG9CeXRlcyhzZXFOdW0pLCB1dGlsc18xLmludFRvQnl0ZXMoY2hlY2tzdW0pXSk7XG4gICAgICAgIGNvbnN0IHJuZyA9IG5ldyB4b3NoaXJvXzEuZGVmYXVsdChzZWVkKTtcbiAgICAgICAgY29uc3QgZGVncmVlID0gZXhwb3J0cy5jaG9vc2VEZWdyZWUoc2VxTGVuZ3RoLCBybmcpO1xuICAgICAgICBjb25zdCBpbmRleGVzID0gWy4uLm5ldyBBcnJheShzZXFMZW5ndGgpXS5tYXAoKF8sIGluZGV4KSA9PiBpbmRleCk7XG4gICAgICAgIGNvbnN0IHNodWZmbGVkSW5kZXhlcyA9IGV4cG9ydHMuc2h1ZmZsZShpbmRleGVzLCBybmcpO1xuICAgICAgICByZXR1cm4gc2h1ZmZsZWRJbmRleGVzLnNsaWNlKDAsIGRlZ3JlZSk7XG4gICAgfVxufTtcbmV4cG9ydHMuY2hvb3NlRnJhZ21lbnRzID0gY2hvb3NlRnJhZ21lbnRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm91bnRhaW5VdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.URDecoder = exports.UREncoder = exports.UR = void 0;\nconst ur_1 = __importDefault(__webpack_require__(/*! ./ur */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/ur.js\"));\nexports.UR = ur_1.default;\nconst urEncoder_1 = __importDefault(__webpack_require__(/*! ./urEncoder */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urEncoder.js\"));\nexports.UREncoder = urEncoder_1.default;\nconst urDecoder_1 = __importDefault(__webpack_require__(/*! ./urDecoder */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urDecoder.js\"));\nexports.URDecoder = urDecoder_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyxVQUFVO0FBQ2xELDZCQUE2QixtQkFBTyxDQUFDLHVHQUFNO0FBQzNDLFVBQVU7QUFDVixvQ0FBb0MsbUJBQU8sQ0FBQyxxSEFBYTtBQUN6RCxpQkFBaUI7QUFDakIsb0NBQW9DLG1CQUFPLENBQUMscUhBQWE7QUFDekQsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0BuZ3JhdmVpbytiYy11ckAxLjEuMTMvbm9kZV9tb2R1bGVzL0BuZ3JhdmVpby9iYy11ci9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VUkRlY29kZXIgPSBleHBvcnRzLlVSRW5jb2RlciA9IGV4cG9ydHMuVVIgPSB2b2lkIDA7XG5jb25zdCB1cl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3VyXCIpKTtcbmV4cG9ydHMuVVIgPSB1cl8xLmRlZmF1bHQ7XG5jb25zdCB1ckVuY29kZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi91ckVuY29kZXJcIikpO1xuZXhwb3J0cy5VUkVuY29kZXIgPSB1ckVuY29kZXJfMS5kZWZhdWx0O1xuY29uc3QgdXJEZWNvZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdXJEZWNvZGVyXCIpKTtcbmV4cG9ydHMuVVJEZWNvZGVyID0gdXJEZWNvZGVyXzEuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/ur.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/ur.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst cbor_1 = __webpack_require__(/*! ./cbor */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/cbor.js\");\nclass UR {\n    constructor(_cborPayload, _type = 'bytes') {\n        this._cborPayload = _cborPayload;\n        this._type = _type;\n        if (!utils_1.isURType(this._type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n    }\n    static fromBuffer(buf) {\n        return new UR(cbor_1.cborEncode(buf));\n    }\n    static from(value, encoding) {\n        return UR.fromBuffer(Buffer.from(value, encoding));\n    }\n    decodeCBOR() {\n        return cbor_1.cborDecode(this._cborPayload);\n    }\n    get type() { return this._type; }\n    get cbor() { return this._cborPayload; }\n    equals(ur2) {\n        return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n    }\n}\nexports[\"default\"] = UR;\n//# sourceMappingURL=ur.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsK0dBQVU7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsNkdBQVM7QUFDakMsZUFBZSxtQkFBTyxDQUFDLDJHQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC91ci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgY2Jvcl8xID0gcmVxdWlyZShcIi4vY2JvclwiKTtcbmNsYXNzIFVSIHtcbiAgICBjb25zdHJ1Y3RvcihfY2JvclBheWxvYWQsIF90eXBlID0gJ2J5dGVzJykge1xuICAgICAgICB0aGlzLl9jYm9yUGF5bG9hZCA9IF9jYm9yUGF5bG9hZDtcbiAgICAgICAgdGhpcy5fdHlwZSA9IF90eXBlO1xuICAgICAgICBpZiAoIXV0aWxzXzEuaXNVUlR5cGUodGhpcy5fdHlwZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGZyb21CdWZmZXIoYnVmKSB7XG4gICAgICAgIHJldHVybiBuZXcgVVIoY2Jvcl8xLmNib3JFbmNvZGUoYnVmKSk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tKHZhbHVlLCBlbmNvZGluZykge1xuICAgICAgICByZXR1cm4gVVIuZnJvbUJ1ZmZlcihCdWZmZXIuZnJvbSh2YWx1ZSwgZW5jb2RpbmcpKTtcbiAgICB9XG4gICAgZGVjb2RlQ0JPUigpIHtcbiAgICAgICAgcmV0dXJuIGNib3JfMS5jYm9yRGVjb2RlKHRoaXMuX2Nib3JQYXlsb2FkKTtcbiAgICB9XG4gICAgZ2V0IHR5cGUoKSB7IHJldHVybiB0aGlzLl90eXBlOyB9XG4gICAgZ2V0IGNib3IoKSB7IHJldHVybiB0aGlzLl9jYm9yUGF5bG9hZDsgfVxuICAgIGVxdWFscyh1cjIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gdXIyLnR5cGUgJiYgdGhpcy5jYm9yLmVxdWFscyh1cjIuY2Jvcik7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gVVI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11ci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/ur.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urDecoder.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urDecoder.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst fountainDecoder_1 = __importDefault(__webpack_require__(/*! ./fountainDecoder */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js\"));\nconst bytewords_1 = __importDefault(__webpack_require__(/*! ./bytewords */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/bytewords.js\"));\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/errors.js\");\nconst ur_1 = __importDefault(__webpack_require__(/*! ./ur */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/ur.js\"));\nconst fountainEncoder_1 = __webpack_require__(/*! ./fountainEncoder */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\");\nclass URDecoder {\n    constructor(fountainDecoder = new fountainDecoder_1.default(), type = 'bytes') {\n        this.fountainDecoder = fountainDecoder;\n        this.type = type;\n        assert_1.default(utils_1.isURType(type), 'Invalid UR type');\n        this.expected_type = '';\n    }\n    static decodeBody(type, message) {\n        const cbor = bytewords_1.default.decode(message, bytewords_1.default.STYLES.MINIMAL);\n        return new ur_1.default(Buffer.from(cbor, 'hex'), type);\n    }\n    validatePart(type) {\n        if (this.expected_type) {\n            return this.expected_type === type;\n        }\n        if (!utils_1.isURType(type)) {\n            return false;\n        }\n        this.expected_type = type;\n        return true;\n    }\n    static decode(message) {\n        const [type, components] = this.parse(message);\n        if (components.length === 0) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const body = components[0];\n        return URDecoder.decodeBody(type, body);\n    }\n    static parse(message) {\n        const lowercase = message.toLowerCase();\n        const prefix = lowercase.slice(0, 3);\n        if (prefix !== 'ur:') {\n            throw new errors_1.InvalidSchemeError();\n        }\n        const components = lowercase.slice(3).split('/');\n        const type = components[0];\n        if (components.length < 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        if (!utils_1.isURType(type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n        return [type, components.slice(1)];\n    }\n    static parseSequenceComponent(s) {\n        const components = s.split('-');\n        if (components.length !== 2) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        const seqNum = utils_1.toUint32(Number(components[0]));\n        const seqLength = Number(components[1]);\n        if (seqNum < 1 || seqLength < 1) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        return [seqNum, seqLength];\n    }\n    receivePart(s) {\n        if (this.result !== undefined) {\n            return false;\n        }\n        const [type, components] = URDecoder.parse(s);\n        if (!this.validatePart(type)) {\n            return false;\n        }\n        // If this is a single-part UR then we're done\n        if (components.length === 1) {\n            this.result = URDecoder.decodeBody(type, components[0]);\n            return true;\n        }\n        if (components.length !== 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const [seq, fragment] = components;\n        const [seqNum, seqLength] = URDecoder.parseSequenceComponent(seq);\n        const cbor = bytewords_1.default.decode(fragment, bytewords_1.default.STYLES.MINIMAL);\n        const part = fountainEncoder_1.FountainEncoderPart.fromCBOR(cbor);\n        if (seqNum !== part.seqNum || seqLength !== part.seqLength) {\n            return false;\n        }\n        if (!this.fountainDecoder.receivePart(part)) {\n            return false;\n        }\n        if (this.fountainDecoder.isSuccess()) {\n            this.result = new ur_1.default(this.fountainDecoder.resultMessage(), type);\n        }\n        else if (this.fountainDecoder.isFailure()) {\n            this.error = new errors_1.InvalidSchemeError();\n        }\n        return true;\n    }\n    resultUR() {\n        return this.result ? this.result : new ur_1.default(Buffer.from([]));\n    }\n    isComplete() {\n        return this.result && this.result.cbor.length > 0;\n    }\n    isSuccess() {\n        return !this.error && this.isComplete();\n    }\n    isError() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.fountainDecoder.expectedPartCount();\n    }\n    expectedPartIndexes() {\n        return this.fountainDecoder.getExpectedPartIndexes();\n    }\n    receivedPartIndexes() {\n        return this.fountainDecoder.getReceivedPartIndexes();\n    }\n    lastPartIndexes() {\n        return this.fountainDecoder.getLastPartIndexes();\n    }\n    estimatedPercentComplete() {\n        return this.fountainDecoder.estimatedPercentComplete();\n    }\n    getProgress() {\n        return this.fountainDecoder.getProgress();\n    }\n}\nexports[\"default\"] = URDecoder;\n//# sourceMappingURL=urDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXJEZWNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMENBQTBDLG1CQUFPLENBQUMsaUlBQW1CO0FBQ3JFLG9DQUFvQyxtQkFBTyxDQUFDLHFIQUFhO0FBQ3pELGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLDZHQUFTO0FBQ2pDLGlCQUFpQixtQkFBTyxDQUFDLCtHQUFVO0FBQ25DLDZCQUE2QixtQkFBTyxDQUFDLHVHQUFNO0FBQzNDLDBCQUEwQixtQkFBTyxDQUFDLGlJQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC91ckRlY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmb3VudGFpbkRlY29kZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9mb3VudGFpbkRlY29kZXJcIikpO1xuY29uc3QgYnl0ZXdvcmRzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYnl0ZXdvcmRzXCIpKTtcbmNvbnN0IGFzc2VydF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhc3NlcnRcIikpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5jb25zdCB1cl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3VyXCIpKTtcbmNvbnN0IGZvdW50YWluRW5jb2Rlcl8xID0gcmVxdWlyZShcIi4vZm91bnRhaW5FbmNvZGVyXCIpO1xuY2xhc3MgVVJEZWNvZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihmb3VudGFpbkRlY29kZXIgPSBuZXcgZm91bnRhaW5EZWNvZGVyXzEuZGVmYXVsdCgpLCB0eXBlID0gJ2J5dGVzJykge1xuICAgICAgICB0aGlzLmZvdW50YWluRGVjb2RlciA9IGZvdW50YWluRGVjb2RlcjtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdCh1dGlsc18xLmlzVVJUeXBlKHR5cGUpLCAnSW52YWxpZCBVUiB0eXBlJyk7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWRfdHlwZSA9ICcnO1xuICAgIH1cbiAgICBzdGF0aWMgZGVjb2RlQm9keSh0eXBlLCBtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGNib3IgPSBieXRld29yZHNfMS5kZWZhdWx0LmRlY29kZShtZXNzYWdlLCBieXRld29yZHNfMS5kZWZhdWx0LlNUWUxFUy5NSU5JTUFMKTtcbiAgICAgICAgcmV0dXJuIG5ldyB1cl8xLmRlZmF1bHQoQnVmZmVyLmZyb20oY2JvciwgJ2hleCcpLCB0eXBlKTtcbiAgICB9XG4gICAgdmFsaWRhdGVQYXJ0KHR5cGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZXhwZWN0ZWRfdHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXhwZWN0ZWRfdHlwZSA9PT0gdHlwZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXV0aWxzXzEuaXNVUlR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmV4cGVjdGVkX3R5cGUgPSB0eXBlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZShtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IFt0eXBlLCBjb21wb25lbnRzXSA9IHRoaXMucGFyc2UobWVzc2FnZSk7XG4gICAgICAgIGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkludmFsaWRQYXRoTGVuZ3RoRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBib2R5ID0gY29tcG9uZW50c1swXTtcbiAgICAgICAgcmV0dXJuIFVSRGVjb2Rlci5kZWNvZGVCb2R5KHR5cGUsIGJvZHkpO1xuICAgIH1cbiAgICBzdGF0aWMgcGFyc2UobWVzc2FnZSkge1xuICAgICAgICBjb25zdCBsb3dlcmNhc2UgPSBtZXNzYWdlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGNvbnN0IHByZWZpeCA9IGxvd2VyY2FzZS5zbGljZSgwLCAzKTtcbiAgICAgICAgaWYgKHByZWZpeCAhPT0gJ3VyOicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkU2NoZW1lRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb21wb25lbnRzID0gbG93ZXJjYXNlLnNsaWNlKDMpLnNwbGl0KCcvJyk7XG4gICAgICAgIGNvbnN0IHR5cGUgPSBjb21wb25lbnRzWzBdO1xuICAgICAgICBpZiAoY29tcG9uZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZFBhdGhMZW5ndGhFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdXRpbHNfMS5pc1VSVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkludmFsaWRUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW3R5cGUsIGNvbXBvbmVudHMuc2xpY2UoMSldO1xuICAgIH1cbiAgICBzdGF0aWMgcGFyc2VTZXF1ZW5jZUNvbXBvbmVudChzKSB7XG4gICAgICAgIGNvbnN0IGNvbXBvbmVudHMgPSBzLnNwbGl0KCctJyk7XG4gICAgICAgIGlmIChjb21wb25lbnRzLmxlbmd0aCAhPT0gMikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkludmFsaWRTZXF1ZW5jZUNvbXBvbmVudEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VxTnVtID0gdXRpbHNfMS50b1VpbnQzMihOdW1iZXIoY29tcG9uZW50c1swXSkpO1xuICAgICAgICBjb25zdCBzZXFMZW5ndGggPSBOdW1iZXIoY29tcG9uZW50c1sxXSk7XG4gICAgICAgIGlmIChzZXFOdW0gPCAxIHx8IHNlcUxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkU2VxdWVuY2VDb21wb25lbnRFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbc2VxTnVtLCBzZXFMZW5ndGhdO1xuICAgIH1cbiAgICByZWNlaXZlUGFydChzKSB7XG4gICAgICAgIGlmICh0aGlzLnJlc3VsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW3R5cGUsIGNvbXBvbmVudHNdID0gVVJEZWNvZGVyLnBhcnNlKHMpO1xuICAgICAgICBpZiAoIXRoaXMudmFsaWRhdGVQYXJ0KHR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhpcyBpcyBhIHNpbmdsZS1wYXJ0IFVSIHRoZW4gd2UncmUgZG9uZVxuICAgICAgICBpZiAoY29tcG9uZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0ID0gVVJEZWNvZGVyLmRlY29kZUJvZHkodHlwZSwgY29tcG9uZW50c1swXSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29tcG9uZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkUGF0aExlbmd0aEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW3NlcSwgZnJhZ21lbnRdID0gY29tcG9uZW50cztcbiAgICAgICAgY29uc3QgW3NlcU51bSwgc2VxTGVuZ3RoXSA9IFVSRGVjb2Rlci5wYXJzZVNlcXVlbmNlQ29tcG9uZW50KHNlcSk7XG4gICAgICAgIGNvbnN0IGNib3IgPSBieXRld29yZHNfMS5kZWZhdWx0LmRlY29kZShmcmFnbWVudCwgYnl0ZXdvcmRzXzEuZGVmYXVsdC5TVFlMRVMuTUlOSU1BTCk7XG4gICAgICAgIGNvbnN0IHBhcnQgPSBmb3VudGFpbkVuY29kZXJfMS5Gb3VudGFpbkVuY29kZXJQYXJ0LmZyb21DQk9SKGNib3IpO1xuICAgICAgICBpZiAoc2VxTnVtICE9PSBwYXJ0LnNlcU51bSB8fCBzZXFMZW5ndGggIT09IHBhcnQuc2VxTGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmZvdW50YWluRGVjb2Rlci5yZWNlaXZlUGFydChwYXJ0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmZvdW50YWluRGVjb2Rlci5pc1N1Y2Nlc3MoKSkge1xuICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSBuZXcgdXJfMS5kZWZhdWx0KHRoaXMuZm91bnRhaW5EZWNvZGVyLnJlc3VsdE1lc3NhZ2UoKSwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5mb3VudGFpbkRlY29kZXIuaXNGYWlsdXJlKCkpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBuZXcgZXJyb3JzXzEuSW52YWxpZFNjaGVtZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJlc3VsdFVSKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXN1bHQgPyB0aGlzLnJlc3VsdCA6IG5ldyB1cl8xLmRlZmF1bHQoQnVmZmVyLmZyb20oW10pKTtcbiAgICB9XG4gICAgaXNDb21wbGV0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0ICYmIHRoaXMucmVzdWx0LmNib3IubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgaXNTdWNjZXNzKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuZXJyb3IgJiYgdGhpcy5pc0NvbXBsZXRlKCk7XG4gICAgfVxuICAgIGlzRXJyb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVycm9yICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlc3VsdEVycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lcnJvciA/IHRoaXMuZXJyb3IubWVzc2FnZSA6ICcnO1xuICAgIH1cbiAgICBleHBlY3RlZFBhcnRDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm91bnRhaW5EZWNvZGVyLmV4cGVjdGVkUGFydENvdW50KCk7XG4gICAgfVxuICAgIGV4cGVjdGVkUGFydEluZGV4ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5nZXRFeHBlY3RlZFBhcnRJbmRleGVzKCk7XG4gICAgfVxuICAgIHJlY2VpdmVkUGFydEluZGV4ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5nZXRSZWNlaXZlZFBhcnRJbmRleGVzKCk7XG4gICAgfVxuICAgIGxhc3RQYXJ0SW5kZXhlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm91bnRhaW5EZWNvZGVyLmdldExhc3RQYXJ0SW5kZXhlcygpO1xuICAgIH1cbiAgICBlc3RpbWF0ZWRQZXJjZW50Q29tcGxldGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5lc3RpbWF0ZWRQZXJjZW50Q29tcGxldGUoKTtcbiAgICB9XG4gICAgZ2V0UHJvZ3Jlc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5nZXRQcm9ncmVzcygpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFVSRGVjb2Rlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVyRGVjb2Rlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urDecoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urEncoder.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urEncoder.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst fountainEncoder_1 = __importDefault(__webpack_require__(/*! ./fountainEncoder */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\"));\nconst bytewords_1 = __importDefault(__webpack_require__(/*! ./bytewords */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/bytewords.js\"));\nclass UREncoder {\n    constructor(_ur, maxFragmentLength, firstSeqNum, minFragmentLength) {\n        this.ur = _ur;\n        this.fountainEncoder = new fountainEncoder_1.default(_ur.cbor, maxFragmentLength, firstSeqNum, minFragmentLength);\n    }\n    get fragmentsLength() { return this.fountainEncoder.fragmentsLength; }\n    get fragments() { return this.fountainEncoder.fragments; }\n    get messageLength() { return this.fountainEncoder.messageLength; }\n    get cbor() { return this.ur.cbor; }\n    encodeWhole() {\n        return [...new Array(this.fragmentsLength)].map(() => this.nextPart());\n    }\n    nextPart() {\n        const part = this.fountainEncoder.nextPart();\n        if (this.fountainEncoder.isSinglePart()) {\n            return UREncoder.encodeSinglePart(this.ur);\n        }\n        else {\n            return UREncoder.encodePart(this.ur.type, part);\n        }\n    }\n    static encodeUri(scheme, pathComponents) {\n        const path = pathComponents.join('/');\n        return [scheme, path].join(':');\n    }\n    static encodeUR(pathComponents) {\n        return UREncoder.encodeUri('ur', pathComponents);\n    }\n    static encodePart(type, part) {\n        const seq = `${part.seqNum}-${part.seqLength}`;\n        const body = bytewords_1.default.encode(part.cbor().toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([type, seq, body]);\n    }\n    static encodeSinglePart(ur) {\n        const body = bytewords_1.default.encode(ur.cbor.toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([ur.type, body]);\n    }\n}\nexports[\"default\"] = UREncoder;\n//# sourceMappingURL=urEncoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXJFbmNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMENBQTBDLG1CQUFPLENBQUMsaUlBQW1CO0FBQ3JFLG9DQUFvQyxtQkFBTyxDQUFDLHFIQUFhO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsc0JBQXNCO0FBQ3RCLDBCQUEwQjtBQUMxQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixZQUFZLEdBQUcsZUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC91ckVuY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmb3VudGFpbkVuY29kZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9mb3VudGFpbkVuY29kZXJcIikpO1xuY29uc3QgYnl0ZXdvcmRzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYnl0ZXdvcmRzXCIpKTtcbmNsYXNzIFVSRW5jb2RlciB7XG4gICAgY29uc3RydWN0b3IoX3VyLCBtYXhGcmFnbWVudExlbmd0aCwgZmlyc3RTZXFOdW0sIG1pbkZyYWdtZW50TGVuZ3RoKSB7XG4gICAgICAgIHRoaXMudXIgPSBfdXI7XG4gICAgICAgIHRoaXMuZm91bnRhaW5FbmNvZGVyID0gbmV3IGZvdW50YWluRW5jb2Rlcl8xLmRlZmF1bHQoX3VyLmNib3IsIG1heEZyYWdtZW50TGVuZ3RoLCBmaXJzdFNlcU51bSwgbWluRnJhZ21lbnRMZW5ndGgpO1xuICAgIH1cbiAgICBnZXQgZnJhZ21lbnRzTGVuZ3RoKCkgeyByZXR1cm4gdGhpcy5mb3VudGFpbkVuY29kZXIuZnJhZ21lbnRzTGVuZ3RoOyB9XG4gICAgZ2V0IGZyYWdtZW50cygpIHsgcmV0dXJuIHRoaXMuZm91bnRhaW5FbmNvZGVyLmZyYWdtZW50czsgfVxuICAgIGdldCBtZXNzYWdlTGVuZ3RoKCkgeyByZXR1cm4gdGhpcy5mb3VudGFpbkVuY29kZXIubWVzc2FnZUxlbmd0aDsgfVxuICAgIGdldCBjYm9yKCkgeyByZXR1cm4gdGhpcy51ci5jYm9yOyB9XG4gICAgZW5jb2RlV2hvbGUoKSB7XG4gICAgICAgIHJldHVybiBbLi4ubmV3IEFycmF5KHRoaXMuZnJhZ21lbnRzTGVuZ3RoKV0ubWFwKCgpID0+IHRoaXMubmV4dFBhcnQoKSk7XG4gICAgfVxuICAgIG5leHRQYXJ0KCkge1xuICAgICAgICBjb25zdCBwYXJ0ID0gdGhpcy5mb3VudGFpbkVuY29kZXIubmV4dFBhcnQoKTtcbiAgICAgICAgaWYgKHRoaXMuZm91bnRhaW5FbmNvZGVyLmlzU2luZ2xlUGFydCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gVVJFbmNvZGVyLmVuY29kZVNpbmdsZVBhcnQodGhpcy51cik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gVVJFbmNvZGVyLmVuY29kZVBhcnQodGhpcy51ci50eXBlLCBwYXJ0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlVXJpKHNjaGVtZSwgcGF0aENvbXBvbmVudHMpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IHBhdGhDb21wb25lbnRzLmpvaW4oJy8nKTtcbiAgICAgICAgcmV0dXJuIFtzY2hlbWUsIHBhdGhdLmpvaW4oJzonKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZVVSKHBhdGhDb21wb25lbnRzKSB7XG4gICAgICAgIHJldHVybiBVUkVuY29kZXIuZW5jb2RlVXJpKCd1cicsIHBhdGhDb21wb25lbnRzKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZVBhcnQodHlwZSwgcGFydCkge1xuICAgICAgICBjb25zdCBzZXEgPSBgJHtwYXJ0LnNlcU51bX0tJHtwYXJ0LnNlcUxlbmd0aH1gO1xuICAgICAgICBjb25zdCBib2R5ID0gYnl0ZXdvcmRzXzEuZGVmYXVsdC5lbmNvZGUocGFydC5jYm9yKCkudG9TdHJpbmcoJ2hleCcpLCBieXRld29yZHNfMS5kZWZhdWx0LlNUWUxFUy5NSU5JTUFMKTtcbiAgICAgICAgcmV0dXJuIFVSRW5jb2Rlci5lbmNvZGVVUihbdHlwZSwgc2VxLCBib2R5XSk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVTaW5nbGVQYXJ0KHVyKSB7XG4gICAgICAgIGNvbnN0IGJvZHkgPSBieXRld29yZHNfMS5kZWZhdWx0LmVuY29kZSh1ci5jYm9yLnRvU3RyaW5nKCdoZXgnKSwgYnl0ZXdvcmRzXzEuZGVmYXVsdC5TVFlMRVMuTUlOSU1BTCk7XG4gICAgICAgIHJldHVybiBVUkVuY29kZXIuZW5jb2RlVVIoW3VyLnR5cGUsIGJvZHldKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBVUkVuY29kZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11ckVuY29kZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/urEncoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bufferXOR = exports.setDifference = exports.arrayContains = exports.arraysEqual = exports.hasPrefix = exports.isURType = exports.intToBytes = exports.toUint32 = exports.getCRCHex = exports.getCRC = exports.split = exports.partition = exports.sha256Hash = void 0;\nconst sha_js_1 = __importDefault(__webpack_require__(/*! sha.js */ \"(ssr)/./node_modules/.pnpm/sha.js@2.4.11/node_modules/sha.js/index.js\"));\nconst crc_1 = __webpack_require__(/*! crc */ \"(ssr)/./node_modules/.pnpm/crc@3.8.0/node_modules/crc/index.js\");\nconst sha256Hash = (data) => sha_js_1.default('sha256').update(data).digest();\nexports.sha256Hash = sha256Hash;\nconst partition = (s, n) => s.match(new RegExp('.{1,' + n + '}', 'g')) || [s];\nexports.partition = partition;\nconst split = (s, length) => [s.slice(0, -length), s.slice(-length)];\nexports.split = split;\nconst getCRC = (message) => crc_1.crc32(message);\nexports.getCRC = getCRC;\nconst getCRCHex = (message) => crc_1.crc32(message).toString(16).padStart(8, '0');\nexports.getCRCHex = getCRCHex;\nconst toUint32 = (number) => number >>> 0;\nexports.toUint32 = toUint32;\nconst intToBytes = (num) => {\n    const arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return Buffer.from(arr);\n};\nexports.intToBytes = intToBytes;\nconst isURType = (type) => {\n    return type.split('').every((_, index) => {\n        let c = type.charCodeAt(index);\n        if ('a'.charCodeAt(0) <= c && c <= 'z'.charCodeAt(0))\n            return true;\n        if ('0'.charCodeAt(0) <= c && c <= '9'.charCodeAt(0))\n            return true;\n        if (c === '-'.charCodeAt(0))\n            return true;\n        return false;\n    });\n};\nexports.isURType = isURType;\nconst hasPrefix = (s, prefix) => s.indexOf(prefix) === 0;\nexports.hasPrefix = hasPrefix;\nconst arraysEqual = (ar1, ar2) => {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    return ar1.every(el => ar2.includes(el));\n};\nexports.arraysEqual = arraysEqual;\n/**\n * Checks if ar1 contains all elements of ar2\n * @param ar1 the outer array\n * @param ar2 the array to be contained in ar1\n */\nconst arrayContains = (ar1, ar2) => {\n    return ar2.every(v => ar1.includes(v));\n};\nexports.arrayContains = arrayContains;\n/**\n * Returns the difference array of  `ar1` - `ar2`\n */\nconst setDifference = (ar1, ar2) => {\n    return ar1.filter(x => ar2.indexOf(x) < 0);\n};\nexports.setDifference = setDifference;\nconst bufferXOR = (a, b) => {\n    const length = Math.max(a.length, b.length);\n    const buffer = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; ++i) {\n        buffer[i] = a[i] ^ b[i];\n    }\n    return buffer;\n};\nexports.bufferXOR = bufferXOR;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxxQkFBcUIsR0FBRyxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyxjQUFjLEdBQUcsYUFBYSxHQUFHLGlCQUFpQixHQUFHLGtCQUFrQjtBQUNwUSxpQ0FBaUMsbUJBQU8sQ0FBQyxxRkFBUTtBQUNqRCxjQUFjLG1CQUFPLENBQUMsMkVBQUs7QUFDM0I7QUFDQSxrQkFBa0I7QUFDbEIsa0RBQWtELFlBQVk7QUFDOUQsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsY0FBYztBQUNkO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0EsbUNBQW1DLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVmZmVyWE9SID0gZXhwb3J0cy5zZXREaWZmZXJlbmNlID0gZXhwb3J0cy5hcnJheUNvbnRhaW5zID0gZXhwb3J0cy5hcnJheXNFcXVhbCA9IGV4cG9ydHMuaGFzUHJlZml4ID0gZXhwb3J0cy5pc1VSVHlwZSA9IGV4cG9ydHMuaW50VG9CeXRlcyA9IGV4cG9ydHMudG9VaW50MzIgPSBleHBvcnRzLmdldENSQ0hleCA9IGV4cG9ydHMuZ2V0Q1JDID0gZXhwb3J0cy5zcGxpdCA9IGV4cG9ydHMucGFydGl0aW9uID0gZXhwb3J0cy5zaGEyNTZIYXNoID0gdm9pZCAwO1xuY29uc3Qgc2hhX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInNoYS5qc1wiKSk7XG5jb25zdCBjcmNfMSA9IHJlcXVpcmUoXCJjcmNcIik7XG5jb25zdCBzaGEyNTZIYXNoID0gKGRhdGEpID0+IHNoYV9qc18xLmRlZmF1bHQoJ3NoYTI1NicpLnVwZGF0ZShkYXRhKS5kaWdlc3QoKTtcbmV4cG9ydHMuc2hhMjU2SGFzaCA9IHNoYTI1Nkhhc2g7XG5jb25zdCBwYXJ0aXRpb24gPSAocywgbikgPT4gcy5tYXRjaChuZXcgUmVnRXhwKCcuezEsJyArIG4gKyAnfScsICdnJykpIHx8IFtzXTtcbmV4cG9ydHMucGFydGl0aW9uID0gcGFydGl0aW9uO1xuY29uc3Qgc3BsaXQgPSAocywgbGVuZ3RoKSA9PiBbcy5zbGljZSgwLCAtbGVuZ3RoKSwgcy5zbGljZSgtbGVuZ3RoKV07XG5leHBvcnRzLnNwbGl0ID0gc3BsaXQ7XG5jb25zdCBnZXRDUkMgPSAobWVzc2FnZSkgPT4gY3JjXzEuY3JjMzIobWVzc2FnZSk7XG5leHBvcnRzLmdldENSQyA9IGdldENSQztcbmNvbnN0IGdldENSQ0hleCA9IChtZXNzYWdlKSA9PiBjcmNfMS5jcmMzMihtZXNzYWdlKS50b1N0cmluZygxNikucGFkU3RhcnQoOCwgJzAnKTtcbmV4cG9ydHMuZ2V0Q1JDSGV4ID0gZ2V0Q1JDSGV4O1xuY29uc3QgdG9VaW50MzIgPSAobnVtYmVyKSA9PiBudW1iZXIgPj4+IDA7XG5leHBvcnRzLnRvVWludDMyID0gdG9VaW50MzI7XG5jb25zdCBpbnRUb0J5dGVzID0gKG51bSkgPT4ge1xuICAgIGNvbnN0IGFyciA9IG5ldyBBcnJheUJ1ZmZlcig0KTsgLy8gYW4gSW50MzIgdGFrZXMgNCBieXRlc1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYXJyKTtcbiAgICB2aWV3LnNldFVpbnQzMigwLCBudW0sIGZhbHNlKTsgLy8gYnl0ZU9mZnNldCA9IDA7IGxpdHRlRW5kaWFuID0gZmFsc2VcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYXJyKTtcbn07XG5leHBvcnRzLmludFRvQnl0ZXMgPSBpbnRUb0J5dGVzO1xuY29uc3QgaXNVUlR5cGUgPSAodHlwZSkgPT4ge1xuICAgIHJldHVybiB0eXBlLnNwbGl0KCcnKS5ldmVyeSgoXywgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IGMgPSB0eXBlLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICBpZiAoJ2EnLmNoYXJDb2RlQXQoMCkgPD0gYyAmJiBjIDw9ICd6Jy5jaGFyQ29kZUF0KDApKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGlmICgnMCcuY2hhckNvZGVBdCgwKSA8PSBjICYmIGMgPD0gJzknLmNoYXJDb2RlQXQoMCkpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKGMgPT09ICctJy5jaGFyQ29kZUF0KDApKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmlzVVJUeXBlID0gaXNVUlR5cGU7XG5jb25zdCBoYXNQcmVmaXggPSAocywgcHJlZml4KSA9PiBzLmluZGV4T2YocHJlZml4KSA9PT0gMDtcbmV4cG9ydHMuaGFzUHJlZml4ID0gaGFzUHJlZml4O1xuY29uc3QgYXJyYXlzRXF1YWwgPSAoYXIxLCBhcjIpID0+IHtcbiAgICBpZiAoYXIxLmxlbmd0aCAhPT0gYXIyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBhcjEuZXZlcnkoZWwgPT4gYXIyLmluY2x1ZGVzKGVsKSk7XG59O1xuZXhwb3J0cy5hcnJheXNFcXVhbCA9IGFycmF5c0VxdWFsO1xuLyoqXG4gKiBDaGVja3MgaWYgYXIxIGNvbnRhaW5zIGFsbCBlbGVtZW50cyBvZiBhcjJcbiAqIEBwYXJhbSBhcjEgdGhlIG91dGVyIGFycmF5XG4gKiBAcGFyYW0gYXIyIHRoZSBhcnJheSB0byBiZSBjb250YWluZWQgaW4gYXIxXG4gKi9cbmNvbnN0IGFycmF5Q29udGFpbnMgPSAoYXIxLCBhcjIpID0+IHtcbiAgICByZXR1cm4gYXIyLmV2ZXJ5KHYgPT4gYXIxLmluY2x1ZGVzKHYpKTtcbn07XG5leHBvcnRzLmFycmF5Q29udGFpbnMgPSBhcnJheUNvbnRhaW5zO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBkaWZmZXJlbmNlIGFycmF5IG9mICBgYXIxYCAtIGBhcjJgXG4gKi9cbmNvbnN0IHNldERpZmZlcmVuY2UgPSAoYXIxLCBhcjIpID0+IHtcbiAgICByZXR1cm4gYXIxLmZpbHRlcih4ID0+IGFyMi5pbmRleE9mKHgpIDwgMCk7XG59O1xuZXhwb3J0cy5zZXREaWZmZXJlbmNlID0gc2V0RGlmZmVyZW5jZTtcbmNvbnN0IGJ1ZmZlclhPUiA9IChhLCBiKSA9PiB7XG4gICAgY29uc3QgbGVuZ3RoID0gTWF0aC5tYXgoYS5sZW5ndGgsIGIubGVuZ3RoKTtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgICAgIGJ1ZmZlcltpXSA9IGFbaV0gXiBiW2ldO1xuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyO1xufTtcbmV4cG9ydHMuYnVmZmVyWE9SID0gYnVmZmVyWE9SO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/xoshiro.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/xoshiro.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst bignumber_js_1 = __importDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/.pnpm/bignumber.js@9.1.2/node_modules/bignumber.js/bignumber.js\"));\nconst jsbi_1 = __importDefault(__webpack_require__(/*! jsbi */ \"(ssr)/./node_modules/.pnpm/jsbi@3.2.5/node_modules/jsbi/dist/jsbi.mjs\"));\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, (jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k)))))));\nclass Xoshiro {\n    constructor(seed) {\n        this.next = () => {\n            return new bignumber_js_1.default(this.roll().toString());\n        };\n        this.nextDouble = () => {\n            return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n        };\n        this.nextInt = (low, high) => {\n            return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n        };\n        this.nextByte = () => this.nextInt(0, 255);\n        this.nextData = (count) => ([...new Array(count)].map(() => this.nextByte()));\n        const digest = utils_1.sha256Hash(seed);\n        this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n        this.setS(digest);\n    }\n    setS(digest) {\n        for (let i = 0; i < 4; i++) {\n            let o = i * 8;\n            let v = jsbi_1.default.BigInt(0);\n            for (let n = 0; n < 8; n++) {\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n            }\n            this.s[i] = jsbi_1.default.asUintN(64, v);\n        }\n    }\n    roll() {\n        const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n        const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n        this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n        this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n        this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n        this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n        return result;\n    }\n}\nexports[\"default\"] = Xoshiro;\n//# sourceMappingURL=xoshiro.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ncmF2ZWlvK2JjLXVyQDEuMS4xMy9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QveG9zaGlyby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLDZHQUFTO0FBQ2pDLHVDQUF1QyxtQkFBTyxDQUFDLDBHQUFjO0FBQzdELCtCQUErQixtQkFBTyxDQUFDLG1GQUFNO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0EsNEJBQTRCLE9BQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AbmdyYXZlaW8rYmMtdXJAMS4xLjEzL25vZGVfbW9kdWxlcy9AbmdyYXZlaW8vYmMtdXIvZGlzdC94b3NoaXJvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgYmlnbnVtYmVyX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImJpZ251bWJlci5qc1wiKSk7XG5jb25zdCBqc2JpXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImpzYmlcIikpO1xuY29uc3QgTUFYX1VJTlQ2NCA9IDB4RkZGRkZGRkZGRkZGRkZGRjtcbmNvbnN0IHJvdGwgPSAoeCwgaykgPT4ganNiaV8xLmRlZmF1bHQuYml0d2lzZVhvcihqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5sZWZ0U2hpZnQoeCwganNiaV8xLmRlZmF1bHQuQmlnSW50KGspKSksIGpzYmlfMS5kZWZhdWx0LkJpZ0ludChqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5zaWduZWRSaWdodFNoaWZ0KHgsIChqc2JpXzEuZGVmYXVsdC5zdWJ0cmFjdChqc2JpXzEuZGVmYXVsdC5CaWdJbnQoNjQpLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoaykpKSkpKSk7XG5jbGFzcyBYb3NoaXJvIHtcbiAgICBjb25zdHJ1Y3RvcihzZWVkKSB7XG4gICAgICAgIHRoaXMubmV4dCA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgYmlnbnVtYmVyX2pzXzEuZGVmYXVsdCh0aGlzLnJvbGwoKS50b1N0cmluZygpKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5uZXh0RG91YmxlID0gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBiaWdudW1iZXJfanNfMS5kZWZhdWx0KHRoaXMucm9sbCgpLnRvU3RyaW5nKCkpLmRpdihNQVhfVUlOVDY0ICsgMSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubmV4dEludCA9IChsb3csIGhpZ2gpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKCh0aGlzLm5leHREb3VibGUoKS50b051bWJlcigpICogKGhpZ2ggLSBsb3cgKyAxKSkgKyBsb3cpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm5leHRCeXRlID0gKCkgPT4gdGhpcy5uZXh0SW50KDAsIDI1NSk7XG4gICAgICAgIHRoaXMubmV4dERhdGEgPSAoY291bnQpID0+IChbLi4ubmV3IEFycmF5KGNvdW50KV0ubWFwKCgpID0+IHRoaXMubmV4dEJ5dGUoKSkpO1xuICAgICAgICBjb25zdCBkaWdlc3QgPSB1dGlsc18xLnNoYTI1Nkhhc2goc2VlZCk7XG4gICAgICAgIHRoaXMucyA9IFtqc2JpXzEuZGVmYXVsdC5CaWdJbnQoMCksIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCgwKSwganNiaV8xLmRlZmF1bHQuQmlnSW50KDApLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoMCldO1xuICAgICAgICB0aGlzLnNldFMoZGlnZXN0KTtcbiAgICB9XG4gICAgc2V0UyhkaWdlc3QpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgICAgICAgIGxldCBvID0gaSAqIDg7XG4gICAgICAgICAgICBsZXQgdiA9IGpzYmlfMS5kZWZhdWx0LkJpZ0ludCgwKTtcbiAgICAgICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgODsgbisrKSB7XG4gICAgICAgICAgICAgICAgdiA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0LmxlZnRTaGlmdCh2LCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoOCkpKTtcbiAgICAgICAgICAgICAgICB2ID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQuYml0d2lzZU9yKHYsIGpzYmlfMS5kZWZhdWx0LkJpZ0ludChkaWdlc3RbbyArIG5dKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zW2ldID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwgdik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcm9sbCgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQubXVsdGlwbHkocm90bChqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5tdWx0aXBseSh0aGlzLnNbMV0sIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCg1KSkpLCA3KSwganNiaV8xLmRlZmF1bHQuQmlnSW50KDkpKSk7XG4gICAgICAgIGNvbnN0IHQgPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5sZWZ0U2hpZnQodGhpcy5zWzFdLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoMTcpKSk7XG4gICAgICAgIHRoaXMuc1syXSA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0LmJpdHdpc2VYb3IodGhpcy5zWzJdLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQodGhpcy5zWzBdKSkpO1xuICAgICAgICB0aGlzLnNbM10gPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5iaXR3aXNlWG9yKHRoaXMuc1szXSwganNiaV8xLmRlZmF1bHQuQmlnSW50KHRoaXMuc1sxXSkpKTtcbiAgICAgICAgdGhpcy5zWzFdID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQuYml0d2lzZVhvcih0aGlzLnNbMV0sIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCh0aGlzLnNbMl0pKSk7XG4gICAgICAgIHRoaXMuc1swXSA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0LmJpdHdpc2VYb3IodGhpcy5zWzBdLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQodGhpcy5zWzNdKSkpO1xuICAgICAgICB0aGlzLnNbMl0gPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5iaXR3aXNlWG9yKHRoaXMuc1syXSwganNiaV8xLmRlZmF1bHQuQmlnSW50KHQpKSk7XG4gICAgICAgIHRoaXMuc1szXSA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIHJvdGwodGhpcy5zWzNdLCA0NSkpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFhvc2hpcm87XG4vLyMgc291cmNlTWFwcGluZ1VSTD14b3NoaXJvLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ngraveio+bc-ur@1.1.13/node_modules/@ngraveio/bc-ur/dist/xoshiro.js\n");

/***/ })

};
;