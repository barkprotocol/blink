"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by";
exports.ids = ["vendor-chunks/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectChainID: () => (/* binding */ WalletConnectChainID),\n/* harmony export */   WalletConnectRPCMethods: () => (/* binding */ WalletConnectRPCMethods),\n/* harmony export */   WalletConnectWallet: () => (/* binding */ WalletConnectWallet)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/.pnpm/@solana+web3.js@1.98.0_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/qrcode-modal */ \"(ssr)/./node_modules/.pnpm/@walletconnect+qrcode-modal@1.8.0/node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/.pnpm/@walletconnect+sign-client@2.17.3_@react-native-async-storage+async-storage@1.24.0_react-nati_m34b64qedclwzfsxvz22tzpafe/node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.17.3_@react-native-async-storage+async-storage@1.24.0_react-native@0.7_s252bfwxtq5vq2uomopfdat5i4/node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\");\n\n\n\n\n\n\nvar WalletConnectChainID;\n(function (WalletConnectChainID) {\n    WalletConnectChainID[\"Mainnet\"] = \"solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ\";\n    WalletConnectChainID[\"Devnet\"] = \"solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K\";\n})(WalletConnectChainID || (WalletConnectChainID = {}));\nvar WalletConnectRPCMethods;\n(function (WalletConnectRPCMethods) {\n    WalletConnectRPCMethods[\"signTransaction\"] = \"solana_signTransaction\";\n    WalletConnectRPCMethods[\"signMessage\"] = \"solana_signMessage\";\n})(WalletConnectRPCMethods || (WalletConnectRPCMethods = {}));\nconst getConnectParams = (chainId) => ({\n    requiredNamespaces: {\n        solana: {\n            chains: [chainId],\n            methods: [WalletConnectRPCMethods.signTransaction, WalletConnectRPCMethods.signMessage],\n            events: [],\n        },\n    },\n});\nconst isVersionedTransaction = (transaction) => 'version' in transaction;\nclass WalletConnectWallet {\n    constructor(config) {\n        this._options = config.options;\n        this._network = config.network;\n    }\n    async connect() {\n        const client = this._client ?? (await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_3__[\"default\"].init(this._options));\n        const sessions = client.find(getConnectParams(this._network)).filter((s) => s.acknowledged);\n        if (sessions.length) {\n            // select last matching session\n            this._session = sessions[sessions.length - 1];\n            // We assign this variable only after we're sure we've received approval\n            this._client = client;\n            return {\n                publicKey: this.publicKey,\n            };\n        }\n        else {\n            const { uri, approval } = await client.connect(getConnectParams(this._network));\n            return new Promise((resolve, reject) => {\n                if (uri) {\n                    _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__.open(uri, () => {\n                        reject(new _errors_js__WEBPACK_IMPORTED_MODULE_4__.QRCodeModalError());\n                    });\n                }\n                approval()\n                    .then((session) => {\n                    this._session = session;\n                    // We assign this variable only after we're sure we've received approval\n                    this._client = client;\n                    resolve({ publicKey: this.publicKey });\n                })\n                    .catch(reject)\n                    .finally(() => {\n                    _walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_1__.close();\n                });\n            });\n        }\n    }\n    async disconnect() {\n        if (this._client && this._session) {\n            await this._client.disconnect({\n                topic: this._session.topic,\n                reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)('USER_DISCONNECTED'),\n            });\n            this._session = undefined;\n        }\n        else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    get client() {\n        if (this._client) {\n            // TODO: using client.off throws an error\n            return Object.assign({}, this._client, { off: this._client.removeListener });\n            // return this._client;\n        }\n        else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    get publicKey() {\n        if (this._client && this._session) {\n            const { address } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseAccountId)(this._session.namespaces.solana.accounts[0]);\n            return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(address);\n        }\n        else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    async signTransaction(transaction) {\n        if (this._client && this._session) {\n            let rawTransaction;\n            let legacyTransaction;\n            if (isVersionedTransaction(transaction)) {\n                // V0 transactions are serialized and passed in the `transaction` property\n                rawTransaction = Buffer.from(transaction.serialize()).toString('base64');\n                if (transaction.version === 'legacy') {\n                    // For backwards-compatible, legacy transactions are spread in the params\n                    legacyTransaction = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(transaction.serialize());\n                }\n            }\n            else {\n                rawTransaction = transaction\n                    .serialize({\n                    requireAllSignatures: false,\n                    verifySignatures: false,\n                })\n                    .toString('base64');\n                legacyTransaction = transaction;\n            }\n            const { signature } = await this._client.request({\n                chainId: this._network,\n                topic: this._session.topic,\n                request: {\n                    method: WalletConnectRPCMethods.signTransaction,\n                    params: {\n                        // Passing ...legacyTransaction is deprecated.\n                        // All new clients should rely on the `transaction` parameter.\n                        // The future versions will stop passing ...legacyTransaction.\n                        ...legacyTransaction,\n                        // New base64-encoded serialized transaction request parameter\n                        transaction: rawTransaction,\n                    },\n                },\n            });\n            transaction.addSignature(this.publicKey, Buffer.from(bs58__WEBPACK_IMPORTED_MODULE_2__.decode(signature)));\n            return transaction;\n        }\n        else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n    async signMessage(message) {\n        if (this._client && this._session) {\n            const { signature } = await this._client.request({\n                // The network does not change the output of message signing, but this is a required parameter for SignClient\n                chainId: this._network,\n                topic: this._session.topic,\n                request: {\n                    method: WalletConnectRPCMethods.signMessage,\n                    params: { pubkey: this.publicKey.toString(), message: bs58__WEBPACK_IMPORTED_MODULE_2__.encode(message) },\n                },\n            });\n            return bs58__WEBPACK_IMPORTED_MODULE_2__.decode(signature);\n        }\n        else {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_4__.ClientNotInitializedError();\n        }\n    }\n}\n//# sourceMappingURL=adapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientNotInitializedError: () => (/* binding */ ClientNotInitializedError),\n/* harmony export */   QRCodeModalError: () => (/* binding */ QRCodeModalError)\n/* harmony export */ });\n// Taken from https://stackoverflow.com/a/41429145/2247097\nclass ClientNotInitializedError extends Error {\n    constructor() {\n        super();\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ClientNotInitializedError.prototype);\n    }\n}\nclass QRCodeModalError extends Error {\n    constructor() {\n        super();\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, QRCodeModalError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGpud25nK3dhbGxldGNvbm5lY3Qtc29sYW5hQDAuMi4wX0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZSthc3luYy1zdG9yYWdlQDEuMjQuMF9yZWFjdC1uYXRpX2lvaW5iZGdkZ29jeTVkMjdhaXFiZ3Q1N2J5L25vZGVfbW9kdWxlcy9Aam53bmcvd2FsbGV0Y29ubmVjdC1zb2xhbmEvbGliL2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9Aam53bmcrd2FsbGV0Y29ubmVjdC1zb2xhbmFAMC4yLjBfQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlK2FzeW5jLXN0b3JhZ2VAMS4yNC4wX3JlYWN0LW5hdGlfaW9pbmJkZ2Rnb2N5NWQyN2FpcWJndDU3Ynkvbm9kZV9tb2R1bGVzL0BqbnduZy93YWxsZXRjb25uZWN0LXNvbGFuYS9saWIvZXNtL2Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUYWtlbiBmcm9tIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS80MTQyOTE0NS8yMjQ3MDk3XG5leHBvcnQgY2xhc3MgQ2xpZW50Tm90SW5pdGlhbGl6ZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgLy8gU2V0IHRoZSBwcm90b3R5cGUgZXhwbGljaXRseS5cbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIENsaWVudE5vdEluaXRpYWxpemVkRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUVJDb2RlTW9kYWxFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgLy8gU2V0IHRoZSBwcm90b3R5cGUgZXhwbGljaXRseS5cbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFFSQ29kZU1vZGFsRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/index.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/index.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientNotInitializedError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.ClientNotInitializedError),\n/* harmony export */   QRCodeModalError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.QRCodeModalError),\n/* harmony export */   WalletConnectChainID: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectChainID),\n/* harmony export */   WalletConnectClient: () => (/* reexport safe */ _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   WalletConnectRPCMethods: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectRPCMethods),\n/* harmony export */   WalletConnectWallet: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_0__.WalletConnectWallet)\n/* harmony export */ });\n/* harmony import */ var _adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adapter.js */ \"(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/adapter.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/errors.js\");\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/.pnpm/@walletconnect+sign-client@2.17.3_@react-native-async-storage+async-storage@1.24.0_react-nati_m34b64qedclwzfsxvz22tzpafe/node_modules/@walletconnect/sign-client/dist/index.es.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGpud25nK3dhbGxldGNvbm5lY3Qtc29sYW5hQDAuMi4wX0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZSthc3luYy1zdG9yYWdlQDEuMjQuMF9yZWFjdC1uYXRpX2lvaW5iZGdkZ29jeTVkMjdhaXFiZ3Q1N2J5L25vZGVfbW9kdWxlcy9Aam53bmcvd2FsbGV0Y29ubmVjdC1zb2xhbmEvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkI7QUFDRDtBQUNnRDtBQUM1RSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9Aam53bmcrd2FsbGV0Y29ubmVjdC1zb2xhbmFAMC4yLjBfQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlK2FzeW5jLXN0b3JhZ2VAMS4yNC4wX3JlYWN0LW5hdGlfaW9pbmJkZ2Rnb2N5NWQyN2FpcWJndDU3Ynkvbm9kZV9tb2R1bGVzL0BqbnduZy93YWxsZXRjb25uZWN0LXNvbGFuYS9saWIvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWRhcHRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Vycm9ycy5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFdhbGxldENvbm5lY3RDbGllbnQgfSBmcm9tICdAd2FsbGV0Y29ubmVjdC9zaWduLWNsaWVudCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@jnwng+walletconnect-solana@0.2.0_@react-native-async-storage+async-storage@1.24.0_react-nati_ioinbdgdgocy5d27aiqbgt57by/node_modules/@jnwng/walletconnect-solana/lib/esm/index.js\n");

/***/ })

};
;