/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/cbor-sync@1.0.4";
exports.ids = ["vendor-chunks/cbor-sync@1.0.4"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/cbor-sync@1.0.4/node_modules/cbor-sync/main.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/cbor-sync@1.0.4/node_modules/cbor-sync/main.js ***!
  \***************************************************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n})(this, function () {\n\tvar CBOR = (function () {\n\t\tfunction BinaryHex(hex) {\n\t\t\tthis.$hex = hex;\n\t\t}\n\t\tBinaryHex.prototype = {\n\t\t\tlength: function () {\n\t\t\t\treturn this.$hex.length/2;\n\t\t\t},\n\t\t\ttoString: function (format) {\n\t\t\t\tif (!format || format === 'hex' || format === 16) return this.$hex;\n\t\t\t\tif (format === 'utf-8') {\n\t\t\t\t\tvar encoded = '';\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded += '%' + this.$hex.substring(i, i + 2);\n\t\t\t\t\t}\n\t\t\t\t\treturn decodeURIComponent(encoded);\n\t\t\t\t}\n\t\t\t\tif (format === 'latin') {\n\t\t\t\t\tvar encoded = [];\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n\t\t\t\t\t}\n\t\t\t\t\treturn String.fromCharCode.apply(String, encoded);\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unrecognised format: ' + format);\n\t\t\t}\n\t\t};\n\t\tBinaryHex.fromLatinString = function (latinString) {\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < latinString.length; i++) {\n\t\t\t\tvar pair = latinString.charCodeAt(i).toString(16);\n\t\t\t\tif (pair.length === 1) pair = \"0\" + pair;\n\t\t\t\thex += pair;\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\tBinaryHex.fromUtf8String = function (utf8String) {\n\t\t\tvar encoded = encodeURIComponent(utf8String);\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tif (encoded.charAt(i) === '%') {\n\t\t\t\t\thex += encoded.substring(i + 1, i + 3);\n\t\t\t\t\ti += 2;\n\t\t\t\t} else {\n\t\t\t\t\tvar hexPair = encoded.charCodeAt(i).toString(16);\n\t\t\t\t\tif (hexPair.length < 2) hexPair = \"0\" + hexPair;\n\t\t\t\t\thex += hexPair;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\n\t\tvar semanticEncoders = [];\n\t\tvar semanticDecoders = {};\n\t\n\t\tvar notImplemented = function (label) {\n\t\t\treturn function () {\n\t\t\t\tthrow new Error(label + ' not implemented');\n\t\t\t};\n\t\t};\n\t\n\t\tfunction Reader() {\n\t\t}\n\t\tReader.prototype = {\n\t\t\tpeekByte: notImplemented('peekByte'),\n\t\t\treadByte: notImplemented('readByte'),\n\t\t\treadChunk: notImplemented('readChunk'),\n\t\t\treadFloat16: function () {\n\t\t\t\tvar half = this.readUint16();\n\t\t\t\tvar exponent = (half&0x7fff) >> 10;\n\t\t\t\tvar mantissa = half&0x3ff;\n\t\t\t\tvar negative = half&0x8000;\n\t\t\t\tif (exponent === 0x1f) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 25)*(1024 + mantissa) : Math.pow(2, -24)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat32: function () {\n\t\t\t\tvar intValue = this.readUint32();\n\t\t\t\tvar exponent = (intValue&0x7fffffff) >> 23;\n\t\t\t\tvar mantissa = intValue&0x7fffff;\n\t\t\t\tvar negative = intValue&0x80000000;\n\t\t\t\tif (exponent === 0xff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 23 - 127)*(8388608 + mantissa) : Math.pow(2, -23 - 126)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat64: function () {\n\t\t\t\tvar int1 = this.readUint32(), int2 = this.readUint32();\n\t\t\t\tvar exponent = (int1 >> 20)&0x7ff;\n\t\t\t\tvar mantissa = (int1&0xfffff)*4294967296 + int2;\n\t\t\t\tvar negative = int1&0x80000000;\n\t\t\t\tif (exponent === 0x7ff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 52 - 1023)*(4503599627370496 + mantissa) : Math.pow(2, -52 - 1022)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadUint16: function () {\n\t\t\t\treturn this.readByte()*256 + this.readByte();\n\t\t\t},\n\t\t\treadUint32: function () {\n\t\t\t\treturn this.readUint16()*65536 + this.readUint16();\n\t\t\t},\n\t\t\treadUint64: function () {\n\t\t\t\treturn this.readUint32()*4294967296 + this.readUint32();\n\t\t\t}\n\t\t};\n\t\tfunction Writer() {\n\t\t}\n\t\tWriter.prototype = {\n\t\t\twriteByte: notImplemented('writeByte'),\n\t\t\tresult: notImplemented('result'),\n\t\t\twriteFloat16: notImplemented('writeFloat16'),\n\t\t\twriteFloat32: notImplemented('writeFloat32'),\n\t\t\twriteFloat64: notImplemented('writeFloat64'),\n\t\t\twriteUint16: function (value) {\n\t\t\t\tthis.writeByte((value >> 8)&0xff);\n\t\t\t\tthis.writeByte(value&0xff);\n\t\t\t},\n\t\t\twriteUint32: function (value) {\n\t\t\t\tthis.writeUint16((value>>16)&0xffff);\n\t\t\t\tthis.writeUint16(value&0xffff);\n\t\t\t},\n\t\t\twriteUint64: function (value) {\n\t\t\t\tif (value >= 9007199254740992 || value <= -9007199254740992) {\n\t\t\t\t\tthrow new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n\t\t\t\t}\n\t\t\t\tthis.writeUint32(Math.floor(value/4294967296));\n\t\t\t\tthis.writeUint32(value%4294967296);\n\t\t\t},\n\t\t\twriteString: notImplemented('writeString'),\n\t\t\tcanWriteBinary: function (chunk) {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\twriteBinary: notImplemented('writeChunk')\n\t\t};\n\n\t\tfunction readHeaderRaw(reader) {\n\t\t\tvar firstByte = reader.readByte();\n\t\t\tvar majorType = firstByte >> 5, value = firstByte&0x1f;\n\t\t\treturn {type: majorType, value: value};\n\t\t}\n\t\n\t\tfunction valueFromHeader(header, reader) {\n\t\t\tvar value = header.value;\n\t\t\tif (value < 24) {\n\t\t\t\treturn value;\n\t\t\t} else if (value == 24) {\n\t\t\t\treturn reader.readByte();\n\t\t\t} else if (value == 25) {\n\t\t\t\treturn reader.readUint16();\n\t\t\t} else if (value == 26) {\n\t\t\t\treturn reader.readUint32();\n\t\t\t} else if (value == 27) {\n\t\t\t\treturn reader.readUint64();\n\t\t\t} else if (value == 31) {\n\t\t\t\t// special value for non-terminating arrays/objects\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tnotImplemented('Additional info: ' + value)();\n\t\t}\n\t\n\t\tfunction writeHeaderRaw(type, value, writer) {\n\t\t\twriter.writeByte((type<<5)|value);\n\t\t}\n\t\n\t\tfunction writeHeader(type, value, writer) {\n\t\t\tvar firstByte = type<<5;\n\t\t\tif (value < 24) {\n\t\t\t\twriter.writeByte(firstByte|value);\n\t\t\t} else if (value < 256) {\n\t\t\t\twriter.writeByte(firstByte|24);\n\t\t\t\twriter.writeByte(value);\n\t\t\t} else if (value < 65536) {\n\t\t\t\twriter.writeByte(firstByte|25);\n\t\t\t\twriter.writeUint16(value);\n\t\t\t} else if (value < 4294967296) {\n\t\t\t\twriter.writeByte(firstByte|26);\n\t\t\t\twriter.writeUint32(value);\n\t\t\t} else {\n\t\t\t\twriter.writeByte(firstByte|27);\n\t\t\t\twriter.writeUint64(value);\n\t\t\t}\n\t\t}\n\t\n\t\tvar stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\t\n\t\tfunction decodeReader(reader) {\n\t\t\tvar header = readHeaderRaw(reader);\n\t\t\tswitch (header.type) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn valueFromHeader(header, reader);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn -1 -valueFromHeader(header, reader);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\tcase 3:\n\t\t\t\t\tvar buffer = reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\t\treturn buffer.toString('utf-8');\n\t\t\t\tcase 4:\n\t\t\t\tcase 5:\n\t\t\t\t\tvar arrayLength = valueFromHeader(header, reader);\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tif (arrayLength !== null) {\n\t\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\t\tarrayLength *= 2;\n\t\t\t\t\t\t} \n\t\t\t\t\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\t\t\t\t\tresult[i] = decodeReader(reader);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar item;\n\t\t\t\t\t\twhile ((item = decodeReader(reader)) !== stopCode) {\n\t\t\t\t\t\t\tresult.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\tvar objResult = {};\n\t\t\t\t\t\tfor (var i = 0; i < result.length; i += 2) {\n\t\t\t\t\t\t\tobjResult[result[i]] = result[i + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn objResult;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\tcase 6:\n\t\t\t\t\tvar tag = valueFromHeader(header, reader);\n\t\t\t\t\tvar decoder = semanticDecoders[tag];\n\t\t\t\t\tvar result = decodeReader(reader);\n\t\t\t\t\treturn decoder ? decoder(result) : result;\n\t\t\t\tcase 7:\n\t\t\t\t\tif (header.value === 25) {\n\t\t\t\t\t\treturn reader.readFloat16();\n\t\t\t\t\t} else if (header.value === 26) {\n\t\t\t\t\t\treturn reader.readFloat32();\n\t\t\t\t\t} else if (header.value === 27) {\n\t\t\t\t\t\treturn reader.readFloat64();\n\t\t\t\t\t}\n\t\t\t\t\tswitch (valueFromHeader(header, reader)) {\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase 23:\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\tcase null:\n\t\t\t\t\t\t\treturn stopCode;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unknown fixed value: ' + header.value);\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unsupported header: ' + JSON.stringify(header));\n\t\t\t}\n\t\t\tthrow new Error('not implemented yet');\n\t\t}\n\t\n\t\tfunction encodeWriter(data, writer) {\n\t\t\tfor (var i = 0; i < semanticEncoders.length; i++) {\n\t\t\t\tvar replacement = semanticEncoders[i].fn(data);\n\t\t\t\tif (replacement !== undefined) {\n\t\t\t\t\twriteHeader(6, semanticEncoders[i].tag, writer);\n\t\t\t\t\treturn encodeWriter(replacement, writer);\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif (data && typeof data.toCBOR === 'function') {\n\t\t\t\tdata = data.toCBOR();\n\t\t\t}\n\t\t\n\t\t\tif (data === false) {\n\t\t\t\twriteHeader(7, 20, writer);\n\t\t\t} else if (data === true) {\n\t\t\t\twriteHeader(7, 21, writer);\n\t\t\t} else if (data === null) {\n\t\t\t\twriteHeader(7, 22, writer);\n\t\t\t} else if (data === undefined) {\n\t\t\t\twriteHeader(7, 23, writer);\n\t\t\t} else if (typeof data === 'number') {\n\t\t\t\tif (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n\t\t\t\t\t// Integer\n\t\t\t\t\tif (data < 0) {\n\t\t\t\t\t\twriteHeader(1, -1 - data, writer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteHeader(0, data, writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twriteHeaderRaw(7, 27, writer);\n\t\t\t\t\twriter.writeFloat64(data);\n\t\t\t\t}\n\t\t\t} else if (typeof data === 'string') {\n\t\t\t\twriter.writeString(data, function (length) {\n\t\t\t\t\twriteHeader(3, length, writer);\n\t\t\t\t});\n\t\t\t} else if (writer.canWriteBinary(data)) {\n\t\t\t\twriter.writeBinary(data, function (length) {\n\t\t\t\t\twriteHeader(2, length, writer);\n\t\t\t\t});\n\t\t\t} else if (typeof data === 'object') {\n\t\t\t\tif (api.config.useToJSON && typeof data.toJSON === 'function') {\n\t\t\t   \t\tdata = data.toJSON();\n\t\t\t   \t}\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\twriteHeader(4, data.length, writer);\n\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\tencodeWriter(data[i], writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(data);\n\t\t\t\t\twriteHeader(5, keys.length, writer);\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tencodeWriter(keys[i], writer);\n\t\t\t\t\t\tencodeWriter(data[keys[i]], writer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('CBOR encoding not supported: ' + data);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar readerFunctions = [];\n\t\tvar writerFunctions = [];\n\t\n\t\tvar api = {\n\t\t\tconfig: {\n\t\t\t\tuseToJSON: true\n\t\t\t},\n\t\t\taddWriter: function (format, writerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\twriterFunctions.push(function (f) {\n\t\t\t\t\t\tif (format === f) return writerFunction(f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twriterFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddReader: function (format, readerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\treaderFunctions.push(function (data, f) {\n\t\t\t\t\t\tif (format === f) return readerFunction(data, f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treaderFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\tencode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < writerFunctions.length; i++) {\n\t\t\t\t\tvar func = writerFunctions[i];\n\t\t\t\t\tvar writer = func(format);\n\t\t\t\t\tif (writer) {\n\t\t\t\t\t\tencodeWriter(data, writer);\n\t\t\t\t\t\treturn writer.result();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported output format: ' + format);\n\t\t\t},\n\t\t\tdecode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < readerFunctions.length; i++) {\n\t\t\t\t\tvar func = readerFunctions[i];\n\t\t\t\t\tvar reader = func(data, format);\n\t\t\t\t\tif (reader) {\n\t\t\t\t\t\treturn decodeReader(reader);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported input format: ' + format);\n\t\t\t},\n\t\t\taddSemanticEncode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticEncoders.push({tag: tag, fn: fn});\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\taddSemanticDecode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticDecoders[tag] = fn;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tReader: Reader,\n\t\t\tWriter: Writer\n\t\t};\n\t\t\n\t\t/** Node.js Buffers **/\n\t\tfunction BufferReader(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tBufferReader.prototype = Object.create(Reader.prototype);\n\t\tBufferReader.prototype.peekByte = function () {\n\t\t\treturn this.buffer[this.pos];\n\t\t};\n\t\tBufferReader.prototype.readByte = function () {\n\t\t\treturn this.buffer[this.pos++];\n\t\t};\n\t\tBufferReader.prototype.readUint16 = function () {\n\t\t\tvar result = this.buffer.readUInt16BE(this.pos);\n\t\t\tthis.pos += 2;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readUint32 = function () {\n\t\t\tvar result = this.buffer.readUInt32BE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat32 = function () {\n\t\t\tvar result = this.buffer.readFloatBE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat64 = function () {\n\t\t\tvar result = this.buffer.readDoubleBE(this.pos);\n\t\t\tthis.pos += 8;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readChunk = function (length) {\n\t\t\tvar result = Buffer.alloc(length);\n\t\t\tthis.buffer.copy(result, 0, this.pos, this.pos += length);\n\t\t\treturn result;\n\t\t};\n\t\n\t\tfunction BufferWriter(stringFormat) {\n\t\t\tthis.byteLength = 0;\n\t\t\tthis.defaultBufferLength = 16384; // 16k\n\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\tthis.latestBufferOffset = 0;\n\t\t\tthis.completeBuffers = [];\n\t\t\tthis.stringFormat = stringFormat;\n\t\t}\n\t\tBufferWriter.prototype = Object.create(Writer.prototype);\n\t\tBufferWriter.prototype.writeByte = function (value) {\n\t\t\tthis.latestBuffer[this.latestBufferOffset++] = value;\n\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength++;\n\t\t}\n\t\tBufferWriter.prototype.writeFloat32 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(4);\n\t\t\tbuffer.writeFloatBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeFloat64 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(8);\n\t\t\tbuffer.writeDoubleBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeString = function (string, lengthFunc) {\n\t\t\tvar buffer = Buffer.from(string, 'utf-8');\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.canWriteBinary = function (data) {\n\t\t\treturn data instanceof Buffer;\n\t\t};\n\t\tBufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeBuffer = function (chunk) {\n\t\t\tif (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n\t\t\tif (!this.latestBufferOffset) {\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t} else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n\t\t\t\tchunk.copy(this.latestBuffer, this.latestBufferOffset);\n\t\t\t\tthis.latestBufferOffset += chunk.length;\n\t\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength += chunk.length;\n\t\t}\n\t\tBufferWriter.prototype.result = function () {\n\t\t\t// Copies them all into a single Buffer\n\t\t\tvar result = Buffer.alloc(this.byteLength);\n\t\t\tvar offset = 0;\n\t\t\tfor (var i = 0; i < this.completeBuffers.length; i++) {\n\t\t\t\tvar buffer = this.completeBuffers[i];\n\t\t\t\tbuffer.copy(result, offset, 0, buffer.length);\n\t\t\t\toffset += buffer.length;\n\t\t\t}\n\t\t\tif (this.latestBufferOffset) {\n\t\t\t\tthis.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.stringFormat) return result.toString(this.stringFormat);\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tif (typeof Buffer === 'function') {\n\t\t\tapi.addReader(function (data, format) {\n\t\t\t\tif (data instanceof Buffer) {\n\t\t\t\t\treturn new BufferReader(data);\n\t\t\t\t}\n\t\t\t\tif (format === 'hex' || format === 'base64') {\n\t\t\t\t\tvar buffer = Buffer.from(data, format);\n\t\t\t\t\treturn new BufferReader(buffer);\n\t\t\t\t}\n\t\t\t});\n\t\t\tapi.addWriter(function (format) {\n\t\t\t\tif (!format || format === 'buffer') {\n\t\t\t\t\treturn new BufferWriter();\n\t\t\t\t} else if (format === 'hex' || format === 'base64') {\n\t\t\t\t\treturn new BufferWriter(format);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/** Hex-encoding (and Latin1) for browser **/\n\t\tfunction HexReader(hex) {\n\t\t\tthis.hex = hex;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tHexReader.prototype = Object.create(Reader.prototype);\n\t\tHexReader.prototype.peekByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, 2);\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, this.pos + 2);\n\t\t\tthis.pos += 2;\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readChunk = function (length) {\n\t\t\tvar hex = this.hex.substring(this.pos, this.pos + length*2);\n\t\t\tthis.pos += length*2;\n\t\t\tif (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\n\t\tfunction HexWriter(finalFormat) {\n\t\t\tthis.$hex = '';\n\t\t\tthis.finalFormat = finalFormat || 'hex'\n\t\t}\n\t\tHexWriter.prototype = Object.create(Writer.prototype);\n\t\tHexWriter.prototype.writeByte = function (value) {\n\t\t\tif (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n\t\t\tvar hex = value.toString(16);\n\t\t\tif (hex.length == 1) {\n\t\t\t\thex = '0' + hex;\n\t\t\t}\n\t\t\tthis.$hex += hex;\n\t\t}\n\t\tHexWriter.prototype.canWriteBinary = function (chunk) {\n\t\t\treturn chunk instanceof BinaryHex || (typeof Buffer === 'function' && chunk instanceof Buffer);\n\t\t}\n\t\tHexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n\t\t\tif (chunk instanceof BinaryHex) {\n\t\t\t\tlengthFunction(chunk.length());\n\t\t\t\tthis.$hex += chunk.$hex;\n\t\t\t} else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n\t\t\t\tlengthFunction(chunk.length);\n\t\t\t\tthis.$hex += chunk.toString('hex');\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('HexWriter only accepts BinaryHex or Buffers');\n\t\t\t}\n\t\t}\n\t\tHexWriter.prototype.result = function () {\n\t\t\tif (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n\t\t\t\treturn Buffer.from(this.$hex, 'hex');\n\t\t\t}\n\t\t\treturn new BinaryHex(this.$hex).toString(this.finalFormat);\n\t\t}\n\t\tHexWriter.prototype.writeString = function (string, lengthFunction) {\n\t\t\tvar buffer = BinaryHex.fromUtf8String(string);\n\t\t\tlengthFunction(buffer.length());\n\t\t\tthis.$hex += buffer.$hex;\n\t\t}\n\n\t\tapi.addReader(function (data, format) {\n\t\t\tif (data instanceof BinaryHex || data.$hex) {\n\t\t\t\treturn new HexReader(data.$hex);\n\t\t\t}\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexReader(data)\n\t\t\t}\n\t\t});\n\t\tapi.addWriter(function (format) {\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexWriter();\n\t\t\t}\n\t\t});\n\n\t\treturn api;\n\t})();\n\n\tCBOR.addSemanticEncode(0, function (data) {\n\t\tif (data instanceof Date) {\n\t\t\treturn data.toISOString();\n\t\t}\n\t}).addSemanticDecode(0, function (isoString) {\n\t\treturn new Date(isoString);\n\t}).addSemanticDecode(1, function (isoString) {\n\t\treturn new Date(isoString);\n\t});\n\n\treturn CBOR;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/cbor-sync@1.0.4/node_modules/cbor-sync/main.js\n");

/***/ })

};
;