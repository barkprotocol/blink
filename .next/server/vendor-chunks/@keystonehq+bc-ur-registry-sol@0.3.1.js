"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@keystonehq+bc-ur-registry-sol@0.3.1";
exports.ids = ["vendor-chunks/@keystonehq+bc-ur-registry-sol@0.3.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/bc-ur-registry-sol.cjs.development.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/bc-ur-registry-sol.cjs.development.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar bcUrRegistry = __webpack_require__(/*! @keystonehq/bc-ur-registry */ \"(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry@0.5.5/node_modules/@keystonehq/bc-ur-registry/dist/index.js\");\nvar uuid = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/index.js\");\n\nconst ExtendedRegistryTypes = {\n  SOL_SIGN_REQUEST: /*#__PURE__*/new bcUrRegistry.RegistryType(\"sol-sign-request\", 1101),\n  SOL_SIGNATURE: /*#__PURE__*/new bcUrRegistry.RegistryType(\"sol-signature\", 1102),\n  SOL_NFT_ITEM: /*#__PURE__*/new bcUrRegistry.RegistryType(\"sol-nft-item\", 1104)\n};\n\nconst {\n  decodeToDataItem,\n  RegistryTypes\n} = bcUrRegistry.extend;\n\n(function (SignType) {\n  SignType[SignType[\"Transaction\"] = 1] = \"Transaction\";\n  SignType[SignType[\"Message\"] = 2] = \"Message\";\n})(exports.SignType || (exports.SignType = {}));\n\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"requestId\"] = 1] = \"requestId\";\n  Keys[Keys[\"signData\"] = 2] = \"signData\";\n  Keys[Keys[\"derivationPath\"] = 3] = \"derivationPath\";\n  Keys[Keys[\"address\"] = 4] = \"address\";\n  Keys[Keys[\"origin\"] = 5] = \"origin\";\n  Keys[Keys[\"signType\"] = 6] = \"signType\";\n})(Keys || (Keys = {}));\n\nclass SolSignRequest extends bcUrRegistry.RegistryItem {\n  constructor(args) {\n    super();\n\n    this.getRegistryType = () => ExtendedRegistryTypes.SOL_SIGN_REQUEST;\n\n    this.getRequestId = () => this.requestId;\n\n    this.getSignData = () => this.signData;\n\n    this.getDerivationPath = () => this.derivationPath.getPath();\n\n    this.getSignRequestAddress = () => this.address;\n\n    this.getOrigin = () => this.origin;\n\n    this.getSignType = () => this.signType;\n\n    this.toDataItem = () => {\n      const map = {};\n\n      if (this.requestId) {\n        map[Keys.requestId] = new bcUrRegistry.DataItem(this.requestId, RegistryTypes.UUID.getTag());\n      }\n\n      if (this.address) {\n        map[Keys.address] = this.address;\n      }\n\n      if (this.origin) {\n        map[Keys.origin] = this.origin;\n      }\n\n      map[Keys.signData] = this.signData;\n      map[Keys.signType] = this.signType;\n      const keyPath = this.derivationPath.toDataItem();\n      keyPath.setTag(this.derivationPath.getRegistryType().getTag());\n      map[Keys.derivationPath] = keyPath;\n      return new bcUrRegistry.DataItem(map);\n    };\n\n    this.requestId = args.requestId;\n    this.signData = args.signData;\n    this.derivationPath = args.derivationPath;\n    this.address = args.address;\n    this.origin = args.origin;\n    this.signType = args.signType;\n  }\n\n  static constructSOLRequest(signData, hdPath, xfp, signType, uuidString, address, origin) {\n    const paths = hdPath.replace(/[m|M]\\//, \"\").split(\"/\");\n    const hdpathObject = new bcUrRegistry.CryptoKeypath(paths.map(path => {\n      const index = parseInt(path.replace(\"'\", \"\"));\n      let isHardened = false;\n\n      if (path.endsWith(\"'\")) {\n        isHardened = true;\n      }\n\n      return new bcUrRegistry.PathComponent({\n        index,\n        hardened: isHardened\n      });\n    }), Buffer.from(xfp, \"hex\"));\n    return new SolSignRequest({\n      requestId: uuidString ? Buffer.from(uuid.parse(uuidString)) : undefined,\n      signData,\n      derivationPath: hdpathObject,\n      address: address ? Buffer.from(address.replace(\"0x\", \"\"), \"hex\") : undefined,\n      origin: origin || undefined,\n      signType\n    });\n  }\n\n}\n\nSolSignRequest.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const signData = map[Keys.signData];\n  const derivationPath = bcUrRegistry.CryptoKeypath.fromDataItem(map[Keys.derivationPath]);\n  const address = map[Keys.address] ? map[Keys.address] : undefined;\n  const requestId = map[Keys.requestId] ? map[Keys.requestId].getData() : undefined;\n  const origin = map[Keys.origin] ? map[Keys.origin] : undefined;\n  const signType = map[Keys.signType];\n  return new SolSignRequest({\n    requestId,\n    signData,\n    derivationPath,\n    address,\n    origin,\n    signType\n  });\n};\n\nSolSignRequest.fromCBOR = _cborPayload => {\n  const dataItem = decodeToDataItem(_cborPayload);\n  return SolSignRequest.fromDataItem(dataItem);\n};\n\nconst {\n  RegistryTypes: RegistryTypes$1,\n  decodeToDataItem: decodeToDataItem$1\n} = bcUrRegistry.extend;\nvar Keys$1;\n\n(function (Keys) {\n  Keys[Keys[\"requestId\"] = 1] = \"requestId\";\n  Keys[Keys[\"signature\"] = 2] = \"signature\";\n})(Keys$1 || (Keys$1 = {}));\n\nclass SolSignature extends bcUrRegistry.RegistryItem {\n  constructor(signature, requestId) {\n    super();\n\n    this.getRegistryType = () => ExtendedRegistryTypes.SOL_SIGNATURE;\n\n    this.getRequestId = () => this.requestId;\n\n    this.getSignature = () => this.signature;\n\n    this.toDataItem = () => {\n      const map = {};\n\n      if (this.requestId) {\n        map[Keys$1.requestId] = new bcUrRegistry.DataItem(this.requestId, RegistryTypes$1.UUID.getTag());\n      }\n\n      map[Keys$1.signature] = this.signature;\n      return new bcUrRegistry.DataItem(map);\n    };\n\n    this.signature = signature;\n    this.requestId = requestId;\n  }\n\n}\n\nSolSignature.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const signature = map[Keys$1.signature];\n  const requestId = map[Keys$1.requestId] ? map[Keys$1.requestId].getData() : undefined;\n  return new SolSignature(signature, requestId);\n};\n\nSolSignature.fromCBOR = _cborPayload => {\n  const dataItem = decodeToDataItem$1(_cborPayload);\n  return SolSignature.fromDataItem(dataItem);\n};\n\nconst {\n  decodeToDataItem: decodeToDataItem$2\n} = bcUrRegistry.extend;\nvar Keys$2;\n\n(function (Keys) {\n  Keys[Keys[\"mintAddress\"] = 1] = \"mintAddress\";\n  Keys[Keys[\"collectionName\"] = 2] = \"collectionName\";\n  Keys[Keys[\"name\"] = 3] = \"name\";\n  Keys[Keys[\"mediaData\"] = 4] = \"mediaData\";\n})(Keys$2 || (Keys$2 = {}));\n\nclass SOLNFTItem extends bcUrRegistry.RegistryItem {\n  constructor(args) {\n    super();\n\n    this.getRegistryType = () => ExtendedRegistryTypes.SOL_NFT_ITEM;\n\n    this.getName = () => this.name;\n\n    this.getMediaData = () => this.mediaData;\n\n    this.getMintAddress = () => this.mintAddress;\n\n    this.getCollectionName = () => this.collectionName;\n\n    this.toDataItem = () => {\n      const map = {};\n      map[Keys$2.name] = this.name;\n      map[Keys$2.mintAddress] = this.mintAddress;\n      map[Keys$2.collectionName] = this.collectionName;\n      map[Keys$2.mediaData] = this.mediaData;\n      return new bcUrRegistry.DataItem(map);\n    };\n\n    this.name = args.name;\n    this.mintAddress = args.mintAddress;\n    this.collectionName = args.collectionName;\n    this.mediaData = args.mediaData; // remove the data perfix for android usage\n  }\n\n  static constructETHNFTItem(mintAddress, collectionName, name, mediaData) {\n    return new SOLNFTItem({\n      mintAddress,\n      collectionName,\n      mediaData,\n      name\n    });\n  }\n\n}\n\nSOLNFTItem.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const name = map[Keys$2.name];\n  const mediaData = map[Keys$2.mediaData];\n  const mintAddress = map[Keys$2.mintAddress];\n  const collectionName = map[Keys$2.collectionName];\n  return new SOLNFTItem({\n    name,\n    mintAddress,\n    collectionName,\n    mediaData\n  });\n};\n\nSOLNFTItem.fromCBOR = _cborPayload => {\n  const dataItem = decodeToDataItem$2(_cborPayload);\n  return SOLNFTItem.fromDataItem(dataItem);\n};\n\nbcUrRegistry.patchTags(Object.values(ExtendedRegistryTypes).filter(rt => !!rt.getTag()).map(rt => rt.getTag()));\n\nObject.keys(bcUrRegistry).forEach(function (k) {\n  if (k !== 'default') Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function () {\n      return bcUrRegistry[k];\n    }\n  });\n});\nexports.SOLNFTItem = SOLNFTItem;\nexports.SolSignRequest = SolSignRequest;\nexports.SolSignature = SolSignature;\n//# sourceMappingURL=bc-ur-registry-sol.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0b25laHErYmMtdXItcmVnaXN0cnktc29sQDAuMy4xL25vZGVfbW9kdWxlcy9Aa2V5c3RvbmVocS9iYy11ci1yZWdpc3RyeS1zb2wvZGlzdC9iYy11ci1yZWdpc3RyeS1zb2wuY2pzLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsbUJBQW1CLG1CQUFPLENBQUMscUpBQTRCO0FBQ3ZELFdBQVcsbUJBQU8sQ0FBQyw0RkFBTTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBLENBQUMsdUJBQXVCLGdCQUFnQixLQUFLOztBQUU3Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9COztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3QkFBd0I7O0FBRXpCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdCQUF3Qjs7QUFFekI7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Qsa0JBQWtCO0FBQ2xCLHNCQUFzQjtBQUN0QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0b25laHErYmMtdXItcmVnaXN0cnktc29sQDAuMy4xL25vZGVfbW9kdWxlcy9Aa2V5c3RvbmVocS9iYy11ci1yZWdpc3RyeS1zb2wvZGlzdC9iYy11ci1yZWdpc3RyeS1zb2wuY2pzLmRldmVsb3BtZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIGJjVXJSZWdpc3RyeSA9IHJlcXVpcmUoJ0BrZXlzdG9uZWhxL2JjLXVyLXJlZ2lzdHJ5Jyk7XG52YXIgdXVpZCA9IHJlcXVpcmUoJ3V1aWQnKTtcblxuY29uc3QgRXh0ZW5kZWRSZWdpc3RyeVR5cGVzID0ge1xuICBTT0xfU0lHTl9SRVFVRVNUOiAvKiNfX1BVUkVfXyovbmV3IGJjVXJSZWdpc3RyeS5SZWdpc3RyeVR5cGUoXCJzb2wtc2lnbi1yZXF1ZXN0XCIsIDExMDEpLFxuICBTT0xfU0lHTkFUVVJFOiAvKiNfX1BVUkVfXyovbmV3IGJjVXJSZWdpc3RyeS5SZWdpc3RyeVR5cGUoXCJzb2wtc2lnbmF0dXJlXCIsIDExMDIpLFxuICBTT0xfTkZUX0lURU06IC8qI19fUFVSRV9fKi9uZXcgYmNVclJlZ2lzdHJ5LlJlZ2lzdHJ5VHlwZShcInNvbC1uZnQtaXRlbVwiLCAxMTA0KVxufTtcblxuY29uc3Qge1xuICBkZWNvZGVUb0RhdGFJdGVtLFxuICBSZWdpc3RyeVR5cGVzXG59ID0gYmNVclJlZ2lzdHJ5LmV4dGVuZDtcblxuKGZ1bmN0aW9uIChTaWduVHlwZSkge1xuICBTaWduVHlwZVtTaWduVHlwZVtcIlRyYW5zYWN0aW9uXCJdID0gMV0gPSBcIlRyYW5zYWN0aW9uXCI7XG4gIFNpZ25UeXBlW1NpZ25UeXBlW1wiTWVzc2FnZVwiXSA9IDJdID0gXCJNZXNzYWdlXCI7XG59KShleHBvcnRzLlNpZ25UeXBlIHx8IChleHBvcnRzLlNpZ25UeXBlID0ge30pKTtcblxudmFyIEtleXM7XG5cbihmdW5jdGlvbiAoS2V5cykge1xuICBLZXlzW0tleXNbXCJyZXF1ZXN0SWRcIl0gPSAxXSA9IFwicmVxdWVzdElkXCI7XG4gIEtleXNbS2V5c1tcInNpZ25EYXRhXCJdID0gMl0gPSBcInNpZ25EYXRhXCI7XG4gIEtleXNbS2V5c1tcImRlcml2YXRpb25QYXRoXCJdID0gM10gPSBcImRlcml2YXRpb25QYXRoXCI7XG4gIEtleXNbS2V5c1tcImFkZHJlc3NcIl0gPSA0XSA9IFwiYWRkcmVzc1wiO1xuICBLZXlzW0tleXNbXCJvcmlnaW5cIl0gPSA1XSA9IFwib3JpZ2luXCI7XG4gIEtleXNbS2V5c1tcInNpZ25UeXBlXCJdID0gNl0gPSBcInNpZ25UeXBlXCI7XG59KShLZXlzIHx8IChLZXlzID0ge30pKTtcblxuY2xhc3MgU29sU2lnblJlcXVlc3QgZXh0ZW5kcyBiY1VyUmVnaXN0cnkuUmVnaXN0cnlJdGVtIHtcbiAgY29uc3RydWN0b3IoYXJncykge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLmdldFJlZ2lzdHJ5VHlwZSA9ICgpID0+IEV4dGVuZGVkUmVnaXN0cnlUeXBlcy5TT0xfU0lHTl9SRVFVRVNUO1xuXG4gICAgdGhpcy5nZXRSZXF1ZXN0SWQgPSAoKSA9PiB0aGlzLnJlcXVlc3RJZDtcblxuICAgIHRoaXMuZ2V0U2lnbkRhdGEgPSAoKSA9PiB0aGlzLnNpZ25EYXRhO1xuXG4gICAgdGhpcy5nZXREZXJpdmF0aW9uUGF0aCA9ICgpID0+IHRoaXMuZGVyaXZhdGlvblBhdGguZ2V0UGF0aCgpO1xuXG4gICAgdGhpcy5nZXRTaWduUmVxdWVzdEFkZHJlc3MgPSAoKSA9PiB0aGlzLmFkZHJlc3M7XG5cbiAgICB0aGlzLmdldE9yaWdpbiA9ICgpID0+IHRoaXMub3JpZ2luO1xuXG4gICAgdGhpcy5nZXRTaWduVHlwZSA9ICgpID0+IHRoaXMuc2lnblR5cGU7XG5cbiAgICB0aGlzLnRvRGF0YUl0ZW0gPSAoKSA9PiB7XG4gICAgICBjb25zdCBtYXAgPSB7fTtcblxuICAgICAgaWYgKHRoaXMucmVxdWVzdElkKSB7XG4gICAgICAgIG1hcFtLZXlzLnJlcXVlc3RJZF0gPSBuZXcgYmNVclJlZ2lzdHJ5LkRhdGFJdGVtKHRoaXMucmVxdWVzdElkLCBSZWdpc3RyeVR5cGVzLlVVSUQuZ2V0VGFnKCkpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5hZGRyZXNzKSB7XG4gICAgICAgIG1hcFtLZXlzLmFkZHJlc3NdID0gdGhpcy5hZGRyZXNzO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcmlnaW4pIHtcbiAgICAgICAgbWFwW0tleXMub3JpZ2luXSA9IHRoaXMub3JpZ2luO1xuICAgICAgfVxuXG4gICAgICBtYXBbS2V5cy5zaWduRGF0YV0gPSB0aGlzLnNpZ25EYXRhO1xuICAgICAgbWFwW0tleXMuc2lnblR5cGVdID0gdGhpcy5zaWduVHlwZTtcbiAgICAgIGNvbnN0IGtleVBhdGggPSB0aGlzLmRlcml2YXRpb25QYXRoLnRvRGF0YUl0ZW0oKTtcbiAgICAgIGtleVBhdGguc2V0VGFnKHRoaXMuZGVyaXZhdGlvblBhdGguZ2V0UmVnaXN0cnlUeXBlKCkuZ2V0VGFnKCkpO1xuICAgICAgbWFwW0tleXMuZGVyaXZhdGlvblBhdGhdID0ga2V5UGF0aDtcbiAgICAgIHJldHVybiBuZXcgYmNVclJlZ2lzdHJ5LkRhdGFJdGVtKG1hcCk7XG4gICAgfTtcblxuICAgIHRoaXMucmVxdWVzdElkID0gYXJncy5yZXF1ZXN0SWQ7XG4gICAgdGhpcy5zaWduRGF0YSA9IGFyZ3Muc2lnbkRhdGE7XG4gICAgdGhpcy5kZXJpdmF0aW9uUGF0aCA9IGFyZ3MuZGVyaXZhdGlvblBhdGg7XG4gICAgdGhpcy5hZGRyZXNzID0gYXJncy5hZGRyZXNzO1xuICAgIHRoaXMub3JpZ2luID0gYXJncy5vcmlnaW47XG4gICAgdGhpcy5zaWduVHlwZSA9IGFyZ3Muc2lnblR5cGU7XG4gIH1cblxuICBzdGF0aWMgY29uc3RydWN0U09MUmVxdWVzdChzaWduRGF0YSwgaGRQYXRoLCB4ZnAsIHNpZ25UeXBlLCB1dWlkU3RyaW5nLCBhZGRyZXNzLCBvcmlnaW4pIHtcbiAgICBjb25zdCBwYXRocyA9IGhkUGF0aC5yZXBsYWNlKC9bbXxNXVxcLy8sIFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICBjb25zdCBoZHBhdGhPYmplY3QgPSBuZXcgYmNVclJlZ2lzdHJ5LkNyeXB0b0tleXBhdGgocGF0aHMubWFwKHBhdGggPT4ge1xuICAgICAgY29uc3QgaW5kZXggPSBwYXJzZUludChwYXRoLnJlcGxhY2UoXCInXCIsIFwiXCIpKTtcbiAgICAgIGxldCBpc0hhcmRlbmVkID0gZmFsc2U7XG5cbiAgICAgIGlmIChwYXRoLmVuZHNXaXRoKFwiJ1wiKSkge1xuICAgICAgICBpc0hhcmRlbmVkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBiY1VyUmVnaXN0cnkuUGF0aENvbXBvbmVudCh7XG4gICAgICAgIGluZGV4LFxuICAgICAgICBoYXJkZW5lZDogaXNIYXJkZW5lZFxuICAgICAgfSk7XG4gICAgfSksIEJ1ZmZlci5mcm9tKHhmcCwgXCJoZXhcIikpO1xuICAgIHJldHVybiBuZXcgU29sU2lnblJlcXVlc3Qoe1xuICAgICAgcmVxdWVzdElkOiB1dWlkU3RyaW5nID8gQnVmZmVyLmZyb20odXVpZC5wYXJzZSh1dWlkU3RyaW5nKSkgOiB1bmRlZmluZWQsXG4gICAgICBzaWduRGF0YSxcbiAgICAgIGRlcml2YXRpb25QYXRoOiBoZHBhdGhPYmplY3QsXG4gICAgICBhZGRyZXNzOiBhZGRyZXNzID8gQnVmZmVyLmZyb20oYWRkcmVzcy5yZXBsYWNlKFwiMHhcIiwgXCJcIiksIFwiaGV4XCIpIDogdW5kZWZpbmVkLFxuICAgICAgb3JpZ2luOiBvcmlnaW4gfHwgdW5kZWZpbmVkLFxuICAgICAgc2lnblR5cGVcbiAgICB9KTtcbiAgfVxuXG59XG5cblNvbFNpZ25SZXF1ZXN0LmZyb21EYXRhSXRlbSA9IGRhdGFJdGVtID0+IHtcbiAgY29uc3QgbWFwID0gZGF0YUl0ZW0uZ2V0RGF0YSgpO1xuICBjb25zdCBzaWduRGF0YSA9IG1hcFtLZXlzLnNpZ25EYXRhXTtcbiAgY29uc3QgZGVyaXZhdGlvblBhdGggPSBiY1VyUmVnaXN0cnkuQ3J5cHRvS2V5cGF0aC5mcm9tRGF0YUl0ZW0obWFwW0tleXMuZGVyaXZhdGlvblBhdGhdKTtcbiAgY29uc3QgYWRkcmVzcyA9IG1hcFtLZXlzLmFkZHJlc3NdID8gbWFwW0tleXMuYWRkcmVzc10gOiB1bmRlZmluZWQ7XG4gIGNvbnN0IHJlcXVlc3RJZCA9IG1hcFtLZXlzLnJlcXVlc3RJZF0gPyBtYXBbS2V5cy5yZXF1ZXN0SWRdLmdldERhdGEoKSA6IHVuZGVmaW5lZDtcbiAgY29uc3Qgb3JpZ2luID0gbWFwW0tleXMub3JpZ2luXSA/IG1hcFtLZXlzLm9yaWdpbl0gOiB1bmRlZmluZWQ7XG4gIGNvbnN0IHNpZ25UeXBlID0gbWFwW0tleXMuc2lnblR5cGVdO1xuICByZXR1cm4gbmV3IFNvbFNpZ25SZXF1ZXN0KHtcbiAgICByZXF1ZXN0SWQsXG4gICAgc2lnbkRhdGEsXG4gICAgZGVyaXZhdGlvblBhdGgsXG4gICAgYWRkcmVzcyxcbiAgICBvcmlnaW4sXG4gICAgc2lnblR5cGVcbiAgfSk7XG59O1xuXG5Tb2xTaWduUmVxdWVzdC5mcm9tQ0JPUiA9IF9jYm9yUGF5bG9hZCA9PiB7XG4gIGNvbnN0IGRhdGFJdGVtID0gZGVjb2RlVG9EYXRhSXRlbShfY2JvclBheWxvYWQpO1xuICByZXR1cm4gU29sU2lnblJlcXVlc3QuZnJvbURhdGFJdGVtKGRhdGFJdGVtKTtcbn07XG5cbmNvbnN0IHtcbiAgUmVnaXN0cnlUeXBlczogUmVnaXN0cnlUeXBlcyQxLFxuICBkZWNvZGVUb0RhdGFJdGVtOiBkZWNvZGVUb0RhdGFJdGVtJDFcbn0gPSBiY1VyUmVnaXN0cnkuZXh0ZW5kO1xudmFyIEtleXMkMTtcblxuKGZ1bmN0aW9uIChLZXlzKSB7XG4gIEtleXNbS2V5c1tcInJlcXVlc3RJZFwiXSA9IDFdID0gXCJyZXF1ZXN0SWRcIjtcbiAgS2V5c1tLZXlzW1wic2lnbmF0dXJlXCJdID0gMl0gPSBcInNpZ25hdHVyZVwiO1xufSkoS2V5cyQxIHx8IChLZXlzJDEgPSB7fSkpO1xuXG5jbGFzcyBTb2xTaWduYXR1cmUgZXh0ZW5kcyBiY1VyUmVnaXN0cnkuUmVnaXN0cnlJdGVtIHtcbiAgY29uc3RydWN0b3Ioc2lnbmF0dXJlLCByZXF1ZXN0SWQpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5nZXRSZWdpc3RyeVR5cGUgPSAoKSA9PiBFeHRlbmRlZFJlZ2lzdHJ5VHlwZXMuU09MX1NJR05BVFVSRTtcblxuICAgIHRoaXMuZ2V0UmVxdWVzdElkID0gKCkgPT4gdGhpcy5yZXF1ZXN0SWQ7XG5cbiAgICB0aGlzLmdldFNpZ25hdHVyZSA9ICgpID0+IHRoaXMuc2lnbmF0dXJlO1xuXG4gICAgdGhpcy50b0RhdGFJdGVtID0gKCkgPT4ge1xuICAgICAgY29uc3QgbWFwID0ge307XG5cbiAgICAgIGlmICh0aGlzLnJlcXVlc3RJZCkge1xuICAgICAgICBtYXBbS2V5cyQxLnJlcXVlc3RJZF0gPSBuZXcgYmNVclJlZ2lzdHJ5LkRhdGFJdGVtKHRoaXMucmVxdWVzdElkLCBSZWdpc3RyeVR5cGVzJDEuVVVJRC5nZXRUYWcoKSk7XG4gICAgICB9XG5cbiAgICAgIG1hcFtLZXlzJDEuc2lnbmF0dXJlXSA9IHRoaXMuc2lnbmF0dXJlO1xuICAgICAgcmV0dXJuIG5ldyBiY1VyUmVnaXN0cnkuRGF0YUl0ZW0obWFwKTtcbiAgICB9O1xuXG4gICAgdGhpcy5zaWduYXR1cmUgPSBzaWduYXR1cmU7XG4gICAgdGhpcy5yZXF1ZXN0SWQgPSByZXF1ZXN0SWQ7XG4gIH1cblxufVxuXG5Tb2xTaWduYXR1cmUuZnJvbURhdGFJdGVtID0gZGF0YUl0ZW0gPT4ge1xuICBjb25zdCBtYXAgPSBkYXRhSXRlbS5nZXREYXRhKCk7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IG1hcFtLZXlzJDEuc2lnbmF0dXJlXTtcbiAgY29uc3QgcmVxdWVzdElkID0gbWFwW0tleXMkMS5yZXF1ZXN0SWRdID8gbWFwW0tleXMkMS5yZXF1ZXN0SWRdLmdldERhdGEoKSA6IHVuZGVmaW5lZDtcbiAgcmV0dXJuIG5ldyBTb2xTaWduYXR1cmUoc2lnbmF0dXJlLCByZXF1ZXN0SWQpO1xufTtcblxuU29sU2lnbmF0dXJlLmZyb21DQk9SID0gX2Nib3JQYXlsb2FkID0+IHtcbiAgY29uc3QgZGF0YUl0ZW0gPSBkZWNvZGVUb0RhdGFJdGVtJDEoX2Nib3JQYXlsb2FkKTtcbiAgcmV0dXJuIFNvbFNpZ25hdHVyZS5mcm9tRGF0YUl0ZW0oZGF0YUl0ZW0pO1xufTtcblxuY29uc3Qge1xuICBkZWNvZGVUb0RhdGFJdGVtOiBkZWNvZGVUb0RhdGFJdGVtJDJcbn0gPSBiY1VyUmVnaXN0cnkuZXh0ZW5kO1xudmFyIEtleXMkMjtcblxuKGZ1bmN0aW9uIChLZXlzKSB7XG4gIEtleXNbS2V5c1tcIm1pbnRBZGRyZXNzXCJdID0gMV0gPSBcIm1pbnRBZGRyZXNzXCI7XG4gIEtleXNbS2V5c1tcImNvbGxlY3Rpb25OYW1lXCJdID0gMl0gPSBcImNvbGxlY3Rpb25OYW1lXCI7XG4gIEtleXNbS2V5c1tcIm5hbWVcIl0gPSAzXSA9IFwibmFtZVwiO1xuICBLZXlzW0tleXNbXCJtZWRpYURhdGFcIl0gPSA0XSA9IFwibWVkaWFEYXRhXCI7XG59KShLZXlzJDIgfHwgKEtleXMkMiA9IHt9KSk7XG5cbmNsYXNzIFNPTE5GVEl0ZW0gZXh0ZW5kcyBiY1VyUmVnaXN0cnkuUmVnaXN0cnlJdGVtIHtcbiAgY29uc3RydWN0b3IoYXJncykge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLmdldFJlZ2lzdHJ5VHlwZSA9ICgpID0+IEV4dGVuZGVkUmVnaXN0cnlUeXBlcy5TT0xfTkZUX0lURU07XG5cbiAgICB0aGlzLmdldE5hbWUgPSAoKSA9PiB0aGlzLm5hbWU7XG5cbiAgICB0aGlzLmdldE1lZGlhRGF0YSA9ICgpID0+IHRoaXMubWVkaWFEYXRhO1xuXG4gICAgdGhpcy5nZXRNaW50QWRkcmVzcyA9ICgpID0+IHRoaXMubWludEFkZHJlc3M7XG5cbiAgICB0aGlzLmdldENvbGxlY3Rpb25OYW1lID0gKCkgPT4gdGhpcy5jb2xsZWN0aW9uTmFtZTtcblxuICAgIHRoaXMudG9EYXRhSXRlbSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG1hcCA9IHt9O1xuICAgICAgbWFwW0tleXMkMi5uYW1lXSA9IHRoaXMubmFtZTtcbiAgICAgIG1hcFtLZXlzJDIubWludEFkZHJlc3NdID0gdGhpcy5taW50QWRkcmVzcztcbiAgICAgIG1hcFtLZXlzJDIuY29sbGVjdGlvbk5hbWVdID0gdGhpcy5jb2xsZWN0aW9uTmFtZTtcbiAgICAgIG1hcFtLZXlzJDIubWVkaWFEYXRhXSA9IHRoaXMubWVkaWFEYXRhO1xuICAgICAgcmV0dXJuIG5ldyBiY1VyUmVnaXN0cnkuRGF0YUl0ZW0obWFwKTtcbiAgICB9O1xuXG4gICAgdGhpcy5uYW1lID0gYXJncy5uYW1lO1xuICAgIHRoaXMubWludEFkZHJlc3MgPSBhcmdzLm1pbnRBZGRyZXNzO1xuICAgIHRoaXMuY29sbGVjdGlvbk5hbWUgPSBhcmdzLmNvbGxlY3Rpb25OYW1lO1xuICAgIHRoaXMubWVkaWFEYXRhID0gYXJncy5tZWRpYURhdGE7IC8vIHJlbW92ZSB0aGUgZGF0YSBwZXJmaXggZm9yIGFuZHJvaWQgdXNhZ2VcbiAgfVxuXG4gIHN0YXRpYyBjb25zdHJ1Y3RFVEhORlRJdGVtKG1pbnRBZGRyZXNzLCBjb2xsZWN0aW9uTmFtZSwgbmFtZSwgbWVkaWFEYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBTT0xORlRJdGVtKHtcbiAgICAgIG1pbnRBZGRyZXNzLFxuICAgICAgY29sbGVjdGlvbk5hbWUsXG4gICAgICBtZWRpYURhdGEsXG4gICAgICBuYW1lXG4gICAgfSk7XG4gIH1cblxufVxuXG5TT0xORlRJdGVtLmZyb21EYXRhSXRlbSA9IGRhdGFJdGVtID0+IHtcbiAgY29uc3QgbWFwID0gZGF0YUl0ZW0uZ2V0RGF0YSgpO1xuICBjb25zdCBuYW1lID0gbWFwW0tleXMkMi5uYW1lXTtcbiAgY29uc3QgbWVkaWFEYXRhID0gbWFwW0tleXMkMi5tZWRpYURhdGFdO1xuICBjb25zdCBtaW50QWRkcmVzcyA9IG1hcFtLZXlzJDIubWludEFkZHJlc3NdO1xuICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IG1hcFtLZXlzJDIuY29sbGVjdGlvbk5hbWVdO1xuICByZXR1cm4gbmV3IFNPTE5GVEl0ZW0oe1xuICAgIG5hbWUsXG4gICAgbWludEFkZHJlc3MsXG4gICAgY29sbGVjdGlvbk5hbWUsXG4gICAgbWVkaWFEYXRhXG4gIH0pO1xufTtcblxuU09MTkZUSXRlbS5mcm9tQ0JPUiA9IF9jYm9yUGF5bG9hZCA9PiB7XG4gIGNvbnN0IGRhdGFJdGVtID0gZGVjb2RlVG9EYXRhSXRlbSQyKF9jYm9yUGF5bG9hZCk7XG4gIHJldHVybiBTT0xORlRJdGVtLmZyb21EYXRhSXRlbShkYXRhSXRlbSk7XG59O1xuXG5iY1VyUmVnaXN0cnkucGF0Y2hUYWdzKE9iamVjdC52YWx1ZXMoRXh0ZW5kZWRSZWdpc3RyeVR5cGVzKS5maWx0ZXIocnQgPT4gISFydC5nZXRUYWcoKSkubWFwKHJ0ID0+IHJ0LmdldFRhZygpKSk7XG5cbk9iamVjdC5rZXlzKGJjVXJSZWdpc3RyeSkuZm9yRWFjaChmdW5jdGlvbiAoaykge1xuICBpZiAoayAhPT0gJ2RlZmF1bHQnKSBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgaywge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYmNVclJlZ2lzdHJ5W2tdO1xuICAgIH1cbiAgfSk7XG59KTtcbmV4cG9ydHMuU09MTkZUSXRlbSA9IFNPTE5GVEl0ZW07XG5leHBvcnRzLlNvbFNpZ25SZXF1ZXN0ID0gU29sU2lnblJlcXVlc3Q7XG5leHBvcnRzLlNvbFNpZ25hdHVyZSA9IFNvbFNpZ25hdHVyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJjLXVyLXJlZ2lzdHJ5LXNvbC5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/bc-ur-registry-sol.cjs.development.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/index.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/index.js ***!
  \***************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./bc-ur-registry-sol.cjs.development.js */ \"(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/bc-ur-registry-sol.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0b25laHErYmMtdXItcmVnaXN0cnktc29sQDAuMy4xL25vZGVfbW9kdWxlcy9Aa2V5c3RvbmVocS9iYy11ci1yZWdpc3RyeS1zb2wvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQ1k7O0FBRVosSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLDZPQUFtRTtBQUNyRSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9Aa2V5c3RvbmVocStiYy11ci1yZWdpc3RyeS1zb2xAMC4zLjEvbm9kZV9tb2R1bGVzL0BrZXlzdG9uZWhxL2JjLXVyLXJlZ2lzdHJ5LXNvbC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuJ3VzZSBzdHJpY3QnXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9iYy11ci1yZWdpc3RyeS1zb2wuY2pzLnByb2R1Y3Rpb24ubWluLmpzJylcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9iYy11ci1yZWdpc3RyeS1zb2wuY2pzLmRldmVsb3BtZW50LmpzJylcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystonehq+bc-ur-registry-sol@0.3.1/node_modules/@keystonehq/bc-ur-registry-sol/dist/index.js\n");

/***/ })

};
;