"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trezor+protobuf@1.2.6_tslib@2.8.1";
exports.ids = ["vendor-chunks/@trezor+protobuf@1.2.6_tslib@2.8.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/decode.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/decode.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decode = void 0;\nexports.messageToJSON = messageToJSON;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js\");\nconst transform = (field, value) => {\n    if ((0, utils_1.isPrimitiveField)(field.type)) {\n        if (field.optional && typeof value === 'undefined') {\n            return null;\n        }\n        if (field.type === 'bytes') {\n            return Buffer.from(value).toString('hex');\n        }\n        if (field.long) {\n            if (Number.isSafeInteger(value.toNumber())) {\n                return value.toNumber();\n            }\n            return value.toString();\n        }\n        return value;\n    }\n    if ('valuesById' in field.resolvedType) {\n        return field.resolvedType.valuesById[value];\n    }\n    if (field.resolvedType.fields) {\n        return messageToJSON(value, field.resolvedType.fields);\n    }\n    throw new Error(`transport: decode: case not handled: ${field}`);\n};\nfunction messageToJSON(MessageParam, fields) {\n    if (!MessageParam) {\n        return {};\n    }\n    const message = tslib_1.__rest(MessageParam, []);\n    const res = {};\n    Object.keys(fields).forEach(key => {\n        const field = fields[key];\n        const value = message[key];\n        if (field.repeated) {\n            res[key] = value.map((v) => transform(field, v));\n        }\n        else {\n            res[key] = transform(field, value);\n        }\n    });\n    return res;\n}\nconst decode = (MessageParam, data) => {\n    const decoded = MessageParam.decode(new Uint8Array(data));\n    return messageToJSON(decoded, decoded.$type.fields);\n};\nexports.decode = decode;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxxQkFBcUI7QUFDckIsZ0JBQWdCLG1CQUFPLENBQUMsc0ZBQU87QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMseUhBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsTUFBTTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvZGVjb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSB2b2lkIDA7XG5leHBvcnRzLm1lc3NhZ2VUb0pTT04gPSBtZXNzYWdlVG9KU09OO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHRyYW5zZm9ybSA9IChmaWVsZCwgdmFsdWUpID0+IHtcbiAgICBpZiAoKDAsIHV0aWxzXzEuaXNQcmltaXRpdmVGaWVsZCkoZmllbGQudHlwZSkpIHtcbiAgICAgICAgaWYgKGZpZWxkLm9wdGlvbmFsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZC50eXBlID09PSAnYnl0ZXMnKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUpLnRvU3RyaW5nKCdoZXgnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZmllbGQubG9uZykge1xuICAgICAgICAgICAgaWYgKE51bWJlci5pc1NhZmVJbnRlZ2VyKHZhbHVlLnRvTnVtYmVyKCkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRvTnVtYmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGlmICgndmFsdWVzQnlJZCcgaW4gZmllbGQucmVzb2x2ZWRUeXBlKSB7XG4gICAgICAgIHJldHVybiBmaWVsZC5yZXNvbHZlZFR5cGUudmFsdWVzQnlJZFt2YWx1ZV07XG4gICAgfVxuICAgIGlmIChmaWVsZC5yZXNvbHZlZFR5cGUuZmllbGRzKSB7XG4gICAgICAgIHJldHVybiBtZXNzYWdlVG9KU09OKHZhbHVlLCBmaWVsZC5yZXNvbHZlZFR5cGUuZmllbGRzKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGB0cmFuc3BvcnQ6IGRlY29kZTogY2FzZSBub3QgaGFuZGxlZDogJHtmaWVsZH1gKTtcbn07XG5mdW5jdGlvbiBtZXNzYWdlVG9KU09OKE1lc3NhZ2VQYXJhbSwgZmllbGRzKSB7XG4gICAgaWYgKCFNZXNzYWdlUGFyYW0pIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlID0gdHNsaWJfMS5fX3Jlc3QoTWVzc2FnZVBhcmFtLCBbXSk7XG4gICAgY29uc3QgcmVzID0ge307XG4gICAgT2JqZWN0LmtleXMoZmllbGRzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2tleV07XG4gICAgICAgIGNvbnN0IHZhbHVlID0gbWVzc2FnZVtrZXldO1xuICAgICAgICBpZiAoZmllbGQucmVwZWF0ZWQpIHtcbiAgICAgICAgICAgIHJlc1trZXldID0gdmFsdWUubWFwKCh2KSA9PiB0cmFuc2Zvcm0oZmllbGQsIHYpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc1trZXldID0gdHJhbnNmb3JtKGZpZWxkLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzO1xufVxuY29uc3QgZGVjb2RlID0gKE1lc3NhZ2VQYXJhbSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRlY29kZWQgPSBNZXNzYWdlUGFyYW0uZGVjb2RlKG5ldyBVaW50OEFycmF5KGRhdGEpKTtcbiAgICByZXR1cm4gbWVzc2FnZVRvSlNPTihkZWNvZGVkLCBkZWNvZGVkLiR0eXBlLmZpZWxkcyk7XG59O1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/encode.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/encode.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encode = void 0;\nexports.patch = patch;\nconst light_1 = __webpack_require__(/*! protobufjs/light */ \"(ssr)/./node_modules/.pnpm/protobufjs@7.4.0/node_modules/protobufjs/light.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js\");\nconst transform = (fieldType, value) => {\n    if (fieldType === 'bytes') {\n        if (typeof value === 'string' && !value)\n            return value;\n        return Buffer.from(value, 'hex');\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n        throw new RangeError('field value is not within safe integer range');\n    }\n    return value;\n};\nfunction patch(Message, payload) {\n    const patched = {};\n    if (!Message.fields) {\n        return patched;\n    }\n    Object.keys(Message.fields).forEach(key => {\n        const field = Message.fields[key];\n        const value = payload[key];\n        if (typeof value === 'undefined') {\n            return;\n        }\n        if ((0, utils_1.isPrimitiveField)(field.type)) {\n            if (field.repeated) {\n                patched[key] = value.map((v) => transform(field.type, v));\n            }\n            else {\n                patched[key] = transform(field.type, value);\n            }\n            return;\n        }\n        if (field.repeated) {\n            const fieldType = Message.lookupTypeOrEnum(field.type);\n            if (fieldType instanceof light_1.Enum) {\n                patched[key] = value;\n            }\n            else {\n                patched[key] = value.map((v) => patch(fieldType, v));\n            }\n        }\n        else if (typeof value === 'object' && value !== null) {\n            const RefMessage = Message.lookupType(field.type);\n            patched[key] = patch(RefMessage, value);\n        }\n        else if (typeof value === 'number') {\n            const RefMessage = Message.lookupEnum(field.type);\n            patched[key] = RefMessage.values[value];\n        }\n        else {\n            patched[key] = value;\n        }\n    });\n    return patched;\n}\nconst encode = (Message, data) => {\n    const payload = patch(Message, data);\n    const message = Message.fromObject(payload);\n    const bytes = Message.encode(message).finish();\n    return Buffer.from(bytes);\n};\nexports.encode = encode;\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvZW5jb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxhQUFhO0FBQ2IsZ0JBQWdCLG1CQUFPLENBQUMsc0dBQWtCO0FBQzFDLGdCQUFnQixtQkFBTyxDQUFDLHlIQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0B0cmV6b3IrcHJvdG9idWZAMS4yLjZfdHNsaWJAMi44LjEvbm9kZV9tb2R1bGVzL0B0cmV6b3IvcHJvdG9idWYvbGliL2VuY29kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW5jb2RlID0gdm9pZCAwO1xuZXhwb3J0cy5wYXRjaCA9IHBhdGNoO1xuY29uc3QgbGlnaHRfMSA9IHJlcXVpcmUoXCJwcm90b2J1ZmpzL2xpZ2h0XCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdHJhbnNmb3JtID0gKGZpZWxkVHlwZSwgdmFsdWUpID0+IHtcbiAgICBpZiAoZmllbGRUeXBlID09PSAnYnl0ZXMnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCAnaGV4Jyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmICFOdW1iZXIuaXNTYWZlSW50ZWdlcih2YWx1ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2ZpZWxkIHZhbHVlIGlzIG5vdCB3aXRoaW4gc2FmZSBpbnRlZ2VyIHJhbmdlJyk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbn07XG5mdW5jdGlvbiBwYXRjaChNZXNzYWdlLCBwYXlsb2FkKSB7XG4gICAgY29uc3QgcGF0Y2hlZCA9IHt9O1xuICAgIGlmICghTWVzc2FnZS5maWVsZHMpIHtcbiAgICAgICAgcmV0dXJuIHBhdGNoZWQ7XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKE1lc3NhZ2UuZmllbGRzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gTWVzc2FnZS5maWVsZHNba2V5XTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBwYXlsb2FkW2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB1dGlsc18xLmlzUHJpbWl0aXZlRmllbGQpKGZpZWxkLnR5cGUpKSB7XG4gICAgICAgICAgICBpZiAoZmllbGQucmVwZWF0ZWQpIHtcbiAgICAgICAgICAgICAgICBwYXRjaGVkW2tleV0gPSB2YWx1ZS5tYXAoKHYpID0+IHRyYW5zZm9ybShmaWVsZC50eXBlLCB2KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXRjaGVkW2tleV0gPSB0cmFuc2Zvcm0oZmllbGQudHlwZSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmaWVsZC5yZXBlYXRlZCkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRUeXBlID0gTWVzc2FnZS5sb29rdXBUeXBlT3JFbnVtKGZpZWxkLnR5cGUpO1xuICAgICAgICAgICAgaWYgKGZpZWxkVHlwZSBpbnN0YW5jZW9mIGxpZ2h0XzEuRW51bSkge1xuICAgICAgICAgICAgICAgIHBhdGNoZWRba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcGF0Y2hlZFtrZXldID0gdmFsdWUubWFwKCh2KSA9PiBwYXRjaChmaWVsZFR5cGUsIHYpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBSZWZNZXNzYWdlID0gTWVzc2FnZS5sb29rdXBUeXBlKGZpZWxkLnR5cGUpO1xuICAgICAgICAgICAgcGF0Y2hlZFtrZXldID0gcGF0Y2goUmVmTWVzc2FnZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGNvbnN0IFJlZk1lc3NhZ2UgPSBNZXNzYWdlLmxvb2t1cEVudW0oZmllbGQudHlwZSk7XG4gICAgICAgICAgICBwYXRjaGVkW2tleV0gPSBSZWZNZXNzYWdlLnZhbHVlc1t2YWx1ZV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwYXRjaGVkW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBwYXRjaGVkO1xufVxuY29uc3QgZW5jb2RlID0gKE1lc3NhZ2UsIGRhdGEpID0+IHtcbiAgICBjb25zdCBwYXlsb2FkID0gcGF0Y2goTWVzc2FnZSwgZGF0YSk7XG4gICAgY29uc3QgbWVzc2FnZSA9IE1lc3NhZ2UuZnJvbU9iamVjdChwYXlsb2FkKTtcbiAgICBjb25zdCBieXRlcyA9IE1lc3NhZ2UuZW5jb2RlKG1lc3NhZ2UpLmZpbmlzaCgpO1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlcyk7XG59O1xuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbmNvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/index.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeviceModelInternal = exports.MessagesSchema = exports.createMessageFromType = exports.createMessageFromName = exports.parseConfigure = exports.Messages = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/decode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./encode */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/encode.js\"), exports);\nexports.Messages = tslib_1.__importStar(__webpack_require__(/*! ./messages */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/types.js\"), exports);\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js\");\nObject.defineProperty(exports, \"parseConfigure\", ({ enumerable: true, get: function () { return utils_1.parseConfigure; } }));\nObject.defineProperty(exports, \"createMessageFromName\", ({ enumerable: true, get: function () { return utils_1.createMessageFromName; } }));\nObject.defineProperty(exports, \"createMessageFromType\", ({ enumerable: true, get: function () { return utils_1.createMessageFromType; } }));\nexports.MessagesSchema = tslib_1.__importStar(__webpack_require__(/*! ./messages-schema */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages-schema.js\"));\nvar messages_schema_1 = __webpack_require__(/*! ./messages-schema */ \"(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages-schema.js\");\nObject.defineProperty(exports, \"DeviceModelInternal\", ({ enumerable: true, get: function () { return messages_schema_1.DeviceModelInternal; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCLEdBQUcsNkJBQTZCLEdBQUcsNkJBQTZCLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCO0FBQ2hLLGdCQUFnQixtQkFBTyxDQUFDLHNGQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFVO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFVO0FBQ3ZDLGdCQUFnQix3QkFBd0IsbUJBQU8sQ0FBQywrSEFBWTtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyx5SEFBUztBQUN0QyxjQUFjLG1CQUFPLENBQUMseUhBQVM7QUFDL0Isa0RBQWlELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzNILHlEQUF3RCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUN6SSx5REFBd0QsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDekksc0JBQXNCLHdCQUF3QixtQkFBTyxDQUFDLDZJQUFtQjtBQUN6RSx3QkFBd0IsbUJBQU8sQ0FBQyw2SUFBbUI7QUFDbkQsdURBQXNELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQy9JIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9pd28tcGxhdGZvcm0vbm9kZV9tb2R1bGVzLy5wbnBtL0B0cmV6b3IrcHJvdG9idWZAMS4yLjZfdHNsaWJAMi44LjEvbm9kZV9tb2R1bGVzL0B0cmV6b3IvcHJvdG9idWYvbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZXZpY2VNb2RlbEludGVybmFsID0gZXhwb3J0cy5NZXNzYWdlc1NjaGVtYSA9IGV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gZXhwb3J0cy5jcmVhdGVNZXNzYWdlRnJvbU5hbWUgPSBleHBvcnRzLnBhcnNlQ29uZmlndXJlID0gZXhwb3J0cy5NZXNzYWdlcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWNvZGVcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW5jb2RlXCIpLCBleHBvcnRzKTtcbmV4cG9ydHMuTWVzc2FnZXMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlc1wiKSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VDb25maWd1cmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEucGFyc2VDb25maWd1cmU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVNZXNzYWdlRnJvbU5hbWVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuY3JlYXRlTWVzc2FnZUZyb21OYW1lOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlTWVzc2FnZUZyb21UeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmNyZWF0ZU1lc3NhZ2VGcm9tVHlwZTsgfSB9KTtcbmV4cG9ydHMuTWVzc2FnZXNTY2hlbWEgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlcy1zY2hlbWFcIikpO1xudmFyIG1lc3NhZ2VzX3NjaGVtYV8xID0gcmVxdWlyZShcIi4vbWVzc2FnZXMtc2NoZW1hXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGV2aWNlTW9kZWxJbnRlcm5hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbWVzc2FnZXNfc2NoZW1hXzEuRGV2aWNlTW9kZWxJbnRlcm5hbDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages-schema.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages-schema.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TxRequest = exports.TxRequestSerializedType = exports.TxRequestDetailsType = exports.RequestType = exports.EnumEnum_RequestType = exports.Enum_RequestType = exports.SignTx = exports.CoinJoinRequest = exports.VerifyMessage = exports.MessageSignature = exports.SignMessage = exports.OwnershipId = exports.GetOwnershipId = exports.Address = exports.GetAddress = exports.PublicKey = exports.GetPublicKey = exports.MultisigRedeemScriptType = exports.HDNodePathType = exports.HDNodeType = exports.EnumAmountUnit = exports.AmountUnit = exports.EnumDecredStakingSpendType = exports.DecredStakingSpendType = exports.OutputScriptType = exports.EnumEnum_OutputScriptType = exports.Enum_OutputScriptType = exports.InputScriptType = exports.EnumEnum_InputScriptType = exports.Enum_InputScriptType = exports.BinanceSignedTx = exports.BinanceCancelMsg = exports.BinanceOrderMsg = exports.EnumBinanceTimeInForce = exports.BinanceTimeInForce = exports.EnumBinanceOrderSide = exports.BinanceOrderSide = exports.EnumBinanceOrderType = exports.BinanceOrderType = exports.BinanceTransferMsg = exports.BinanceInputOutput = exports.BinanceCoin = exports.BinanceTxRequest = exports.BinanceSignTx = exports.BinancePublicKey = exports.BinanceGetPublicKey = exports.BinanceAddress = exports.BinanceGetAddress = exports.EnumDeviceModelInternal = exports.DeviceModelInternal = void 0;\nexports.CardanoPoolRelayType = exports.EnumCardanoDRepType = exports.CardanoDRepType = exports.EnumCardanoCertificateType = exports.CardanoCertificateType = exports.EnumCardanoTxOutputSerializationFormat = exports.CardanoTxOutputSerializationFormat = exports.EnumCardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.EnumCardanoNativeScriptType = exports.CardanoNativeScriptType = exports.EnumCardanoAddressType = exports.CardanoAddressType = exports.EnumCardanoDerivationType = exports.CardanoDerivationType = exports.ProdTestT1 = exports.FirmwareUpload = exports.FirmwareRequest = exports.FirmwareErase = exports.AuthorizeCoinJoin = exports.OwnershipProof = exports.GetOwnershipProof = exports.TxAckPrevExtraData = exports.TxAckPrevExtraDataWrapper = exports.TxAckPrevOutput = exports.TxAckPrevOutputWrapper = exports.TxAckPrevInput = exports.TxAckPrevInputWrapper = exports.TxAckPrevMeta = exports.TxAckOutput = exports.TxAckOutputWrapper = exports.TxAckInput = exports.TxAckInputWrapper = exports.TxAck = exports.TxAckResponse = exports.TxAckPaymentRequest = exports.PaymentRequestMemo = exports.CoinPurchaseMemo = exports.RefundMemo = exports.TextMemo = exports.PrevOutput = exports.PrevInput = exports.PrevTx = exports.TxOutput = exports.TxOutputType = exports.ChangeOutputScriptType = exports.TxOutputBinType = exports.TxInput = exports.TxInputType = exports.InternalInputScriptType = void 0;\nexports.Failure = exports.EnumFailureType = exports.FailureType = exports.Success = exports.CardanoSignTxFinished = exports.CardanoTxBodyHash = exports.CardanoTxHostAck = exports.CardanoTxWitnessResponse = exports.CardanoTxWitnessRequest = exports.CardanoTxAuxiliaryDataSupplement = exports.CardanoTxItemAck = exports.CardanoTxReferenceInput = exports.CardanoTxRequiredSigner = exports.CardanoTxCollateralInput = exports.CardanoTxMint = exports.CardanoTxAuxiliaryData = exports.CardanoCVoteRegistrationParametersType = exports.CardanoCVoteRegistrationDelegation = exports.CardanoTxWithdrawal = exports.CardanoTxCertificate = exports.CardanoDRep = exports.CardanoPoolParametersType = exports.CardanoPoolMetadataType = exports.CardanoPoolRelayParameters = exports.CardanoPoolOwner = exports.CardanoTxReferenceScriptChunk = exports.CardanoTxInlineDatumChunk = exports.CardanoToken = exports.CardanoAssetGroup = exports.CardanoTxOutput = exports.CardanoTxInput = exports.CardanoSignTxInit = exports.CardanoPublicKey = exports.CardanoGetPublicKey = exports.CardanoAddress = exports.CardanoGetAddress = exports.CardanoAddressParametersType = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoBlockchainPointerType = exports.EnumCardanoTxWitnessType = exports.CardanoTxWitnessType = exports.EnumCardanoTxSigningMode = exports.CardanoTxSigningMode = exports.EnumCardanoCVoteRegistrationFormat = exports.CardanoCVoteRegistrationFormat = exports.EnumCardanoTxAuxiliaryDataSupplementType = exports.CardanoTxAuxiliaryDataSupplementType = exports.EnumCardanoPoolRelayType = void 0;\nexports.EosActionUpdateAuth = exports.EosActionVoteProducer = exports.EosActionSellRam = exports.EosActionBuyRamBytes = exports.EosActionBuyRam = exports.EosActionRefund = exports.EosActionUndelegate = exports.EosActionDelegate = exports.EosActionTransfer = exports.EosActionCommon = exports.EosAuthorization = exports.EosAuthorizationWait = exports.EosAuthorizationAccount = exports.EosAuthorizationKey = exports.EosPermissionLevel = exports.EosAsset = exports.EosTxActionRequest = exports.EosSignTx = exports.EosTxHeader = exports.EosPublicKey = exports.EosGetPublicKey = exports.DebugLinkOptigaSetSecMax = exports.DebugLinkResetDebugEvents = exports.EnumDebugWaitType = exports.DebugWaitType = exports.EnumDebugPhysicalButton = exports.DebugPhysicalButton = exports.EnumDebugButton = exports.DebugButton = exports.ECDHSessionKey = exports.GetECDHSessionKey = exports.SignedIdentity = exports.SignIdentity = exports.IdentityType = exports.CipheredKeyValue = exports.CipherKeyValue = exports.Deprecated_PassphraseStateAck = exports.Deprecated_PassphraseStateRequest = exports.PassphraseAck = exports.PassphraseRequest = exports.PinMatrixAck = exports.PinMatrixRequest = exports.PinMatrixRequestType = exports.EnumEnum_PinMatrixRequestType = exports.Enum_PinMatrixRequestType = exports.ButtonAck = exports.ButtonRequest = exports.ButtonRequestType = exports.EnumEnum_ButtonRequestType = exports.Enum_ButtonRequestType = void 0;\nexports.Enum_BackupAvailability = exports.GetFeatures = exports.Initialize = exports.HomescreenFormat = exports.EnumEnum_HomescreenFormat = exports.Enum_HomescreenFormat = exports.DisplayRotation = exports.EnumEnum_DisplayRotation = exports.Enum_DisplayRotation = exports.SafetyCheckLevel = exports.EnumEnum_SafetyCheckLevel = exports.Enum_SafetyCheckLevel = exports.BackupType = exports.EnumEnum_BackupType = exports.Enum_BackupType = exports.EthereumTypedDataSignature = exports.EthereumSignTypedHash = exports.EthereumVerifyMessage = exports.EthereumMessageSignature = exports.EthereumSignMessage = exports.EthereumTxAck = exports.EthereumTxRequest = exports.EthereumSignTxEIP1559 = exports.EthereumAccessList = exports.EthereumSignTx = exports.EthereumAddress = exports.EthereumGetAddress = exports.EthereumPublicKey = exports.EthereumGetPublicKey = exports.EthereumTypedDataValueAck = exports.EthereumTypedDataValueRequest = exports.EthereumTypedDataStructAck = exports.EthereumStructMember = exports.EthereumFieldType = exports.EnumEthereumDataType = exports.EthereumDataType = exports.EthereumTypedDataStructRequest = exports.EthereumSignTypedData = exports.EthereumDefinitions = exports.EthereumTokenInfo = exports.EthereumNetworkInfo = exports.EnumEthereumDefinitionType = exports.EthereumDefinitionType = exports.EosSignedTx = exports.EosTxActionAck = exports.EosActionUnknown = exports.EosActionNewAccount = exports.EosActionUnlinkAuth = exports.EosActionLinkAuth = exports.EosActionDeleteAuth = void 0;\nexports.GetNextU2FCounter = exports.SetU2FCounter = exports.WordAck = exports.WordRequest = exports.WordRequestType = exports.EnumEnum_WordRequestType = exports.Enum_WordRequestType = exports.EntropyAck = exports.EntropyRequest = exports.BackupDevice = exports.Slip39Group = exports.ResetDevice = exports.LoadDevice = exports.WipeDevice = exports.AuthenticityProof = exports.AuthenticateDevice = exports.FirmwareHash = exports.GetFirmwareHash = exports.Entropy = exports.GetEntropy = exports.Cancel = exports.Ping = exports.SdProtect = exports.EnumSdProtectOperationType = exports.SdProtectOperationType = exports.ChangeWipeCode = exports.ChangePin = exports.ApplyFlags = exports.TranslationDataAck = exports.TranslationDataRequest = exports.ChangeLanguage = exports.ApplySettings = exports.EndSession = exports.SetBusy = exports.LockDevice = exports.Features = exports.RecoveryDevice = exports.RecoveryType = exports.EnumEnum_RecoveryType = exports.Enum_RecoveryType = exports.EnumRecoveryDeviceInputMethod = exports.RecoveryDeviceInputMethod = exports.Capability = exports.EnumEnum_Capability = exports.Enum_Capability = exports.RecoveryStatus = exports.EnumEnum_RecoveryStatus = exports.Enum_RecoveryStatus = exports.BackupAvailability = exports.EnumEnum_BackupAvailability = void 0;\nexports.SolanaSignTx = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaAddress = exports.SolanaGetAddress = exports.SolanaPublicKey = exports.SolanaGetPublicKey = exports.RippleSignedTx = exports.RippleSignTx = exports.RipplePayment = exports.RippleAddress = exports.RippleGetAddress = exports.NEMDecryptedMessage = exports.NEMDecryptMessage = exports.NEMSignedTx = exports.NEMSignTx = exports.NEMImportanceTransfer = exports.EnumNEMImportanceTransferMode = exports.NEMImportanceTransferMode = exports.NEMAggregateModification = exports.NEMCosignatoryModification = exports.EnumNEMModificationType = exports.NEMModificationType = exports.NEMMosaicSupplyChange = exports.EnumNEMSupplyChangeType = exports.NEMSupplyChangeType = exports.NEMMosaicCreation = exports.NEMMosaicDefinition = exports.EnumNEMMosaicLevy = exports.NEMMosaicLevy = exports.NEMProvisionNamespace = exports.NEMTransfer = exports.NEMMosaic = exports.NEMTransactionCommon = exports.NEMAddress = exports.NEMGetAddress = exports.SetBrightness = exports.UnlockBootloader = exports.ShowDeviceTutorial = exports.UnlockedPathRequest = exports.UnlockPath = exports.Nonce = exports.GetNonce = exports.RebootToBootloader = exports.EnumBootCommand = exports.BootCommand = exports.CancelAuthorization = exports.PreauthorizedRequest = exports.DoPreauthorized = exports.NextU2FCounter = void 0;\nexports.MessageType = exports.TezosSignedTx = exports.TezosSignTx = exports.TezosBallotOp = exports.EnumTezosBallotType = exports.TezosBallotType = exports.TezosProposalOp = exports.TezosDelegationOp = exports.TezosOriginationOp = exports.TezosTransactionOp = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOp = exports.TezosContractID = exports.EnumTezosContractType = exports.TezosContractType = exports.TezosPublicKey = exports.TezosGetPublicKey = exports.TezosAddress = exports.TezosGetAddress = exports.StellarSignedTx = exports.StellarClaimClaimableBalanceOp = exports.StellarBumpSequenceOp = exports.StellarManageDataOp = exports.StellarAccountMergeOp = exports.StellarAllowTrustOp = exports.StellarChangeTrustOp = exports.StellarSetOptionsOp = exports.EnumStellarSignerType = exports.StellarSignerType = exports.StellarCreatePassiveSellOfferOp = exports.StellarManageBuyOfferOp = exports.StellarManageSellOfferOp = exports.StellarPathPaymentStrictSendOp = exports.StellarPathPaymentStrictReceiveOp = exports.StellarCreateAccountOp = exports.StellarPaymentOp = exports.StellarTxOpRequest = exports.StellarSignTx = exports.EnumStellarMemoType = exports.StellarMemoType = exports.StellarAddress = exports.StellarGetAddress = exports.StellarAsset = exports.EnumStellarAssetType = exports.StellarAssetType = exports.SolanaTxSignature = void 0;\nconst schema_utils_1 = __webpack_require__(/*! @trezor/schema-utils */ \"(ssr)/./node_modules/.pnpm/@trezor+schema-utils@1.2.3_tslib@2.8.1/node_modules/@trezor/schema-utils/lib/index.js\");\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n    DeviceModelInternal[\"T3B1\"] = \"T3B1\";\n    DeviceModelInternal[\"T3T1\"] = \"T3T1\";\n    DeviceModelInternal[\"T3W1\"] = \"T3W1\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nexports.EnumDeviceModelInternal = schema_utils_1.Type.Enum(DeviceModelInternal);\nexports.BinanceGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceGetAddress' });\nexports.BinanceAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'BinanceAddress' });\nexports.BinanceGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceGetPublicKey' });\nexports.BinancePublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'BinancePublicKey' });\nexports.BinanceSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    msg_count: schema_utils_1.Type.Number(),\n    account_number: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Number(),\n    source: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceSignTx' });\nexports.BinanceTxRequest = schema_utils_1.Type.Object({}, { $id: 'BinanceTxRequest' });\nexports.BinanceCoin = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    denom: schema_utils_1.Type.String(),\n}, { $id: 'BinanceCoin' });\nexports.BinanceInputOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    coins: schema_utils_1.Type.Array(exports.BinanceCoin),\n}, { $id: 'BinanceInputOutput' });\nexports.BinanceTransferMsg = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    outputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceTransferMsg' });\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nexports.EnumBinanceOrderType = schema_utils_1.Type.Enum(BinanceOrderType);\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nexports.EnumBinanceOrderSide = schema_utils_1.Type.Enum(BinanceOrderSide);\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nexports.EnumBinanceTimeInForce = schema_utils_1.Type.Enum(BinanceTimeInForce);\nexports.BinanceOrderMsg = schema_utils_1.Type.Object({\n    id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ordertype: exports.EnumBinanceOrderType,\n    price: schema_utils_1.Type.Number(),\n    quantity: schema_utils_1.Type.Number(),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    side: exports.EnumBinanceOrderSide,\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    timeinforce: exports.EnumBinanceTimeInForce,\n}, { $id: 'BinanceOrderMsg' });\nexports.BinanceCancelMsg = schema_utils_1.Type.Object({\n    refid: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'BinanceCancelMsg' });\nexports.BinanceSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'BinanceSignedTx' });\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nexports.EnumEnum_InputScriptType = schema_utils_1.Type.Enum(Enum_InputScriptType);\nexports.InputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_InputScriptType, { $id: 'InputScriptType' });\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nexports.EnumEnum_OutputScriptType = schema_utils_1.Type.Enum(Enum_OutputScriptType);\nexports.OutputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_OutputScriptType, { $id: 'OutputScriptType' });\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nexports.EnumDecredStakingSpendType = schema_utils_1.Type.Enum(DecredStakingSpendType);\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nexports.EnumAmountUnit = schema_utils_1.Type.Enum(AmountUnit);\nexports.HDNodeType = schema_utils_1.Type.Object({\n    depth: schema_utils_1.Type.Number(),\n    fingerprint: schema_utils_1.Type.Number(),\n    child_num: schema_utils_1.Type.Number(),\n    chain_code: schema_utils_1.Type.String(),\n    private_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'HDNodeType' });\nexports.HDNodePathType = schema_utils_1.Type.Object({\n    node: schema_utils_1.Type.Union([exports.HDNodeType, schema_utils_1.Type.String()]),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'HDNodePathType' });\nexports.MultisigRedeemScriptType = schema_utils_1.Type.Object({\n    pubkeys: schema_utils_1.Type.Array(exports.HDNodePathType),\n    signatures: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    m: schema_utils_1.Type.Number(),\n    nodes: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.HDNodeType)),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n}, { $id: 'MultisigRedeemScriptType' });\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'GetPublicKey' });\nexports.PublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n    root_fingerprint: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    descriptor: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'PublicKey' });\nexports.GetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'GetAddress' });\nexports.Address = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Address' });\nexports.GetOwnershipId = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n}, { $id: 'GetOwnershipId' });\nexports.OwnershipId = schema_utils_1.Type.Object({\n    ownership_id: schema_utils_1.Type.String(),\n}, { $id: 'OwnershipId' });\nexports.SignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SignMessage' });\nexports.MessageSignature = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'MessageSignature' });\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'VerifyMessage' });\nexports.CoinJoinRequest = schema_utils_1.Type.Object({\n    fee_rate: schema_utils_1.Type.Number(),\n    no_fee_threshold: schema_utils_1.Type.Number(),\n    min_registrable_amount: schema_utils_1.Type.Number(),\n    mask_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CoinJoinRequest' });\nexports.SignTx = schema_utils_1.Type.Object({\n    outputs_count: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    overwintered: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n    decred_staking_ticket: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    serialize: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coinjoin_request: schema_utils_1.Type.Optional(exports.CoinJoinRequest),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SignTx' });\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nexports.EnumEnum_RequestType = schema_utils_1.Type.Enum(Enum_RequestType);\nexports.RequestType = schema_utils_1.Type.KeyOfEnum(Enum_RequestType, { $id: 'RequestType' });\nexports.TxRequestDetailsType = schema_utils_1.Type.Object({\n    request_index: schema_utils_1.Type.Number(),\n    tx_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    extra_data_offset: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'TxRequestDetailsType' });\nexports.TxRequestSerializedType = schema_utils_1.Type.Object({\n    signature_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    serialized_tx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'TxRequestSerializedType' });\nexports.TxRequest = schema_utils_1.Type.Object({\n    request_type: exports.RequestType,\n    details: exports.TxRequestDetailsType,\n    serialized: schema_utils_1.Type.Optional(exports.TxRequestSerializedType),\n}, { $id: 'TxRequest' });\nexports.InternalInputScriptType = schema_utils_1.Type.Exclude(exports.InputScriptType, schema_utils_1.Type.Literal('EXTERNAL'), {\n    $id: 'InternalInputScriptType',\n});\nconst CommonTxInputType = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    decred_staking_spend: schema_utils_1.Type.Optional(exports.EnumDecredStakingSpendType),\n    script_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    coinjoin_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    script_sig: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    witness: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ownership_proof: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CommonTxInputType' });\nexports.TxInputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n            script_type: schema_utils_1.Type.Optional(exports.InternalInputScriptType),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n            script_type: schema_utils_1.Type.Literal('EXTERNAL'),\n            script_pubkey: schema_utils_1.Type.String(),\n        }),\n    ]),\n], { $id: 'TxInputType' });\nexports.TxInput = (0, schema_utils_1.CloneType)(exports.TxInputType, { $id: 'TxInput' });\nexports.TxOutputBinType = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'TxOutputBinType' });\nexports.ChangeOutputScriptType = schema_utils_1.Type.Exclude(exports.OutputScriptType, schema_utils_1.Type.Literal('PAYTOOPRETURN'), { $id: 'ChangeOutputScriptType' });\nexports.TxOutputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Literal('PAYTOADDRESS'),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        amount: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('0'), schema_utils_1.Type.Literal(0)]),\n        op_return_data: schema_utils_1.Type.String(),\n        script_type: schema_utils_1.Type.Literal('PAYTOOPRETURN'),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n], { $id: 'TxOutputType' });\nexports.TxOutput = (0, schema_utils_1.CloneType)(exports.TxOutputType, { $id: 'TxOutput' });\nexports.PrevTx = schema_utils_1.Type.Object({\n    version: schema_utils_1.Type.Number(),\n    lock_time: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevTx' });\nexports.PrevInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    script_sig: schema_utils_1.Type.String(),\n    sequence: schema_utils_1.Type.Number(),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevInput' });\nexports.PrevOutput = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevOutput' });\nexports.TextMemo = schema_utils_1.Type.Object({\n    text: schema_utils_1.Type.String(),\n}, { $id: 'TextMemo' });\nexports.RefundMemo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n}, { $id: 'RefundMemo' });\nexports.CoinPurchaseMemo = schema_utils_1.Type.Object({\n    coin_type: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n}, { $id: 'CoinPurchaseMemo' });\nexports.PaymentRequestMemo = schema_utils_1.Type.Object({\n    text_memo: schema_utils_1.Type.Optional(exports.TextMemo),\n    refund_memo: schema_utils_1.Type.Optional(exports.RefundMemo),\n    coin_purchase_memo: schema_utils_1.Type.Optional(exports.CoinPurchaseMemo),\n}, { $id: 'PaymentRequestMemo' });\nexports.TxAckPaymentRequest = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    recipient_name: schema_utils_1.Type.String(),\n    memos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.PaymentRequestMemo)),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'TxAckPaymentRequest' });\nexports.TxAckResponse = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        inputs: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.TxInputType, exports.PrevInput])),\n    }),\n    schema_utils_1.Type.Object({\n        bin_outputs: schema_utils_1.Type.Array(exports.TxOutputBinType),\n    }),\n    schema_utils_1.Type.Object({\n        outputs: schema_utils_1.Type.Array(exports.TxOutputType),\n    }),\n    schema_utils_1.Type.Object({\n        extra_data: schema_utils_1.Type.String(),\n    }),\n    schema_utils_1.Type.Object({\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        inputs_cnt: schema_utils_1.Type.Number(),\n        outputs_cnt: schema_utils_1.Type.Number(),\n        extra_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n], { $id: 'TxAckResponse' });\nexports.TxAck = schema_utils_1.Type.Object({\n    tx: exports.TxAckResponse,\n}, { $id: 'TxAck' });\nexports.TxAckInputWrapper = schema_utils_1.Type.Object({\n    input: exports.TxInput,\n}, { $id: 'TxAckInputWrapper' });\nexports.TxAckInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckInputWrapper,\n}, { $id: 'TxAckInput' });\nexports.TxAckOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.TxOutput,\n}, { $id: 'TxAckOutputWrapper' });\nexports.TxAckOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckOutputWrapper,\n}, { $id: 'TxAckOutput' });\nexports.TxAckPrevMeta = schema_utils_1.Type.Object({\n    tx: exports.PrevTx,\n}, { $id: 'TxAckPrevMeta' });\nexports.TxAckPrevInputWrapper = schema_utils_1.Type.Object({\n    input: exports.PrevInput,\n}, { $id: 'TxAckPrevInputWrapper' });\nexports.TxAckPrevInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevInputWrapper,\n}, { $id: 'TxAckPrevInput' });\nexports.TxAckPrevOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.PrevOutput,\n}, { $id: 'TxAckPrevOutputWrapper' });\nexports.TxAckPrevOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevOutputWrapper,\n}, { $id: 'TxAckPrevOutput' });\nexports.TxAckPrevExtraDataWrapper = schema_utils_1.Type.Object({\n    extra_data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'TxAckPrevExtraDataWrapper' });\nexports.TxAckPrevExtraData = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevExtraDataWrapper,\n}, { $id: 'TxAckPrevExtraData' });\nexports.GetOwnershipProof = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    user_confirmation: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ownership_ids: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.String())),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetOwnershipProof' });\nexports.OwnershipProof = schema_utils_1.Type.Object({\n    ownership_proof: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'OwnershipProof' });\nexports.AuthorizeCoinJoin = schema_utils_1.Type.Object({\n    coordinator: schema_utils_1.Type.String(),\n    max_rounds: schema_utils_1.Type.Number(),\n    max_coordinator_fee_rate: schema_utils_1.Type.Number(),\n    max_fee_per_kvbyte: schema_utils_1.Type.Number(),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n}, { $id: 'AuthorizeCoinJoin' });\nexports.FirmwareErase = schema_utils_1.Type.Object({\n    length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'FirmwareErase' });\nexports.FirmwareRequest = schema_utils_1.Type.Object({\n    offset: schema_utils_1.Type.Number(),\n    length: schema_utils_1.Type.Number(),\n}, { $id: 'FirmwareRequest' });\nexports.FirmwareUpload = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.ArrayBuffer()]),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'FirmwareUpload' });\nexports.ProdTestT1 = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ProdTestT1' });\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nexports.EnumCardanoDerivationType = schema_utils_1.Type.Enum(CardanoDerivationType);\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nexports.EnumCardanoAddressType = schema_utils_1.Type.Enum(CardanoAddressType);\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nexports.EnumCardanoNativeScriptType = schema_utils_1.Type.Enum(CardanoNativeScriptType);\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nexports.EnumCardanoNativeScriptHashDisplayFormat = schema_utils_1.Type.Enum(CardanoNativeScriptHashDisplayFormat);\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nexports.EnumCardanoTxOutputSerializationFormat = schema_utils_1.Type.Enum(CardanoTxOutputSerializationFormat);\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION_CONWAY\"] = 7] = \"STAKE_REGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION_CONWAY\"] = 8] = \"STAKE_DEREGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"VOTE_DELEGATION\"] = 9] = \"VOTE_DELEGATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nexports.EnumCardanoCertificateType = schema_utils_1.Type.Enum(CardanoCertificateType);\nvar CardanoDRepType;\n(function (CardanoDRepType) {\n    CardanoDRepType[CardanoDRepType[\"KEY_HASH\"] = 0] = \"KEY_HASH\";\n    CardanoDRepType[CardanoDRepType[\"SCRIPT_HASH\"] = 1] = \"SCRIPT_HASH\";\n    CardanoDRepType[CardanoDRepType[\"ABSTAIN\"] = 2] = \"ABSTAIN\";\n    CardanoDRepType[CardanoDRepType[\"NO_CONFIDENCE\"] = 3] = \"NO_CONFIDENCE\";\n})(CardanoDRepType || (exports.CardanoDRepType = CardanoDRepType = {}));\nexports.EnumCardanoDRepType = schema_utils_1.Type.Enum(CardanoDRepType);\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nexports.EnumCardanoPoolRelayType = schema_utils_1.Type.Enum(CardanoPoolRelayType);\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nexports.EnumCardanoTxAuxiliaryDataSupplementType = schema_utils_1.Type.Enum(CardanoTxAuxiliaryDataSupplementType);\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nexports.EnumCardanoCVoteRegistrationFormat = schema_utils_1.Type.Enum(CardanoCVoteRegistrationFormat);\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nexports.EnumCardanoTxSigningMode = schema_utils_1.Type.Enum(CardanoTxSigningMode);\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nexports.EnumCardanoTxWitnessType = schema_utils_1.Type.Enum(CardanoTxWitnessType);\nexports.CardanoBlockchainPointerType = schema_utils_1.Type.Object({\n    block_index: schema_utils_1.Type.Number(),\n    tx_index: schema_utils_1.Type.Number(),\n    certificate_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoBlockchainPointerType' });\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: exports.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    required_signatures_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalid_before: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    invalid_hereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n}), { $id: 'CardanoNativeScript' });\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    display_format: exports.EnumCardanoNativeScriptHashDisplayFormat,\n    derivation_type: exports.EnumCardanoDerivationType,\n}, { $id: 'CardanoGetNativeScriptHash' });\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    script_hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoNativeScriptHash' });\nexports.CardanoAddressParametersType = schema_utils_1.Type.Object({\n    address_type: exports.EnumCardanoAddressType,\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    address_n_staking: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificate_pointer: schema_utils_1.Type.Optional(exports.CardanoBlockchainPointerType),\n    script_payment_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_staking_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoAddressParametersType' });\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    address_parameters: exports.CardanoAddressParametersType,\n    derivation_type: exports.EnumCardanoDerivationType,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'CardanoGetAddress' });\nexports.CardanoAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'CardanoAddress' });\nexports.CardanoGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivation_type: exports.EnumCardanoDerivationType,\n}, { $id: 'CardanoGetPublicKey' });\nexports.CardanoPublicKey = schema_utils_1.Type.Object({\n    xpub: schema_utils_1.Type.String(),\n    node: exports.HDNodeType,\n}, { $id: 'CardanoPublicKey' });\nexports.CardanoSignTxInit = schema_utils_1.Type.Object({\n    signing_mode: exports.EnumCardanoTxSigningMode,\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates_count: schema_utils_1.Type.Number(),\n    withdrawals_count: schema_utils_1.Type.Number(),\n    has_auxiliary_data: schema_utils_1.Type.Boolean(),\n    validity_interval_start: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    witness_requests_count: schema_utils_1.Type.Number(),\n    minting_asset_groups_count: schema_utils_1.Type.Number(),\n    derivation_type: exports.EnumCardanoDerivationType,\n    include_network_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    script_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateral_inputs_count: schema_utils_1.Type.Number(),\n    required_signers_count: schema_utils_1.Type.Number(),\n    has_collateral_return: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    total_collateral: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    reference_inputs_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    tag_cbor_sets: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'CardanoSignTxInit' });\nexports.CardanoTxInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxInput' });\nexports.CardanoTxOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    amount: schema_utils_1.Type.Uint(),\n    asset_groups_count: schema_utils_1.Type.Number(),\n    datum_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoTxOutputSerializationFormat),\n    inline_datum_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    reference_script_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoTxOutput' });\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policy_id: schema_utils_1.Type.String(),\n    tokens_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoAssetGroup' });\nexports.CardanoToken = schema_utils_1.Type.Object({\n    asset_name_bytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    mint_amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint({ allowNegative: true })),\n}, { $id: 'CardanoToken' });\nexports.CardanoTxInlineDatumChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxInlineDatumChunk' });\nexports.CardanoTxReferenceScriptChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxReferenceScriptChunk' });\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    staking_key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoPoolOwner' });\nexports.CardanoPoolRelayParameters = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoPoolRelayType,\n    ipv4_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoPoolRelayParameters' });\nexports.CardanoPoolMetadataType = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoPoolMetadataType' });\nexports.CardanoPoolParametersType = schema_utils_1.Type.Object({\n    pool_id: schema_utils_1.Type.String(),\n    vrf_key_hash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.Uint(),\n    cost: schema_utils_1.Type.Uint(),\n    margin_numerator: schema_utils_1.Type.Uint(),\n    margin_denominator: schema_utils_1.Type.Uint(),\n    reward_account: schema_utils_1.Type.String(),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadataType),\n    owners_count: schema_utils_1.Type.Number(),\n    relays_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoPoolParametersType' });\nexports.CardanoDRep = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoDRepType,\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoDRep' });\nexports.CardanoTxCertificate = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    pool_parameters: schema_utils_1.Type.Optional(exports.CardanoPoolParametersType),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    deposit: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    drep: schema_utils_1.Type.Optional(exports.CardanoDRep),\n}, { $id: 'CardanoTxCertificate' });\nexports.CardanoTxWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    amount: schema_utils_1.Type.Uint(),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxWithdrawal' });\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Uint(),\n}, { $id: 'CardanoCVoteRegistrationDelegation' });\nexports.CardanoCVoteRegistrationParametersType = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    staking_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    payment_address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    nonce: schema_utils_1.Type.Uint(),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    voting_purpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    payment_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoCVoteRegistrationParametersType' });\nexports.CardanoTxAuxiliaryData = schema_utils_1.Type.Object({\n    cvote_registration_parameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParametersType),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxAuxiliaryData' });\nexports.CardanoTxMint = schema_utils_1.Type.Object({\n    asset_groups_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxMint' });\nexports.CardanoTxCollateralInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxCollateralInput' });\nexports.CardanoTxRequiredSigner = schema_utils_1.Type.Object({\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n}, { $id: 'CardanoTxRequiredSigner' });\nexports.CardanoTxReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxReferenceInput' });\nexports.CardanoTxItemAck = schema_utils_1.Type.Object({}, { $id: 'CardanoTxItemAck' });\nexports.CardanoTxAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliary_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cvote_registration_signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxAuxiliaryDataSupplement' });\nexports.CardanoTxWitnessRequest = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoTxWitnessRequest' });\nexports.CardanoTxWitnessResponse = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxWitnessType,\n    pub_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chain_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxWitnessResponse' });\nexports.CardanoTxHostAck = schema_utils_1.Type.Object({}, { $id: 'CardanoTxHostAck' });\nexports.CardanoTxBodyHash = schema_utils_1.Type.Object({\n    tx_hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxBodyHash' });\nexports.CardanoSignTxFinished = schema_utils_1.Type.Object({}, { $id: 'CardanoSignTxFinished' });\nexports.Success = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.String(),\n}, { $id: 'Success' });\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nexports.EnumFailureType = schema_utils_1.Type.Enum(FailureType);\nexports.Failure = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.EnumFailureType),\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Failure' });\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nexports.EnumEnum_ButtonRequestType = schema_utils_1.Type.Enum(Enum_ButtonRequestType);\nexports.ButtonRequestType = schema_utils_1.Type.KeyOfEnum(Enum_ButtonRequestType, {\n    $id: 'ButtonRequestType',\n});\nexports.ButtonRequest = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.ButtonRequestType),\n    pages: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ButtonRequest' });\nexports.ButtonAck = schema_utils_1.Type.Object({}, { $id: 'ButtonAck' });\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nexports.EnumEnum_PinMatrixRequestType = schema_utils_1.Type.Enum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequestType = schema_utils_1.Type.KeyOfEnum(Enum_PinMatrixRequestType, {\n    $id: 'PinMatrixRequestType',\n});\nexports.PinMatrixRequest = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(exports.PinMatrixRequestType),\n}, { $id: 'PinMatrixRequest' });\nexports.PinMatrixAck = schema_utils_1.Type.Object({\n    pin: schema_utils_1.Type.String(),\n}, { $id: 'PinMatrixAck' });\nexports.PassphraseRequest = schema_utils_1.Type.Object({\n    _on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'PassphraseRequest' });\nexports.PassphraseAck = schema_utils_1.Type.Object({\n    passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'PassphraseAck' });\nexports.Deprecated_PassphraseStateRequest = schema_utils_1.Type.Object({\n    state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Deprecated_PassphraseStateRequest' });\nexports.Deprecated_PassphraseStateAck = schema_utils_1.Type.Object({}, { $id: 'Deprecated_PassphraseStateAck' });\nexports.CipherKeyValue = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_decrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    iv: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CipherKeyValue' });\nexports.CipheredKeyValue = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n}, { $id: 'CipheredKeyValue' });\nexports.IdentityType = schema_utils_1.Type.Object({\n    proto: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    user: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'IdentityType' });\nexports.SignIdentity = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    challenge_hidden: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    challenge_visual: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'SignIdentity' });\nexports.SignedIdentity = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'SignedIdentity' });\nexports.GetECDHSessionKey = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    peer_public_key: schema_utils_1.Type.String(),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetECDHSessionKey' });\nexports.ECDHSessionKey = schema_utils_1.Type.Object({\n    session_key: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ECDHSessionKey' });\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nexports.EnumDebugButton = schema_utils_1.Type.Enum(DebugButton);\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nexports.EnumDebugPhysicalButton = schema_utils_1.Type.Enum(DebugPhysicalButton);\nvar DebugWaitType;\n(function (DebugWaitType) {\n    DebugWaitType[DebugWaitType[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    DebugWaitType[DebugWaitType[\"NEXT_LAYOUT\"] = 1] = \"NEXT_LAYOUT\";\n    DebugWaitType[DebugWaitType[\"CURRENT_LAYOUT\"] = 2] = \"CURRENT_LAYOUT\";\n})(DebugWaitType || (exports.DebugWaitType = DebugWaitType = {}));\nexports.EnumDebugWaitType = schema_utils_1.Type.Enum(DebugWaitType);\nexports.DebugLinkResetDebugEvents = schema_utils_1.Type.Object({}, { $id: 'DebugLinkResetDebugEvents' });\nexports.DebugLinkOptigaSetSecMax = schema_utils_1.Type.Object({}, { $id: 'DebugLinkOptigaSetSecMax' });\nexports.EosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EosGetPublicKey' });\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wif_public_key: schema_utils_1.Type.String(),\n    raw_public_key: schema_utils_1.Type.String(),\n}, { $id: 'EosPublicKey' });\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Number(),\n    ref_block_num: schema_utils_1.Type.Number(),\n    ref_block_prefix: schema_utils_1.Type.Number(),\n    max_net_usage_words: schema_utils_1.Type.Number(),\n    max_cpu_usage_ms: schema_utils_1.Type.Number(),\n    delay_sec: schema_utils_1.Type.Number(),\n}, { $id: 'EosTxHeader' });\nexports.EosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    num_actions: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EosSignTx' });\nexports.EosTxActionRequest = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'EosTxActionRequest' });\nexports.EosAsset = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    symbol: schema_utils_1.Type.String(),\n}, { $id: 'EosAsset' });\nexports.EosPermissionLevel = schema_utils_1.Type.Object({\n    actor: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n}, { $id: 'EosPermissionLevel' });\nexports.EosAuthorizationKey = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationKey' });\nexports.EosAuthorizationAccount = schema_utils_1.Type.Object({\n    account: exports.EosPermissionLevel,\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationAccount' });\nexports.EosAuthorizationWait = schema_utils_1.Type.Object({\n    wait_sec: schema_utils_1.Type.Number(),\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationWait' });\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(exports.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(exports.EosAuthorizationAccount),\n    waits: schema_utils_1.Type.Array(exports.EosAuthorizationWait),\n}, { $id: 'EosAuthorization' });\nexports.EosActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(exports.EosPermissionLevel),\n}, { $id: 'EosActionCommon' });\nexports.EosActionTransfer = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n    memo: schema_utils_1.Type.String(),\n}, { $id: 'EosActionTransfer' });\nexports.EosActionDelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n    transfer: schema_utils_1.Type.Boolean(),\n}, { $id: 'EosActionDelegate' });\nexports.EosActionUndelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n}, { $id: 'EosActionUndelegate' });\nexports.EosActionRefund = schema_utils_1.Type.Object({\n    owner: schema_utils_1.Type.String(),\n}, { $id: 'EosActionRefund' });\nexports.EosActionBuyRam = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n}, { $id: 'EosActionBuyRam' });\nexports.EosActionBuyRamBytes = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n}, { $id: 'EosActionBuyRamBytes' });\nexports.EosActionSellRam = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n}, { $id: 'EosActionSellRam' });\nexports.EosActionVoteProducer = schema_utils_1.Type.Object({\n    voter: schema_utils_1.Type.String(),\n    proxy: schema_utils_1.Type.String(),\n    producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'EosActionVoteProducer' });\nexports.EosActionUpdateAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.String(),\n    auth: exports.EosAuthorization,\n}, { $id: 'EosActionUpdateAuth' });\nexports.EosActionDeleteAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n}, { $id: 'EosActionDeleteAuth' });\nexports.EosActionLinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n    requirement: schema_utils_1.Type.String(),\n}, { $id: 'EosActionLinkAuth' });\nexports.EosActionUnlinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n}, { $id: 'EosActionUnlinkAuth' });\nexports.EosActionNewAccount = schema_utils_1.Type.Object({\n    creator: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    owner: exports.EosAuthorization,\n    active: exports.EosAuthorization,\n}, { $id: 'EosActionNewAccount' });\nexports.EosActionUnknown = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Number(),\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'EosActionUnknown' });\nexports.EosTxActionAck = schema_utils_1.Type.Object({\n    common: exports.EosActionCommon,\n    transfer: schema_utils_1.Type.Optional(exports.EosActionTransfer),\n    delegate: schema_utils_1.Type.Optional(exports.EosActionDelegate),\n    undelegate: schema_utils_1.Type.Optional(exports.EosActionUndelegate),\n    refund: schema_utils_1.Type.Optional(exports.EosActionRefund),\n    buy_ram: schema_utils_1.Type.Optional(exports.EosActionBuyRam),\n    buy_ram_bytes: schema_utils_1.Type.Optional(exports.EosActionBuyRamBytes),\n    sell_ram: schema_utils_1.Type.Optional(exports.EosActionSellRam),\n    vote_producer: schema_utils_1.Type.Optional(exports.EosActionVoteProducer),\n    update_auth: schema_utils_1.Type.Optional(exports.EosActionUpdateAuth),\n    delete_auth: schema_utils_1.Type.Optional(exports.EosActionDeleteAuth),\n    link_auth: schema_utils_1.Type.Optional(exports.EosActionLinkAuth),\n    unlink_auth: schema_utils_1.Type.Optional(exports.EosActionUnlinkAuth),\n    new_account: schema_utils_1.Type.Optional(exports.EosActionNewAccount),\n    unknown: schema_utils_1.Type.Optional(exports.EosActionUnknown),\n}, { $id: 'EosTxActionAck' });\nexports.EosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'EosSignedTx' });\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nexports.EnumEthereumDefinitionType = schema_utils_1.Type.Enum(EthereumDefinitionType);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumNetworkInfo' });\nexports.EthereumTokenInfo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    decimals: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTokenInfo' });\nexports.EthereumDefinitions = schema_utils_1.Type.Object({\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    encoded_token: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n}, { $id: 'EthereumDefinitions' });\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    primary_type: schema_utils_1.Type.String(),\n    metamask_v4_compat: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n}, { $id: 'EthereumSignTypedData' });\nexports.EthereumTypedDataStructRequest = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataStructRequest' });\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nexports.EnumEthereumDataType = schema_utils_1.Type.Enum(EthereumDataType);\nexports.EthereumFieldType = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    data_type: exports.EnumEthereumDataType,\n    size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    entry_type: schema_utils_1.Type.Optional(This),\n    struct_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}), { $id: 'EthereumFieldType' });\nexports.EthereumStructMember = schema_utils_1.Type.Object({\n    type: exports.EthereumFieldType,\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumStructMember' });\nexports.EthereumTypedDataStructAck = schema_utils_1.Type.Object({\n    members: schema_utils_1.Type.Array(exports.EthereumStructMember),\n}, { $id: 'EthereumTypedDataStructAck' });\nexports.EthereumTypedDataValueRequest = schema_utils_1.Type.Object({\n    member_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'EthereumTypedDataValueRequest' });\nexports.EthereumTypedDataValueAck = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataValueAck' });\nexports.EthereumGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumGetPublicKey' });\nexports.EthereumPublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n}, { $id: 'EthereumPublicKey' });\nexports.EthereumGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumGetAddress' });\nexports.EthereumAddress = schema_utils_1.Type.Object({\n    _old_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumAddress' });\nexports.EthereumSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    gas_price: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.Number(),\n    tx_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignTx' });\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storage_keys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'EthereumAccessList' });\nexports.EthereumSignTxEIP1559 = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.String(),\n    max_gas_fee: schema_utils_1.Type.String(),\n    max_priority_fee: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.String(),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Number(),\n    access_list: schema_utils_1.Type.Array(exports.EthereumAccessList),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignTxEIP1559' });\nexports.EthereumTxRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_v: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_r: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature_s: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'EthereumTxRequest' });\nexports.EthereumTxAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTxAck' });\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignMessage' });\nexports.EthereumMessageSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumMessageSignature' });\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumVerifyMessage' });\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n}, { $id: 'EthereumSignTypedHash' });\nexports.EthereumTypedDataSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataSignature' });\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Single_Extendable\"] = 3] = \"Slip39_Single_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic_Extendable\"] = 4] = \"Slip39_Basic_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced_Extendable\"] = 5] = \"Slip39_Advanced_Extendable\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nexports.EnumEnum_BackupType = schema_utils_1.Type.Enum(Enum_BackupType);\nexports.BackupType = schema_utils_1.Type.KeyOfEnum(Enum_BackupType, { $id: 'BackupType' });\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nexports.EnumEnum_SafetyCheckLevel = schema_utils_1.Type.Enum(Enum_SafetyCheckLevel);\nexports.SafetyCheckLevel = schema_utils_1.Type.KeyOfEnum(Enum_SafetyCheckLevel, { $id: 'SafetyCheckLevel' });\nvar Enum_DisplayRotation;\n(function (Enum_DisplayRotation) {\n    Enum_DisplayRotation[Enum_DisplayRotation[\"North\"] = 0] = \"North\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"East\"] = 90] = \"East\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"South\"] = 180] = \"South\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"West\"] = 270] = \"West\";\n})(Enum_DisplayRotation || (exports.Enum_DisplayRotation = Enum_DisplayRotation = {}));\nexports.EnumEnum_DisplayRotation = schema_utils_1.Type.Enum(Enum_DisplayRotation);\nexports.DisplayRotation = schema_utils_1.Type.KeyOfEnum(Enum_DisplayRotation, { $id: 'DisplayRotation' });\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nexports.EnumEnum_HomescreenFormat = schema_utils_1.Type.Enum(Enum_HomescreenFormat);\nexports.HomescreenFormat = schema_utils_1.Type.KeyOfEnum(Enum_HomescreenFormat, { $id: 'HomescreenFormat' });\nexports.Initialize = schema_utils_1.Type.Object({\n    session_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _skip_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derive_cardano: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'Initialize' });\nexports.GetFeatures = schema_utils_1.Type.Object({}, { $id: 'GetFeatures' });\nvar Enum_BackupAvailability;\n(function (Enum_BackupAvailability) {\n    Enum_BackupAvailability[Enum_BackupAvailability[\"NotAvailable\"] = 0] = \"NotAvailable\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Required\"] = 1] = \"Required\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Available\"] = 2] = \"Available\";\n})(Enum_BackupAvailability || (exports.Enum_BackupAvailability = Enum_BackupAvailability = {}));\nexports.EnumEnum_BackupAvailability = schema_utils_1.Type.Enum(Enum_BackupAvailability);\nexports.BackupAvailability = schema_utils_1.Type.KeyOfEnum(Enum_BackupAvailability, {\n    $id: 'BackupAvailability',\n});\nvar Enum_RecoveryStatus;\n(function (Enum_RecoveryStatus) {\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Nothing\"] = 0] = \"Nothing\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Recovery\"] = 1] = \"Recovery\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Backup\"] = 2] = \"Backup\";\n})(Enum_RecoveryStatus || (exports.Enum_RecoveryStatus = Enum_RecoveryStatus = {}));\nexports.EnumEnum_RecoveryStatus = schema_utils_1.Type.Enum(Enum_RecoveryStatus);\nexports.RecoveryStatus = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryStatus, { $id: 'RecoveryStatus' });\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n    Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n    Enum_Capability[Enum_Capability[\"Capability_Brightness\"] = 20] = \"Capability_Brightness\";\n    Enum_Capability[Enum_Capability[\"Capability_Haptic\"] = 21] = \"Capability_Haptic\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nexports.EnumEnum_Capability = schema_utils_1.Type.Enum(Enum_Capability);\nexports.Capability = schema_utils_1.Type.KeyOfEnum(Enum_Capability, { $id: 'Capability' });\nvar RecoveryDeviceInputMethod;\n(function (RecoveryDeviceInputMethod) {\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"ScrambledWords\"] = 0] = \"ScrambledWords\";\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"Matrix\"] = 1] = \"Matrix\";\n})(RecoveryDeviceInputMethod || (exports.RecoveryDeviceInputMethod = RecoveryDeviceInputMethod = {}));\nexports.EnumRecoveryDeviceInputMethod = schema_utils_1.Type.Enum(RecoveryDeviceInputMethod);\nvar Enum_RecoveryType;\n(function (Enum_RecoveryType) {\n    Enum_RecoveryType[Enum_RecoveryType[\"NormalRecovery\"] = 0] = \"NormalRecovery\";\n    Enum_RecoveryType[Enum_RecoveryType[\"DryRun\"] = 1] = \"DryRun\";\n    Enum_RecoveryType[Enum_RecoveryType[\"UnlockRepeatedBackup\"] = 2] = \"UnlockRepeatedBackup\";\n})(Enum_RecoveryType || (exports.Enum_RecoveryType = Enum_RecoveryType = {}));\nexports.EnumEnum_RecoveryType = schema_utils_1.Type.Enum(Enum_RecoveryType);\nexports.RecoveryType = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryType, { $id: 'RecoveryType' });\nexports.RecoveryDevice = schema_utils_1.Type.Object({\n    word_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    enforce_wordlist: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    input_method: schema_utils_1.Type.Optional(exports.EnumRecoveryDeviceInputMethod),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    type: schema_utils_1.Type.Optional(exports.RecoveryType),\n}, { $id: 'RecoveryDevice' });\nexports.Features = schema_utils_1.Type.Object({\n    vendor: schema_utils_1.Type.String(),\n    major_version: schema_utils_1.Type.Number(),\n    minor_version: schema_utils_1.Type.Number(),\n    patch_version: schema_utils_1.Type.Number(),\n    bootloader_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    device_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    pin_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    passphrase_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    language: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    label: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    initialized: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    revision: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    bootloader_hash: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    imported: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    unlocked: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    _passphrase_cached: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    firmware_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    backup_availability: schema_utils_1.Type.Union([exports.BackupAvailability, schema_utils_1.Type.Null()]),\n    flags: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    model: schema_utils_1.Type.String(),\n    fw_major: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_minor: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_patch: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_vendor: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    unfinished_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    no_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    recovery_status: schema_utils_1.Type.Union([exports.RecoveryStatus, schema_utils_1.Type.Null()]),\n    capabilities: schema_utils_1.Type.Array(exports.Capability),\n    backup_type: schema_utils_1.Type.Union([exports.BackupType, schema_utils_1.Type.Null()]),\n    sd_card_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    sd_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    wipe_code_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    session_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    passphrase_always_on_device: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    safety_checks: schema_utils_1.Type.Union([exports.SafetyCheckLevel, schema_utils_1.Type.Null()]),\n    auto_lock_delay_ms: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    display_rotation: schema_utils_1.Type.Union([exports.DisplayRotation, schema_utils_1.Type.Null()]),\n    experimental_features: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    busy: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_format: schema_utils_1.Type.Optional(exports.HomescreenFormat),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    internal_model: exports.EnumDeviceModelInternal,\n    unit_color: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    unit_btconly: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_width: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    homescreen_height: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    bootloader_locked: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language_version_matches: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    unit_packaging: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    recovery_type: schema_utils_1.Type.Optional(exports.RecoveryType),\n    optiga_sec: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'Features' });\nexports.LockDevice = schema_utils_1.Type.Object({}, { $id: 'LockDevice' });\nexports.SetBusy = schema_utils_1.Type.Object({\n    expiry_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'SetBusy' });\nexports.EndSession = schema_utils_1.Type.Object({}, { $id: 'EndSession' });\nexports.ApplySettings = schema_utils_1.Type.Object({\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    use_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _passphrase_source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    auto_lock_delay_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    display_rotation: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([exports.DisplayRotation, exports.EnumEnum_DisplayRotation])),\n    passphrase_always_on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    safety_checks: schema_utils_1.Type.Optional(exports.SafetyCheckLevel),\n    experimental_features: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ApplySettings' });\nexports.ChangeLanguage = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangeLanguage' });\nexports.TranslationDataRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    data_offset: schema_utils_1.Type.Number(),\n}, { $id: 'TranslationDataRequest' });\nexports.TranslationDataAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'TranslationDataAck' });\nexports.ApplyFlags = schema_utils_1.Type.Object({\n    flags: schema_utils_1.Type.Number(),\n}, { $id: 'ApplyFlags' });\nexports.ChangePin = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangePin' });\nexports.ChangeWipeCode = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangeWipeCode' });\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nexports.EnumSdProtectOperationType = schema_utils_1.Type.Enum(SdProtectOperationType);\nexports.SdProtect = schema_utils_1.Type.Object({\n    operation: exports.EnumSdProtectOperationType,\n}, { $id: 'SdProtect' });\nexports.Ping = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    button_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'Ping' });\nexports.Cancel = schema_utils_1.Type.Object({}, { $id: 'Cancel' });\nexports.GetEntropy = schema_utils_1.Type.Object({\n    size: schema_utils_1.Type.Number(),\n}, { $id: 'GetEntropy' });\nexports.Entropy = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n}, { $id: 'Entropy' });\nexports.GetFirmwareHash = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetFirmwareHash' });\nexports.FirmwareHash = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n}, { $id: 'FirmwareHash' });\nexports.AuthenticateDevice = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.String(),\n}, { $id: 'AuthenticateDevice' });\nexports.AuthenticityProof = schema_utils_1.Type.Object({\n    certificates: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'AuthenticityProof' });\nexports.WipeDevice = schema_utils_1.Type.Object({}, { $id: 'WipeDevice' });\nexports.LoadDevice = schema_utils_1.Type.Object({\n    mnemonics: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    pin: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    skip_checksum: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    needs_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'LoadDevice' });\nexports.ResetDevice = schema_utils_1.Type.Object({\n    strength: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    skip_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    backup_type: schema_utils_1.Type.Optional(exports.EnumEnum_BackupType),\n}, { $id: 'ResetDevice' });\nexports.Slip39Group = schema_utils_1.Type.Object({\n    member_threshold: schema_utils_1.Type.Number(),\n    member_count: schema_utils_1.Type.Number(),\n}, { $id: 'Slip39Group' });\nexports.BackupDevice = schema_utils_1.Type.Object({\n    group_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    groups: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.Slip39Group)),\n}, { $id: 'BackupDevice' });\nexports.EntropyRequest = schema_utils_1.Type.Object({}, { $id: 'EntropyRequest' });\nexports.EntropyAck = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n}, { $id: 'EntropyAck' });\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nexports.EnumEnum_WordRequestType = schema_utils_1.Type.Enum(Enum_WordRequestType);\nexports.WordRequestType = schema_utils_1.Type.KeyOfEnum(Enum_WordRequestType, { $id: 'WordRequestType' });\nexports.WordRequest = schema_utils_1.Type.Object({\n    type: exports.WordRequestType,\n}, { $id: 'WordRequest' });\nexports.WordAck = schema_utils_1.Type.Object({\n    word: schema_utils_1.Type.String(),\n}, { $id: 'WordAck' });\nexports.SetU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n}, { $id: 'SetU2FCounter' });\nexports.GetNextU2FCounter = schema_utils_1.Type.Object({}, { $id: 'GetNextU2FCounter' });\nexports.NextU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n}, { $id: 'NextU2FCounter' });\nexports.DoPreauthorized = schema_utils_1.Type.Object({}, { $id: 'DoPreauthorized' });\nexports.PreauthorizedRequest = schema_utils_1.Type.Object({}, { $id: 'PreauthorizedRequest' });\nexports.CancelAuthorization = schema_utils_1.Type.Object({}, { $id: 'CancelAuthorization' });\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nexports.EnumBootCommand = schema_utils_1.Type.Enum(BootCommand);\nexports.RebootToBootloader = schema_utils_1.Type.Object({\n    boot_command: schema_utils_1.Type.Optional(exports.EnumBootCommand),\n    firmware_header: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    language_data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'RebootToBootloader' });\nexports.GetNonce = schema_utils_1.Type.Object({}, { $id: 'GetNonce' });\nexports.Nonce = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.String(),\n}, { $id: 'Nonce' });\nexports.UnlockPath = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'UnlockPath' });\nexports.UnlockedPathRequest = schema_utils_1.Type.Object({\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'UnlockedPathRequest' });\nexports.ShowDeviceTutorial = schema_utils_1.Type.Object({}, { $id: 'ShowDeviceTutorial' });\nexports.UnlockBootloader = schema_utils_1.Type.Object({}, { $id: 'UnlockBootloader' });\nexports.SetBrightness = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'SetBrightness' });\nexports.NEMGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'NEMGetAddress' });\nexports.NEMAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'NEMAddress' });\nexports.NEMTransactionCommon = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    deadline: schema_utils_1.Type.Number(),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'NEMTransactionCommon' });\nexports.NEMMosaic = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    quantity: schema_utils_1.Type.Number(),\n}, { $id: 'NEMMosaic' });\nexports.NEMTransfer = schema_utils_1.Type.Object({\n    recipient: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Uint(),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mosaics: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMMosaic)),\n}, { $id: 'NEMTransfer' });\nexports.NEMProvisionNamespace = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n}, { $id: 'NEMProvisionNamespace' });\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nexports.EnumNEMMosaicLevy = schema_utils_1.Type.Enum(NEMMosaicLevy);\nexports.NEMMosaicDefinition = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ticker: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    divisibility: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    levy: schema_utils_1.Type.Optional(exports.EnumNEMMosaicLevy),\n    fee: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    levy_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_namespace: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_mosaic: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    mutable_supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transferable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    description: schema_utils_1.Type.String(),\n    networks: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n}, { $id: 'NEMMosaicDefinition' });\nexports.NEMMosaicCreation = schema_utils_1.Type.Object({\n    definition: exports.NEMMosaicDefinition,\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n}, { $id: 'NEMMosaicCreation' });\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nexports.EnumNEMSupplyChangeType = schema_utils_1.Type.Enum(NEMSupplyChangeType);\nexports.NEMMosaicSupplyChange = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    type: exports.EnumNEMSupplyChangeType,\n    delta: schema_utils_1.Type.Number(),\n}, { $id: 'NEMMosaicSupplyChange' });\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nexports.EnumNEMModificationType = schema_utils_1.Type.Enum(NEMModificationType);\nexports.NEMCosignatoryModification = schema_utils_1.Type.Object({\n    type: exports.EnumNEMModificationType,\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'NEMCosignatoryModification' });\nexports.NEMAggregateModification = schema_utils_1.Type.Object({\n    modifications: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMCosignatoryModification)),\n    relative_change: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'NEMAggregateModification' });\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nexports.EnumNEMImportanceTransferMode = schema_utils_1.Type.Enum(NEMImportanceTransferMode);\nexports.NEMImportanceTransfer = schema_utils_1.Type.Object({\n    mode: exports.EnumNEMImportanceTransferMode,\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'NEMImportanceTransfer' });\nexports.NEMSignTx = schema_utils_1.Type.Object({\n    transaction: exports.NEMTransactionCommon,\n    multisig: schema_utils_1.Type.Optional(exports.NEMTransactionCommon),\n    transfer: schema_utils_1.Type.Optional(exports.NEMTransfer),\n    cosigning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    provision_namespace: schema_utils_1.Type.Optional(exports.NEMProvisionNamespace),\n    mosaic_creation: schema_utils_1.Type.Optional(exports.NEMMosaicCreation),\n    supply_change: schema_utils_1.Type.Optional(exports.NEMMosaicSupplyChange),\n    aggregate_modification: schema_utils_1.Type.Optional(exports.NEMAggregateModification),\n    importance_transfer: schema_utils_1.Type.Optional(exports.NEMImportanceTransfer),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'NEMSignTx' });\nexports.NEMSignedTx = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'NEMSignedTx' });\nexports.NEMDecryptMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'NEMDecryptMessage' });\nexports.NEMDecryptedMessage = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.String(),\n}, { $id: 'NEMDecryptedMessage' });\nexports.RippleGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'RippleGetAddress' });\nexports.RippleAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'RippleAddress' });\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destination_tag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'RipplePayment' });\nexports.RippleSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    fee: schema_utils_1.Type.Uint(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    last_ledger_sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'RippleSignTx' });\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    serialized_tx: schema_utils_1.Type.String(),\n}, { $id: 'RippleSignedTx' });\nexports.SolanaGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SolanaGetPublicKey' });\nexports.SolanaPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'SolanaPublicKey' });\nexports.SolanaGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SolanaGetAddress' });\nexports.SolanaAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'SolanaAddress' });\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    base_address: schema_utils_1.Type.String(),\n    token_program: schema_utils_1.Type.String(),\n    token_mint: schema_utils_1.Type.String(),\n    token_account: schema_utils_1.Type.String(),\n}, { $id: 'SolanaTxTokenAccountInfo' });\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    token_accounts_infos: schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo),\n}, { $id: 'SolanaTxAdditionalInfo' });\nexports.SolanaSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serialized_tx: schema_utils_1.Type.String(),\n    additional_info: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n}, { $id: 'SolanaSignTx' });\nexports.SolanaTxSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'SolanaTxSignature' });\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nexports.EnumStellarAssetType = schema_utils_1.Type.Enum(StellarAssetType);\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal(0),\n        schema_utils_1.Type.Literal(1),\n        schema_utils_1.Type.Literal(2),\n        schema_utils_1.Type.Literal('NATIVE'),\n        schema_utils_1.Type.Literal('ALPHANUM4'),\n        schema_utils_1.Type.Literal('ALPHANUM12'),\n    ]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'StellarAsset' });\nexports.StellarGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'StellarGetAddress' });\nexports.StellarAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'StellarAddress' });\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nexports.EnumStellarMemoType = schema_utils_1.Type.Enum(StellarMemoType);\nexports.StellarSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network_passphrase: schema_utils_1.Type.String(),\n    source_account: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n    sequence_number: schema_utils_1.Type.Uint(),\n    timebounds_start: schema_utils_1.Type.Number(),\n    timebounds_end: schema_utils_1.Type.Number(),\n    memo_type: exports.EnumStellarMemoType,\n    memo_text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    memo_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    num_operations: schema_utils_1.Type.Number(),\n}, { $id: 'StellarSignTx' });\nexports.StellarTxOpRequest = schema_utils_1.Type.Object({}, { $id: 'StellarTxOpRequest' });\nexports.StellarPaymentOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarPaymentOp' });\nexports.StellarCreateAccountOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    new_account: schema_utils_1.Type.String(),\n    starting_balance: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarCreateAccountOp' });\nexports.StellarPathPaymentStrictReceiveOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_max: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_amount: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n}, { $id: 'StellarPathPaymentStrictReceiveOp' });\nexports.StellarPathPaymentStrictSendOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_amount: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_min: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n}, { $id: 'StellarPathPaymentStrictSendOp' });\nexports.StellarManageSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarManageSellOfferOp' });\nexports.StellarManageBuyOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarManageBuyOfferOp' });\nexports.StellarCreatePassiveSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n}, { $id: 'StellarCreatePassiveSellOfferOp' });\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nexports.EnumStellarSignerType = schema_utils_1.Type.Enum(StellarSignerType);\nexports.StellarSetOptionsOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    inflation_destination_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clear_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    set_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    master_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    low_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medium_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    high_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    home_domain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer_type: schema_utils_1.Type.Optional(exports.EnumStellarSignerType),\n    signer_key: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    signer_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'StellarSetOptionsOp' });\nexports.StellarChangeTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    asset: exports.StellarAsset,\n    limit: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarChangeTrustOp' });\nexports.StellarAllowTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trusted_account: schema_utils_1.Type.String(),\n    asset_type: exports.EnumStellarAssetType,\n    asset_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    is_authorized: schema_utils_1.Type.Boolean(),\n}, { $id: 'StellarAllowTrustOp' });\nexports.StellarAccountMergeOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n}, { $id: 'StellarAccountMergeOp' });\nexports.StellarManageDataOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n}, { $id: 'StellarManageDataOp' });\nexports.StellarBumpSequenceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bump_to: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarBumpSequenceOp' });\nexports.StellarClaimClaimableBalanceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance_id: schema_utils_1.Type.String(),\n}, { $id: 'StellarClaimClaimableBalanceOp' });\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'StellarSignedTx' });\nexports.TezosGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosGetAddress' });\nexports.TezosAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'TezosAddress' });\nexports.TezosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosGetPublicKey' });\nexports.TezosPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'TezosPublicKey' });\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nexports.EnumTezosContractType = schema_utils_1.Type.Enum(TezosContractType);\nexports.TezosContractID = schema_utils_1.Type.Object({\n    tag: schema_utils_1.Type.Number(),\n    hash: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosContractID' });\nexports.TezosRevealOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosRevealOp' });\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: exports.TezosContractID,\n    amount: schema_utils_1.Type.Uint(),\n}, { $id: 'TezosManagerTransfer' });\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n}, { $id: 'TezosParametersManager' });\nexports.TezosTransactionOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    destination: exports.TezosContractID,\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n}, { $id: 'TezosTransactionOp' });\nexports.TezosOriginationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    manager_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance: schema_utils_1.Type.Number(),\n    spendable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegatable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    script: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n}, { $id: 'TezosOriginationOp' });\nexports.TezosDelegationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosDelegationOp' });\nexports.TezosProposalOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposals: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'TezosProposalOp' });\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\nexports.EnumTezosBallotType = schema_utils_1.Type.Enum(TezosBallotType);\nexports.TezosBallotOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposal: schema_utils_1.Type.String(),\n    ballot: exports.EnumTezosBallotType,\n}, { $id: 'TezosBallotOp' });\nexports.TezosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    branch: schema_utils_1.Type.Uint8Array(),\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOp),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOp),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOp),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOp),\n    proposal: schema_utils_1.Type.Optional(exports.TezosProposalOp),\n    ballot: schema_utils_1.Type.Optional(exports.TezosBallotOp),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosSignTx' });\nexports.TezosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    sig_op_contents: schema_utils_1.Type.String(),\n    operation_hash: schema_utils_1.Type.String(),\n}, { $id: 'TezosSignedTx' });\nexports.MessageType = schema_utils_1.Type.Object({\n    BinanceGetAddress: exports.BinanceGetAddress,\n    BinanceAddress: exports.BinanceAddress,\n    BinanceGetPublicKey: exports.BinanceGetPublicKey,\n    BinancePublicKey: exports.BinancePublicKey,\n    BinanceSignTx: exports.BinanceSignTx,\n    BinanceTxRequest: exports.BinanceTxRequest,\n    BinanceCoin: exports.BinanceCoin,\n    BinanceInputOutput: exports.BinanceInputOutput,\n    BinanceTransferMsg: exports.BinanceTransferMsg,\n    BinanceOrderMsg: exports.BinanceOrderMsg,\n    BinanceCancelMsg: exports.BinanceCancelMsg,\n    BinanceSignedTx: exports.BinanceSignedTx,\n    HDNodeType: exports.HDNodeType,\n    HDNodePathType: exports.HDNodePathType,\n    MultisigRedeemScriptType: exports.MultisigRedeemScriptType,\n    GetPublicKey: exports.GetPublicKey,\n    PublicKey: exports.PublicKey,\n    GetAddress: exports.GetAddress,\n    Address: exports.Address,\n    GetOwnershipId: exports.GetOwnershipId,\n    OwnershipId: exports.OwnershipId,\n    SignMessage: exports.SignMessage,\n    MessageSignature: exports.MessageSignature,\n    VerifyMessage: exports.VerifyMessage,\n    CoinJoinRequest: exports.CoinJoinRequest,\n    SignTx: exports.SignTx,\n    TxRequestDetailsType: exports.TxRequestDetailsType,\n    TxRequestSerializedType: exports.TxRequestSerializedType,\n    TxRequest: exports.TxRequest,\n    TxInputType: exports.TxInputType,\n    TxOutputBinType: exports.TxOutputBinType,\n    TxOutputType: exports.TxOutputType,\n    PrevTx: exports.PrevTx,\n    PrevInput: exports.PrevInput,\n    PrevOutput: exports.PrevOutput,\n    TextMemo: exports.TextMemo,\n    RefundMemo: exports.RefundMemo,\n    CoinPurchaseMemo: exports.CoinPurchaseMemo,\n    PaymentRequestMemo: exports.PaymentRequestMemo,\n    TxAckPaymentRequest: exports.TxAckPaymentRequest,\n    TxAck: exports.TxAck,\n    TxAckInputWrapper: exports.TxAckInputWrapper,\n    TxAckInput: exports.TxAckInput,\n    TxAckOutputWrapper: exports.TxAckOutputWrapper,\n    TxAckOutput: exports.TxAckOutput,\n    TxAckPrevMeta: exports.TxAckPrevMeta,\n    TxAckPrevInputWrapper: exports.TxAckPrevInputWrapper,\n    TxAckPrevInput: exports.TxAckPrevInput,\n    TxAckPrevOutputWrapper: exports.TxAckPrevOutputWrapper,\n    TxAckPrevOutput: exports.TxAckPrevOutput,\n    TxAckPrevExtraDataWrapper: exports.TxAckPrevExtraDataWrapper,\n    TxAckPrevExtraData: exports.TxAckPrevExtraData,\n    GetOwnershipProof: exports.GetOwnershipProof,\n    OwnershipProof: exports.OwnershipProof,\n    AuthorizeCoinJoin: exports.AuthorizeCoinJoin,\n    FirmwareErase: exports.FirmwareErase,\n    FirmwareRequest: exports.FirmwareRequest,\n    FirmwareUpload: exports.FirmwareUpload,\n    ProdTestT1: exports.ProdTestT1,\n    CardanoBlockchainPointerType: exports.CardanoBlockchainPointerType,\n    CardanoNativeScript: exports.CardanoNativeScript,\n    CardanoGetNativeScriptHash: exports.CardanoGetNativeScriptHash,\n    CardanoNativeScriptHash: exports.CardanoNativeScriptHash,\n    CardanoAddressParametersType: exports.CardanoAddressParametersType,\n    CardanoGetAddress: exports.CardanoGetAddress,\n    CardanoAddress: exports.CardanoAddress,\n    CardanoGetPublicKey: exports.CardanoGetPublicKey,\n    CardanoPublicKey: exports.CardanoPublicKey,\n    CardanoSignTxInit: exports.CardanoSignTxInit,\n    CardanoTxInput: exports.CardanoTxInput,\n    CardanoTxOutput: exports.CardanoTxOutput,\n    CardanoAssetGroup: exports.CardanoAssetGroup,\n    CardanoToken: exports.CardanoToken,\n    CardanoTxInlineDatumChunk: exports.CardanoTxInlineDatumChunk,\n    CardanoTxReferenceScriptChunk: exports.CardanoTxReferenceScriptChunk,\n    CardanoPoolOwner: exports.CardanoPoolOwner,\n    CardanoPoolRelayParameters: exports.CardanoPoolRelayParameters,\n    CardanoPoolMetadataType: exports.CardanoPoolMetadataType,\n    CardanoPoolParametersType: exports.CardanoPoolParametersType,\n    CardanoDRep: exports.CardanoDRep,\n    CardanoTxCertificate: exports.CardanoTxCertificate,\n    CardanoTxWithdrawal: exports.CardanoTxWithdrawal,\n    CardanoCVoteRegistrationDelegation: exports.CardanoCVoteRegistrationDelegation,\n    CardanoCVoteRegistrationParametersType: exports.CardanoCVoteRegistrationParametersType,\n    CardanoTxAuxiliaryData: exports.CardanoTxAuxiliaryData,\n    CardanoTxMint: exports.CardanoTxMint,\n    CardanoTxCollateralInput: exports.CardanoTxCollateralInput,\n    CardanoTxRequiredSigner: exports.CardanoTxRequiredSigner,\n    CardanoTxReferenceInput: exports.CardanoTxReferenceInput,\n    CardanoTxItemAck: exports.CardanoTxItemAck,\n    CardanoTxAuxiliaryDataSupplement: exports.CardanoTxAuxiliaryDataSupplement,\n    CardanoTxWitnessRequest: exports.CardanoTxWitnessRequest,\n    CardanoTxWitnessResponse: exports.CardanoTxWitnessResponse,\n    CardanoTxHostAck: exports.CardanoTxHostAck,\n    CardanoTxBodyHash: exports.CardanoTxBodyHash,\n    CardanoSignTxFinished: exports.CardanoSignTxFinished,\n    Success: exports.Success,\n    Failure: exports.Failure,\n    ButtonRequest: exports.ButtonRequest,\n    ButtonAck: exports.ButtonAck,\n    PinMatrixRequest: exports.PinMatrixRequest,\n    PinMatrixAck: exports.PinMatrixAck,\n    PassphraseRequest: exports.PassphraseRequest,\n    PassphraseAck: exports.PassphraseAck,\n    Deprecated_PassphraseStateRequest: exports.Deprecated_PassphraseStateRequest,\n    Deprecated_PassphraseStateAck: exports.Deprecated_PassphraseStateAck,\n    CipherKeyValue: exports.CipherKeyValue,\n    CipheredKeyValue: exports.CipheredKeyValue,\n    IdentityType: exports.IdentityType,\n    SignIdentity: exports.SignIdentity,\n    SignedIdentity: exports.SignedIdentity,\n    GetECDHSessionKey: exports.GetECDHSessionKey,\n    ECDHSessionKey: exports.ECDHSessionKey,\n    DebugLinkResetDebugEvents: exports.DebugLinkResetDebugEvents,\n    DebugLinkOptigaSetSecMax: exports.DebugLinkOptigaSetSecMax,\n    EosGetPublicKey: exports.EosGetPublicKey,\n    EosPublicKey: exports.EosPublicKey,\n    EosTxHeader: exports.EosTxHeader,\n    EosSignTx: exports.EosSignTx,\n    EosTxActionRequest: exports.EosTxActionRequest,\n    EosAsset: exports.EosAsset,\n    EosPermissionLevel: exports.EosPermissionLevel,\n    EosAuthorizationKey: exports.EosAuthorizationKey,\n    EosAuthorizationAccount: exports.EosAuthorizationAccount,\n    EosAuthorizationWait: exports.EosAuthorizationWait,\n    EosAuthorization: exports.EosAuthorization,\n    EosActionCommon: exports.EosActionCommon,\n    EosActionTransfer: exports.EosActionTransfer,\n    EosActionDelegate: exports.EosActionDelegate,\n    EosActionUndelegate: exports.EosActionUndelegate,\n    EosActionRefund: exports.EosActionRefund,\n    EosActionBuyRam: exports.EosActionBuyRam,\n    EosActionBuyRamBytes: exports.EosActionBuyRamBytes,\n    EosActionSellRam: exports.EosActionSellRam,\n    EosActionVoteProducer: exports.EosActionVoteProducer,\n    EosActionUpdateAuth: exports.EosActionUpdateAuth,\n    EosActionDeleteAuth: exports.EosActionDeleteAuth,\n    EosActionLinkAuth: exports.EosActionLinkAuth,\n    EosActionUnlinkAuth: exports.EosActionUnlinkAuth,\n    EosActionNewAccount: exports.EosActionNewAccount,\n    EosActionUnknown: exports.EosActionUnknown,\n    EosTxActionAck: exports.EosTxActionAck,\n    EosSignedTx: exports.EosSignedTx,\n    EthereumNetworkInfo: exports.EthereumNetworkInfo,\n    EthereumTokenInfo: exports.EthereumTokenInfo,\n    EthereumDefinitions: exports.EthereumDefinitions,\n    EthereumSignTypedData: exports.EthereumSignTypedData,\n    EthereumTypedDataStructRequest: exports.EthereumTypedDataStructRequest,\n    EthereumFieldType: exports.EthereumFieldType,\n    EthereumStructMember: exports.EthereumStructMember,\n    EthereumTypedDataStructAck: exports.EthereumTypedDataStructAck,\n    EthereumTypedDataValueRequest: exports.EthereumTypedDataValueRequest,\n    EthereumTypedDataValueAck: exports.EthereumTypedDataValueAck,\n    EthereumGetPublicKey: exports.EthereumGetPublicKey,\n    EthereumPublicKey: exports.EthereumPublicKey,\n    EthereumGetAddress: exports.EthereumGetAddress,\n    EthereumAddress: exports.EthereumAddress,\n    EthereumSignTx: exports.EthereumSignTx,\n    EthereumAccessList: exports.EthereumAccessList,\n    EthereumSignTxEIP1559: exports.EthereumSignTxEIP1559,\n    EthereumTxRequest: exports.EthereumTxRequest,\n    EthereumTxAck: exports.EthereumTxAck,\n    EthereumSignMessage: exports.EthereumSignMessage,\n    EthereumMessageSignature: exports.EthereumMessageSignature,\n    EthereumVerifyMessage: exports.EthereumVerifyMessage,\n    EthereumSignTypedHash: exports.EthereumSignTypedHash,\n    EthereumTypedDataSignature: exports.EthereumTypedDataSignature,\n    Initialize: exports.Initialize,\n    GetFeatures: exports.GetFeatures,\n    RecoveryDevice: exports.RecoveryDevice,\n    Features: exports.Features,\n    LockDevice: exports.LockDevice,\n    SetBusy: exports.SetBusy,\n    EndSession: exports.EndSession,\n    ApplySettings: exports.ApplySettings,\n    ChangeLanguage: exports.ChangeLanguage,\n    TranslationDataRequest: exports.TranslationDataRequest,\n    TranslationDataAck: exports.TranslationDataAck,\n    ApplyFlags: exports.ApplyFlags,\n    ChangePin: exports.ChangePin,\n    ChangeWipeCode: exports.ChangeWipeCode,\n    SdProtect: exports.SdProtect,\n    Ping: exports.Ping,\n    Cancel: exports.Cancel,\n    GetEntropy: exports.GetEntropy,\n    Entropy: exports.Entropy,\n    GetFirmwareHash: exports.GetFirmwareHash,\n    FirmwareHash: exports.FirmwareHash,\n    AuthenticateDevice: exports.AuthenticateDevice,\n    AuthenticityProof: exports.AuthenticityProof,\n    WipeDevice: exports.WipeDevice,\n    LoadDevice: exports.LoadDevice,\n    ResetDevice: exports.ResetDevice,\n    Slip39Group: exports.Slip39Group,\n    BackupDevice: exports.BackupDevice,\n    EntropyRequest: exports.EntropyRequest,\n    EntropyAck: exports.EntropyAck,\n    WordRequest: exports.WordRequest,\n    WordAck: exports.WordAck,\n    SetU2FCounter: exports.SetU2FCounter,\n    GetNextU2FCounter: exports.GetNextU2FCounter,\n    NextU2FCounter: exports.NextU2FCounter,\n    DoPreauthorized: exports.DoPreauthorized,\n    PreauthorizedRequest: exports.PreauthorizedRequest,\n    CancelAuthorization: exports.CancelAuthorization,\n    RebootToBootloader: exports.RebootToBootloader,\n    GetNonce: exports.GetNonce,\n    Nonce: exports.Nonce,\n    UnlockPath: exports.UnlockPath,\n    UnlockedPathRequest: exports.UnlockedPathRequest,\n    ShowDeviceTutorial: exports.ShowDeviceTutorial,\n    UnlockBootloader: exports.UnlockBootloader,\n    SetBrightness: exports.SetBrightness,\n    NEMGetAddress: exports.NEMGetAddress,\n    NEMAddress: exports.NEMAddress,\n    NEMTransactionCommon: exports.NEMTransactionCommon,\n    NEMMosaic: exports.NEMMosaic,\n    NEMTransfer: exports.NEMTransfer,\n    NEMProvisionNamespace: exports.NEMProvisionNamespace,\n    NEMMosaicDefinition: exports.NEMMosaicDefinition,\n    NEMMosaicCreation: exports.NEMMosaicCreation,\n    NEMMosaicSupplyChange: exports.NEMMosaicSupplyChange,\n    NEMCosignatoryModification: exports.NEMCosignatoryModification,\n    NEMAggregateModification: exports.NEMAggregateModification,\n    NEMImportanceTransfer: exports.NEMImportanceTransfer,\n    NEMSignTx: exports.NEMSignTx,\n    NEMSignedTx: exports.NEMSignedTx,\n    NEMDecryptMessage: exports.NEMDecryptMessage,\n    NEMDecryptedMessage: exports.NEMDecryptedMessage,\n    RippleGetAddress: exports.RippleGetAddress,\n    RippleAddress: exports.RippleAddress,\n    RipplePayment: exports.RipplePayment,\n    RippleSignTx: exports.RippleSignTx,\n    RippleSignedTx: exports.RippleSignedTx,\n    SolanaGetPublicKey: exports.SolanaGetPublicKey,\n    SolanaPublicKey: exports.SolanaPublicKey,\n    SolanaGetAddress: exports.SolanaGetAddress,\n    SolanaAddress: exports.SolanaAddress,\n    SolanaTxTokenAccountInfo: exports.SolanaTxTokenAccountInfo,\n    SolanaTxAdditionalInfo: exports.SolanaTxAdditionalInfo,\n    SolanaSignTx: exports.SolanaSignTx,\n    SolanaTxSignature: exports.SolanaTxSignature,\n    StellarAsset: exports.StellarAsset,\n    StellarGetAddress: exports.StellarGetAddress,\n    StellarAddress: exports.StellarAddress,\n    StellarSignTx: exports.StellarSignTx,\n    StellarTxOpRequest: exports.StellarTxOpRequest,\n    StellarPaymentOp: exports.StellarPaymentOp,\n    StellarCreateAccountOp: exports.StellarCreateAccountOp,\n    StellarPathPaymentStrictReceiveOp: exports.StellarPathPaymentStrictReceiveOp,\n    StellarPathPaymentStrictSendOp: exports.StellarPathPaymentStrictSendOp,\n    StellarManageSellOfferOp: exports.StellarManageSellOfferOp,\n    StellarManageBuyOfferOp: exports.StellarManageBuyOfferOp,\n    StellarCreatePassiveSellOfferOp: exports.StellarCreatePassiveSellOfferOp,\n    StellarSetOptionsOp: exports.StellarSetOptionsOp,\n    StellarChangeTrustOp: exports.StellarChangeTrustOp,\n    StellarAllowTrustOp: exports.StellarAllowTrustOp,\n    StellarAccountMergeOp: exports.StellarAccountMergeOp,\n    StellarManageDataOp: exports.StellarManageDataOp,\n    StellarBumpSequenceOp: exports.StellarBumpSequenceOp,\n    StellarClaimClaimableBalanceOp: exports.StellarClaimClaimableBalanceOp,\n    StellarSignedTx: exports.StellarSignedTx,\n    TezosGetAddress: exports.TezosGetAddress,\n    TezosAddress: exports.TezosAddress,\n    TezosGetPublicKey: exports.TezosGetPublicKey,\n    TezosPublicKey: exports.TezosPublicKey,\n    TezosContractID: exports.TezosContractID,\n    TezosRevealOp: exports.TezosRevealOp,\n    TezosManagerTransfer: exports.TezosManagerTransfer,\n    TezosParametersManager: exports.TezosParametersManager,\n    TezosTransactionOp: exports.TezosTransactionOp,\n    TezosOriginationOp: exports.TezosOriginationOp,\n    TezosDelegationOp: exports.TezosDelegationOp,\n    TezosProposalOp: exports.TezosProposalOp,\n    TezosBallotOp: exports.TezosBallotOp,\n    TezosSignTx: exports.TezosSignTx,\n    TezosSignedTx: exports.TezosSignedTx,\n}, { $id: 'MessageType' });\n//# sourceMappingURL=messages-schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages-schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TezosBallotType = exports.TezosContractType = exports.StellarSignerType = exports.StellarMemoType = exports.StellarAssetType = exports.NEMImportanceTransferMode = exports.NEMModificationType = exports.NEMSupplyChangeType = exports.NEMMosaicLevy = exports.BootCommand = exports.Enum_WordRequestType = exports.SdProtectOperationType = exports.Enum_RecoveryType = exports.RecoveryDeviceInputMethod = exports.Enum_Capability = exports.Enum_RecoveryStatus = exports.Enum_BackupAvailability = exports.Enum_HomescreenFormat = exports.Enum_DisplayRotation = exports.Enum_SafetyCheckLevel = exports.Enum_BackupType = exports.EthereumDataType = exports.EthereumDefinitionType = exports.DebugWaitType = exports.DebugPhysicalButton = exports.DebugButton = exports.Enum_PinMatrixRequestType = exports.Enum_ButtonRequestType = exports.FailureType = exports.CardanoTxWitnessType = exports.CardanoTxSigningMode = exports.CardanoCVoteRegistrationFormat = exports.CardanoTxAuxiliaryDataSupplementType = exports.CardanoPoolRelayType = exports.CardanoDRepType = exports.CardanoCertificateType = exports.CardanoTxOutputSerializationFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptType = exports.CardanoAddressType = exports.CardanoDerivationType = exports.Enum_RequestType = exports.AmountUnit = exports.DecredStakingSpendType = exports.Enum_OutputScriptType = exports.Enum_InputScriptType = exports.BinanceTimeInForce = exports.BinanceOrderSide = exports.BinanceOrderType = exports.DeviceModelInternal = void 0;\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n    DeviceModelInternal[\"T3B1\"] = \"T3B1\";\n    DeviceModelInternal[\"T3T1\"] = \"T3T1\";\n    DeviceModelInternal[\"T3W1\"] = \"T3W1\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION_CONWAY\"] = 7] = \"STAKE_REGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION_CONWAY\"] = 8] = \"STAKE_DEREGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"VOTE_DELEGATION\"] = 9] = \"VOTE_DELEGATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nvar CardanoDRepType;\n(function (CardanoDRepType) {\n    CardanoDRepType[CardanoDRepType[\"KEY_HASH\"] = 0] = \"KEY_HASH\";\n    CardanoDRepType[CardanoDRepType[\"SCRIPT_HASH\"] = 1] = \"SCRIPT_HASH\";\n    CardanoDRepType[CardanoDRepType[\"ABSTAIN\"] = 2] = \"ABSTAIN\";\n    CardanoDRepType[CardanoDRepType[\"NO_CONFIDENCE\"] = 3] = \"NO_CONFIDENCE\";\n})(CardanoDRepType || (exports.CardanoDRepType = CardanoDRepType = {}));\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nvar DebugWaitType;\n(function (DebugWaitType) {\n    DebugWaitType[DebugWaitType[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    DebugWaitType[DebugWaitType[\"NEXT_LAYOUT\"] = 1] = \"NEXT_LAYOUT\";\n    DebugWaitType[DebugWaitType[\"CURRENT_LAYOUT\"] = 2] = \"CURRENT_LAYOUT\";\n})(DebugWaitType || (exports.DebugWaitType = DebugWaitType = {}));\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Single_Extendable\"] = 3] = \"Slip39_Single_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic_Extendable\"] = 4] = \"Slip39_Basic_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced_Extendable\"] = 5] = \"Slip39_Advanced_Extendable\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nvar Enum_DisplayRotation;\n(function (Enum_DisplayRotation) {\n    Enum_DisplayRotation[Enum_DisplayRotation[\"North\"] = 0] = \"North\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"East\"] = 90] = \"East\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"South\"] = 180] = \"South\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"West\"] = 270] = \"West\";\n})(Enum_DisplayRotation || (exports.Enum_DisplayRotation = Enum_DisplayRotation = {}));\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nvar Enum_BackupAvailability;\n(function (Enum_BackupAvailability) {\n    Enum_BackupAvailability[Enum_BackupAvailability[\"NotAvailable\"] = 0] = \"NotAvailable\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Required\"] = 1] = \"Required\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Available\"] = 2] = \"Available\";\n})(Enum_BackupAvailability || (exports.Enum_BackupAvailability = Enum_BackupAvailability = {}));\nvar Enum_RecoveryStatus;\n(function (Enum_RecoveryStatus) {\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Nothing\"] = 0] = \"Nothing\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Recovery\"] = 1] = \"Recovery\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Backup\"] = 2] = \"Backup\";\n})(Enum_RecoveryStatus || (exports.Enum_RecoveryStatus = Enum_RecoveryStatus = {}));\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n    Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n    Enum_Capability[Enum_Capability[\"Capability_Brightness\"] = 20] = \"Capability_Brightness\";\n    Enum_Capability[Enum_Capability[\"Capability_Haptic\"] = 21] = \"Capability_Haptic\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nvar RecoveryDeviceInputMethod;\n(function (RecoveryDeviceInputMethod) {\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"ScrambledWords\"] = 0] = \"ScrambledWords\";\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"Matrix\"] = 1] = \"Matrix\";\n})(RecoveryDeviceInputMethod || (exports.RecoveryDeviceInputMethod = RecoveryDeviceInputMethod = {}));\nvar Enum_RecoveryType;\n(function (Enum_RecoveryType) {\n    Enum_RecoveryType[Enum_RecoveryType[\"NormalRecovery\"] = 0] = \"NormalRecovery\";\n    Enum_RecoveryType[Enum_RecoveryType[\"DryRun\"] = 1] = \"DryRun\";\n    Enum_RecoveryType[Enum_RecoveryType[\"UnlockRepeatedBackup\"] = 2] = \"UnlockRepeatedBackup\";\n})(Enum_RecoveryType || (exports.Enum_RecoveryType = Enum_RecoveryType = {}));\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/types.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/types.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2l3by1wbGF0Zm9ybS9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMessageFromType = exports.createMessageFromName = exports.isPrimitiveField = void 0;\nexports.parseConfigure = parseConfigure;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs\");\nconst protobuf = tslib_1.__importStar(__webpack_require__(/*! protobufjs/light */ \"(ssr)/./node_modules/.pnpm/protobufjs@7.4.0/node_modules/protobufjs/light.js\"));\nconst primitiveTypes = [\n    'bool',\n    'string',\n    'bytes',\n    'int32',\n    'int64',\n    'uint32',\n    'uint64',\n    'sint32',\n    'sint64',\n    'fixed32',\n    'fixed64',\n    'sfixed32',\n    'sfixed64',\n    'double',\n    'float',\n];\nconst isPrimitiveField = (field) => primitiveTypes.includes(field);\nexports.isPrimitiveField = isPrimitiveField;\nfunction parseConfigure(data) {\n    if (typeof data === 'string') {\n        return protobuf.Root.fromJSON(JSON.parse(data));\n    }\n    return protobuf.Root.fromJSON(data);\n}\nconst createMessageFromName = (messages, name) => {\n    const Message = messages.lookupType(name);\n    const messageTypes = messages.lookupEnum('MessageType');\n    let messageTypeId = messageTypes.values[name];\n    if (typeof messageTypeId !== 'number' && Message.options) {\n        messageTypeId = Message.options['(wire_type)'];\n    }\n    return {\n        Message,\n        messageType: messageTypeId !== null && messageTypeId !== void 0 ? messageTypeId : name,\n    };\n};\nexports.createMessageFromName = createMessageFromName;\nconst createMessageFromType = (messages, messageType) => {\n    if (typeof messageType === 'string') {\n        const Message = messages.lookupType(messageType);\n        return {\n            Message,\n            messageName: messageType,\n        };\n    }\n    const messageTypes = messages.lookupEnum('MessageType');\n    const messageName = messageTypes.valuesById[messageType];\n    const Message = messages.lookupType(messageName);\n    return {\n        Message,\n        messageName,\n    };\n};\nexports.createMessageFromType = createMessageFromType;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRyZXpvcitwcm90b2J1ZkAxLjIuNl90c2xpYkAyLjguMS9ub2RlX21vZHVsZXMvQHRyZXpvci9wcm90b2J1Zi9saWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsNkJBQTZCLEdBQUcsd0JBQXdCO0FBQ3hGLHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBTztBQUMvQixzQ0FBc0MsbUJBQU8sQ0FBQyxzR0FBa0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvaXdvLXBsYXRmb3JtL25vZGVfbW9kdWxlcy8ucG5wbS9AdHJlem9yK3Byb3RvYnVmQDEuMi42X3RzbGliQDIuOC4xL25vZGVfbW9kdWxlcy9AdHJlem9yL3Byb3RvYnVmL2xpYi91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gZXhwb3J0cy5jcmVhdGVNZXNzYWdlRnJvbU5hbWUgPSBleHBvcnRzLmlzUHJpbWl0aXZlRmllbGQgPSB2b2lkIDA7XG5leHBvcnRzLnBhcnNlQ29uZmlndXJlID0gcGFyc2VDb25maWd1cmU7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcHJvdG9idWYgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwicHJvdG9idWZqcy9saWdodFwiKSk7XG5jb25zdCBwcmltaXRpdmVUeXBlcyA9IFtcbiAgICAnYm9vbCcsXG4gICAgJ3N0cmluZycsXG4gICAgJ2J5dGVzJyxcbiAgICAnaW50MzInLFxuICAgICdpbnQ2NCcsXG4gICAgJ3VpbnQzMicsXG4gICAgJ3VpbnQ2NCcsXG4gICAgJ3NpbnQzMicsXG4gICAgJ3NpbnQ2NCcsXG4gICAgJ2ZpeGVkMzInLFxuICAgICdmaXhlZDY0JyxcbiAgICAnc2ZpeGVkMzInLFxuICAgICdzZml4ZWQ2NCcsXG4gICAgJ2RvdWJsZScsXG4gICAgJ2Zsb2F0Jyxcbl07XG5jb25zdCBpc1ByaW1pdGl2ZUZpZWxkID0gKGZpZWxkKSA9PiBwcmltaXRpdmVUeXBlcy5pbmNsdWRlcyhmaWVsZCk7XG5leHBvcnRzLmlzUHJpbWl0aXZlRmllbGQgPSBpc1ByaW1pdGl2ZUZpZWxkO1xuZnVuY3Rpb24gcGFyc2VDb25maWd1cmUoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHByb3RvYnVmLlJvb3QuZnJvbUpTT04oSlNPTi5wYXJzZShkYXRhKSk7XG4gICAgfVxuICAgIHJldHVybiBwcm90b2J1Zi5Sb290LmZyb21KU09OKGRhdGEpO1xufVxuY29uc3QgY3JlYXRlTWVzc2FnZUZyb21OYW1lID0gKG1lc3NhZ2VzLCBuYW1lKSA9PiB7XG4gICAgY29uc3QgTWVzc2FnZSA9IG1lc3NhZ2VzLmxvb2t1cFR5cGUobmFtZSk7XG4gICAgY29uc3QgbWVzc2FnZVR5cGVzID0gbWVzc2FnZXMubG9va3VwRW51bSgnTWVzc2FnZVR5cGUnKTtcbiAgICBsZXQgbWVzc2FnZVR5cGVJZCA9IG1lc3NhZ2VUeXBlcy52YWx1ZXNbbmFtZV07XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlVHlwZUlkICE9PSAnbnVtYmVyJyAmJiBNZXNzYWdlLm9wdGlvbnMpIHtcbiAgICAgICAgbWVzc2FnZVR5cGVJZCA9IE1lc3NhZ2Uub3B0aW9uc1snKHdpcmVfdHlwZSknXTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgTWVzc2FnZSxcbiAgICAgICAgbWVzc2FnZVR5cGU6IG1lc3NhZ2VUeXBlSWQgIT09IG51bGwgJiYgbWVzc2FnZVR5cGVJZCAhPT0gdm9pZCAwID8gbWVzc2FnZVR5cGVJZCA6IG5hbWUsXG4gICAgfTtcbn07XG5leHBvcnRzLmNyZWF0ZU1lc3NhZ2VGcm9tTmFtZSA9IGNyZWF0ZU1lc3NhZ2VGcm9tTmFtZTtcbmNvbnN0IGNyZWF0ZU1lc3NhZ2VGcm9tVHlwZSA9IChtZXNzYWdlcywgbWVzc2FnZVR5cGUpID0+IHtcbiAgICBpZiAodHlwZW9mIG1lc3NhZ2VUeXBlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBNZXNzYWdlID0gbWVzc2FnZXMubG9va3VwVHlwZShtZXNzYWdlVHlwZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBNZXNzYWdlLFxuICAgICAgICAgICAgbWVzc2FnZU5hbWU6IG1lc3NhZ2VUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlVHlwZXMgPSBtZXNzYWdlcy5sb29rdXBFbnVtKCdNZXNzYWdlVHlwZScpO1xuICAgIGNvbnN0IG1lc3NhZ2VOYW1lID0gbWVzc2FnZVR5cGVzLnZhbHVlc0J5SWRbbWVzc2FnZVR5cGVdO1xuICAgIGNvbnN0IE1lc3NhZ2UgPSBtZXNzYWdlcy5sb29rdXBUeXBlKG1lc3NhZ2VOYW1lKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBNZXNzYWdlLFxuICAgICAgICBtZXNzYWdlTmFtZSxcbiAgICB9O1xufTtcbmV4cG9ydHMuY3JlYXRlTWVzc2FnZUZyb21UeXBlID0gY3JlYXRlTWVzc2FnZUZyb21UeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@trezor+protobuf@1.2.6_tslib@2.8.1/node_modules/@trezor/protobuf/lib/utils.js\n");

/***/ })

};
;